{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/admin/annee_scolaire/create-annee-scolaire/create-annee-scolaire.component.ts","./src/app/components/admin/annee_scolaire/create-annee-scolaire/create-annee-scolaire.component.html","./src/app/components/admin/annee_scolaire/list-annee-scolaire/list-annee-scolaire.component.ts","./src/app/components/admin/annee_scolaire/list-annee-scolaire/list-annee-scolaire.component.html","./src/app/components/admin/annee_scolaire/update-annee-scolaire/update-annee-scolaire.component.ts","./src/app/components/admin/annee_scolaire/update-annee-scolaire/update-annee-scolaire.component.html","./src/app/components/admin/classe/classe-matieres/classe-matieres.component.ts","./src/app/components/admin/classe/classe-matieres/classe-matieres.component.html","./src/app/components/admin/classe/classe-students/classe-students.component.ts","./src/app/components/admin/classe/classe-students/classe-students.component.html","./src/app/components/admin/classe/create-classe/create-classe.component.ts","./src/app/components/admin/classe/create-classe/create-classe.component.html","./src/app/components/admin/classe/list-classe/list-classe.component.ts","./src/app/components/admin/classe/list-classe/list-classe.component.html","./src/app/components/admin/classe/prof-add-edit/prof-add-edit.component.ts","./src/app/components/admin/classe/prof-add-edit/prof-add-edit.component.html","./src/app/components/admin/classe/update-classe/update-classe.component.ts","./src/app/components/admin/classe/update-classe/update-classe.component.html","./src/app/components/admin/etudiant/create-etudiant/create-etudiant.component.ts","./src/app/components/admin/etudiant/create-etudiant/create-etudiant.component.html","./src/app/components/admin/etudiant/etudiant-notes/etudiant-notes.component.ts","./src/app/components/admin/etudiant/etudiant-notes/etudiant-notes.component.html","./src/app/components/admin/etudiant/inscription-liste/inscription-liste.component.ts","./src/app/components/admin/etudiant/inscription-liste/inscription-liste.component.html","./src/app/components/admin/etudiant/inscription/inscription.component.ts","./src/app/components/admin/etudiant/inscription/inscription.component.html","./src/app/components/admin/etudiant/list-etudiant/list-etudiant.component.ts","./src/app/components/admin/etudiant/list-etudiant/list-etudiant.component.html","./src/app/components/admin/etudiant/update-etudiant/update-etudiant.component.ts","./src/app/components/admin/etudiant/update-etudiant/update-etudiant.component.html","./src/app/components/admin/filiere/create-filiere/create-filiere.component.ts","./src/app/components/admin/filiere/create-filiere/create-filiere.component.html","./src/app/components/admin/filiere/filiere-ue/filiere-ue.component.ts","./src/app/components/admin/filiere/filiere-ue/filiere-ue.component.html","./src/app/components/admin/filiere/list-filiere/list-filiere.component.ts","./src/app/components/admin/filiere/list-filiere/list-filiere.component.html","./src/app/components/admin/filiere/update-filiere/update-filiere.component.ts","./src/app/components/admin/filiere/update-filiere/update-filiere.component.html","./src/app/components/admin/matiere/create-matiere/create-matiere.component.ts","./src/app/components/admin/matiere/create-matiere/create-matiere.component.html","./src/app/components/admin/matiere/list-matiere/list-matiere.component.ts","./src/app/components/admin/matiere/list-matiere/list-matiere.component.html","./src/app/components/admin/matiere/update-matiere/update-matiere.component.ts","./src/app/components/admin/matiere/update-matiere/update-matiere.component.html","./src/app/components/admin/note/note.component.ts","./src/app/components/admin/note/note.component.html","./src/app/components/admin/professeur/create-prof/create-prof.component.ts","./src/app/components/admin/professeur/create-prof/create-prof.component.html","./src/app/components/admin/professeur/list-prof/list-prof.component.ts","./src/app/components/admin/professeur/list-prof/list-prof.component.html","./src/app/components/admin/professeur/matieres-prof/matieres-prof.component.ts","./src/app/components/admin/professeur/matieres-prof/matieres-prof.component.html","./src/app/components/admin/professeur/update-prof/update-prof.component.ts","./src/app/components/admin/professeur/update-prof/update-prof.component.html","./src/app/components/admin/report/fiche/fiche.component.ts","./src/app/components/admin/report/fiche/fiche.component.html","./src/app/components/admin/report/releve/releve.component.ts","./src/app/components/admin/report/releve/releve.component.html","./src/app/components/admin/semestre/list-semestre/list-semestre.component.ts","./src/app/components/admin/semestre/list-semestre/list-semestre.component.html","./src/app/components/admin/ue/create-ue/create-ue.component.ts","./src/app/components/admin/ue/create-ue/create-ue.component.html","./src/app/components/admin/ue/list-ue/list-ue.component.ts","./src/app/components/admin/ue/list-ue/list-ue.component.html","./src/app/components/admin/ue/update-ue/update-ue.component.ts","./src/app/components/admin/ue/update-ue/update-ue.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/guards/auth.guard.ts","./src/app/guards/noauth.guard.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/modules/material-design/material-design.module.ts","./src/app/services/annee/annee.service.ts","./src/app/services/auth/login.service.ts","./src/app/services/classe/classe.service.ts","./src/app/services/destroy/destroy.service.ts","./src/app/services/enseigner/enseigner.service.ts","./src/app/services/etudiant/etudiant.service.ts","./src/app/services/filiere/filiere.service.ts","./src/app/services/filiereue/filiereue.service.ts","./src/app/services/inscription/inscription.service.ts","./src/app/services/loader/loader-interceptor.service.ts","./src/app/services/loader/loader.service.ts","./src/app/services/matiere/matiere.service.ts","./src/app/services/note/note.service.ts","./src/app/services/prof/prof.service.ts","./src/app/services/report/report.service.ts","./src/app/services/ue/ue.service.ts","./src/app/sidebar/sidebar.component.ts","./src/app/sidebar/sidebar.component.html","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NoauthGuard } from './guards/noauth.guard';\r\nimport { ListUeComponent } from './components/admin/ue/list-ue/list-ue.component';\r\nimport { CreateUeComponent } from './components/admin/ue/create-ue/create-ue.component';\r\nimport { UpdateUeComponent } from './components/admin/ue/update-ue/update-ue.component';\r\nimport { ListMatiereComponent } from './components/admin/matiere/list-matiere/list-matiere.component';\r\nimport { CreateMatiereComponent } from './components/admin/matiere/create-matiere/create-matiere.component';\r\nimport { UpdateMatiereComponent } from './components/admin/matiere/update-matiere/update-matiere.component';\r\nimport { ListFiliereComponent } from './components/admin/filiere/list-filiere/list-filiere.component';\r\nimport { CreateFiliereComponent } from './components/admin/filiere/create-filiere/create-filiere.component';\r\nimport { UpdateFiliereComponent } from './components/admin/filiere/update-filiere/update-filiere.component';\r\nimport { ListClasseComponent } from './components/admin/classe/list-classe/list-classe.component';\r\nimport { CreateClasseComponent } from './components/admin/classe/create-classe/create-classe.component';\r\nimport { UpdateClasseComponent } from './components/admin/classe/update-classe/update-classe.component';\r\nimport { ListSemestreComponent } from './components/admin/semestre/list-semestre/list-semestre.component';\r\nimport { ListAnneeScolaireComponent } from './components/admin/annee_scolaire/list-annee-scolaire/list-annee-scolaire.component';\r\nimport { CreateAnneeScolaireComponent } from './components/admin/annee_scolaire/create-annee-scolaire/create-annee-scolaire.component';\r\nimport { UpdateAnneeScolaireComponent } from './components/admin/annee_scolaire/update-annee-scolaire/update-annee-scolaire.component';\r\nimport { ListProfComponent } from './components/admin/professeur/list-prof/list-prof.component';\r\nimport { CreateProfComponent } from './components/admin/professeur/create-prof/create-prof.component';\r\nimport { UpdateProfComponent } from './components/admin/professeur/update-prof/update-prof.component';\r\nimport { MatieresProfComponent } from './components/admin/professeur/matieres-prof/matieres-prof.component';\r\nimport { FiliereUeComponent } from './components/admin/filiere/filiere-ue/filiere-ue.component';\r\nimport { ListEtudiantComponent } from './components/admin/etudiant/list-etudiant/list-etudiant.component';\r\nimport { CreateEtudiantComponent } from './components/admin/etudiant/create-etudiant/create-etudiant.component';\r\nimport { UpdateEtudiantComponent } from './components/admin/etudiant/update-etudiant/update-etudiant.component';\r\nimport { InscriptionComponent } from './components/admin/etudiant/inscription/inscription.component';\r\nimport { InscriptionListeComponent } from './components/admin/etudiant/inscription-liste/inscription-liste.component';\r\nimport { NoteComponent } from './components/admin/note/note.component';\r\nimport { ClasseStudentsComponent } from './components/admin/classe/classe-students/classe-students.component';\r\nimport { ClasseMatieresComponent } from './components/admin/classe/classe-matieres/classe-matieres.component';\r\nimport { EtudiantNotesComponent } from './components/admin/etudiant/etudiant-notes/etudiant-notes.component';\r\nimport { FicheComponent } from './components/admin/report/fiche/fiche.component';\r\nimport { ReleveComponent } from './components/admin/report/releve/releve.component';\r\n\r\nconst routes: Routes = [\r\n  // { path: '', component: DashboardComponent },\r\n  { path: 'login', component: LoginComponent, canActivate: [NoauthGuard] },\r\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\r\n  //NOTE UE ROUTES\r\n  { path: 'dashboard/ue', component: ListUeComponent, canActivate: [AuthGuard] },\r\n  { path: 'dashboard/ue/create', component: CreateUeComponent, canActivate: [AuthGuard] },\r\n  { path: 'dashboard/ue/update/:id', component: UpdateUeComponent, canActivate: [AuthGuard] },\r\n  //NOTE: Matiere Routes\r\n  { path: 'dashboard/matiere', component: ListMatiereComponent, canActivate: [AuthGuard] },\r\n  { path: 'dashboard/matiere/create', component: CreateMatiereComponent, canActivate: [AuthGuard] },\r\n  { path: 'dashboard/matiere/update/:id', component: UpdateMatiereComponent, canActivate: [AuthGuard] },\r\n  //NOTE: Filiere Routes\r\n  { path: 'dashboard/filiere', component: ListFiliereComponent, canActivate: [AuthGuard] },\r\n  { path: 'dashboard/filiere/create', component: CreateFiliereComponent, canActivate: [AuthGuard] },\r\n  { path: 'dashboard/filiere/update/:id', component: UpdateFiliereComponent, canActivate: [AuthGuard] },\r\n  { path: 'dashboard/filiere/ues/:id', component: FiliereUeComponent, canActivate: [AuthGuard] },\r\n  //NOTE: Classe Routes\r\n  { path: 'dashboard/classe', component: ListClasseComponent, canActivate: [AuthGuard] },\r\n  { path: 'dashboard/classe/create', component: CreateClasseComponent, canActivate: [AuthGuard] },\r\n  { path: 'dashboard/classe/update/:id', component: UpdateClasseComponent, canActivate: [AuthGuard] },\r\n  { path: 'dashboard/classe/students/:id', component: ClasseStudentsComponent, canActivate: [AuthGuard] },\r\n  { path: 'dashboard/classe/matieres/:id', component: ClasseMatieresComponent, canActivate: [AuthGuard] },\r\n  //NOTE: Professeur Routes\r\n  { path: 'dashboard/professeur', component: ListProfComponent, canActivate: [AuthGuard] },\r\n  { path: 'dashboard/professeur/create', component: CreateProfComponent, canActivate: [AuthGuard] },\r\n  { path: 'dashboard/professeur/matieres/:id', component: MatieresProfComponent, canActivate: [AuthGuard] },\r\n  { path: 'dashboard/professeur/update/:id', component: UpdateProfComponent, canActivate: [AuthGuard] },\r\n  //NOTE: Annee Scolaire Routes\r\n  { path: 'dashboard/annee', component: ListAnneeScolaireComponent, canActivate: [AuthGuard] },\r\n  { path: 'dashboard/annee/create', component: CreateAnneeScolaireComponent, canActivate: [AuthGuard] },\r\n  { path: 'dashboard/annee/update/:id', component: UpdateAnneeScolaireComponent, canActivate: [AuthGuard] },\r\n  //NOTE: Semestre Routes\r\n  { path: 'dashboard/semestre', component: ListSemestreComponent, canActivate: [AuthGuard] },\r\n  //NOTE: Etudiant,Inscription\r\n  {path:'dashboard/etudiant',component:ListEtudiantComponent,canActivate:[AuthGuard]},\r\n  {path:'dashboard/etudiant/create',component:CreateEtudiantComponent,canActivate:[AuthGuard]},\r\n  {path:'dashboard/etudiant/update/:matricule',component:UpdateEtudiantComponent,canActivate:[AuthGuard]},\r\n  {path:'dashboard/etudiant/inscription/:matricule',component:InscriptionComponent,canActivate:[AuthGuard]},\r\n  {path:'dashboard/etudiant/inscriptions',component:InscriptionListeComponent,canActivate:[AuthGuard]},\r\n  //NOTE: MATIERES NOTE ROUTE\r\n  {path:'dashboard/notes',component:NoteComponent,canActivate:[AuthGuard]},\r\n  {path:'dashboard/notes/etudiants/:etudiant/:classe',component:EtudiantNotesComponent,canActivate:[AuthGuard]},\r\n  //NOTE: ROUTES FOR REPORT\r\n  {path:'dashboard/report/fichedenotes',component:FicheComponent,canActivate:[AuthGuard]},\r\n  {path:'dashboard/report/relevedenotes',component:ReleveComponent,canActivate:[AuthGuard]},\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n","<div *ngIf=\"!isRouteActive('/login')\">\r\n    <app-header></app-header>\r\n\r\n    <app-sidebar></app-sidebar>\r\n\r\n\r\n\r\n    <div class=\"page-wrapper\">\r\n        <div class=\"content container-fluid\" >\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<app-login *ngIf=\"isRouteActive('/login')\" ></app-login>\r\n\r\n\r\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private router: Router) {}\n  isRouteActive(routePath: string): boolean {\n    return this.router.isActive(routePath, false);\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialDesignModule } from './modules/material-design/material-design.module';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { ListAnneeScolaireComponent } from './components/admin/annee_scolaire/list-annee-scolaire/list-annee-scolaire.component';\r\nimport { UpdateAnneeScolaireComponent } from './components/admin/annee_scolaire/update-annee-scolaire/update-annee-scolaire.component';\r\nimport { CreateAnneeScolaireComponent } from './components/admin/annee_scolaire/create-annee-scolaire/create-annee-scolaire.component';\r\nimport { CreateClasseComponent } from './components/admin/classe/create-classe/create-classe.component';\r\nimport { UpdateClasseComponent } from './components/admin/classe/update-classe/update-classe.component';\r\nimport { ListClasseComponent } from './components/admin/classe/list-classe/list-classe.component';\r\nimport { CreateFiliereComponent } from './components/admin/filiere/create-filiere/create-filiere.component';\r\nimport { UpdateFiliereComponent } from './components/admin/filiere/update-filiere/update-filiere.component';\r\nimport { ListFiliereComponent } from './components/admin/filiere/list-filiere/list-filiere.component';\r\nimport { CreateMatiereComponent } from './components/admin/matiere/create-matiere/create-matiere.component';\r\nimport { UpdateMatiereComponent } from './components/admin/matiere/update-matiere/update-matiere.component';\r\nimport { ListMatiereComponent } from './components/admin/matiere/list-matiere/list-matiere.component';\r\nimport { ListSemestreComponent } from './components/admin/semestre/list-semestre/list-semestre.component';\r\nimport { CreateUeComponent } from './components/admin/ue/create-ue/create-ue.component';\r\nimport { ListUeComponent } from './components/admin/ue/list-ue/list-ue.component';\r\nimport { UpdateUeComponent } from './components/admin/ue/update-ue/update-ue.component';\r\nimport { CreateProfComponent } from './components/admin/professeur/create-prof/create-prof.component';\r\nimport { ListProfComponent } from './components/admin/professeur/list-prof/list-prof.component';\r\nimport { UpdateProfComponent } from './components/admin/professeur/update-prof/update-prof.component';\r\nimport { MatieresProfComponent } from './components/admin/professeur/matieres-prof/matieres-prof.component';\r\nimport { FiliereUeComponent } from './components/admin/filiere/filiere-ue/filiere-ue.component';\r\nimport { InscriptionComponent } from './components/admin/etudiant/inscription/inscription.component';\r\nimport { CreateEtudiantComponent } from './components/admin/etudiant/create-etudiant/create-etudiant.component';\r\nimport { UpdateEtudiantComponent } from './components/admin/etudiant/update-etudiant/update-etudiant.component';\r\nimport { ListEtudiantComponent } from './components/admin/etudiant/list-etudiant/list-etudiant.component';\r\nimport { NoteComponent } from './components/admin/note/note.component';\r\nimport { InscriptionListeComponent } from './components/admin/etudiant/inscription-liste/inscription-liste.component';\r\nimport { ClasseStudentsComponent } from './components/admin/classe/classe-students/classe-students.component';\r\nimport { ClasseMatieresComponent } from './components/admin/classe/classe-matieres/classe-matieres.component';\r\nimport { ProfAddEditComponent } from './components/admin/classe/prof-add-edit/prof-add-edit.component';\r\nimport { EtudiantNotesComponent } from './components/admin/etudiant/etudiant-notes/etudiant-notes.component';\r\nimport { FicheComponent } from './components/admin/report/fiche/fiche.component';\r\nimport { ReleveComponent } from './components/admin/report/releve/releve.component';\r\nimport { LoaderInterceptorService } from './services/loader/loader-interceptor.service';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    SidebarComponent,\r\n    HeaderComponent,\r\n    LoginComponent,\r\n    ListAnneeScolaireComponent,\r\n    CreateAnneeScolaireComponent,\r\n    UpdateAnneeScolaireComponent,\r\n    CreateClasseComponent,\r\n    UpdateClasseComponent,\r\n    ListClasseComponent,\r\n    CreateFiliereComponent,\r\n    UpdateFiliereComponent,\r\n    ListFiliereComponent,\r\n    CreateMatiereComponent,\r\n    UpdateMatiereComponent,\r\n    ListMatiereComponent,\r\n    ListSemestreComponent,\r\n    CreateUeComponent,\r\n    ListUeComponent,\r\n    UpdateUeComponent,\r\n    CreateProfComponent,\r\n    ListProfComponent,\r\n    UpdateProfComponent,\r\n    MatieresProfComponent,\r\n    FiliereUeComponent,\r\n    InscriptionComponent,\r\n    CreateEtudiantComponent,\r\n    UpdateEtudiantComponent,\r\n    ListEtudiantComponent,\r\n    NoteComponent,\r\n    InscriptionListeComponent,\r\n    ClasseStudentsComponent,\r\n    ClasseMatieresComponent,\r\n    ProfAddEditComponent,\r\n    EtudiantNotesComponent,\r\n    FicheComponent,\r\n    ReleveComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    RouterModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    ToastrModule.forRoot(),\r\n    SweetAlert2Module.forRoot(),\r\n    MaterialDesignModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [\r\n    {provide:HTTP_INTERCEPTORS,\r\n      useClass:LoaderInterceptorService,multi:true}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Subscription, takeUntil } from 'rxjs';\r\nimport { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AnneeService } from 'src/app/services/annee/annee.service';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\n\r\n@Component({\r\n  selector: 'app-create-annee-scolaire',\r\n  templateUrl: './create-annee-scolaire.component.html',\r\n  styleUrls: ['./create-annee-scolaire.component.css']\r\n})\r\nexport class CreateAnneeScolaireComponent   implements OnInit {\r\n  hintColor = \"red\";\r\n  registerForm!: FormGroup;\r\n\r\n\r\n  //NOTE: DEPENDENCY INJECTION\r\n  private fb = inject(FormBuilder);\r\n  private service = inject(AnneeService);\r\n  private toastr = inject(ToastrService);\r\n  private destroyService = inject(DestroyService);\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = this.fb.group({\r\n      name: [null, [Validators.required, Validators.minLength(4)]],\r\n      enabled: [0],\r\n      dateDebut: [null, [Validators.required]],\r\n      dateFin: [null, [Validators.required]]\r\n    });\r\n  } \r\n\r\n  register() {\r\n    const annee = this.registerForm.value;\r\n    this.service.postRegistration(annee).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: () => {\r\n          this.registerForm.setValue({\r\n            name: \"\",\r\n            enabled: false,\r\n            dateDebut: null,\r\n            dateFin: null\r\n          });\r\n        },\r\n        error: (error) => {\r\n            this.toastr.error(error.error);\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  get name():FormControl{\r\n    return this.registerForm.get('name')  as FormControl;\r\n  }\r\n\r\n  get dateDebut():FormControl{\r\n    return this.registerForm.get(\"dateDebut\") as FormControl;\r\n  }\r\n\r\n  get dateFin():FormControl{\r\n    return this.registerForm.get('dateFin') as FormControl;\r\n  }\r\n\r\n  get enabled():FormControl{\r\n    return this.registerForm.get('enabled') as FormControl;\r\n  }\r\n\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">ENREGISTREMENT ANNEE SCOLAIRE</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">TABLEAU DE BORD</a></li>\r\n                <li class=\"breadcrumb-item active\"><a routerLink=\"/dashboard/annee\">ANNEE SCOLAIRE</a></li>\r\n                <li class=\"breadcrumb-item active\">ENREGISTRER</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-3\"></div>\r\n    <div class=\"col-sm-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"registerForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 d-flex justify-content-center\"> <!-- Modified line -->\r\n                            <h5><span>ANNEE SCOLAIRE</span></h5>\r\n                            <br>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>Entrez LE NOM </mat-label>\r\n                                <input matInput formControlName=\"name\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': name.errors?.['required'] && name.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\r\n                                <div *ngIf=\"name.touched && name.invalid\">\r\n                                    <mat-error *ngIf=\"name.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                        rentrer une valeur</mat-error>\r\n                                    <mat-error *ngIf=\"name.errors?.['minlength']\" [ngClass]=\"{color:   hintColor}\">Entrez\r\n                                        au minimum 4\r\n                                        lettres</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n\r\n                            <div class=\"col-12\">\r\n                                <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                    <mat-label>DATE DE DEBUT </mat-label>\r\n                                    <input matInput [matDatepicker]=\"picker\" formControlName=\"dateDebut\">\r\n                                    <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                    <mat-datepicker #picker></mat-datepicker>\r\n                                    <div *ngIf=\"dateDebut.touched && dateDebut.invalid\">\r\n                                        <mat-error *ngIf=\"dateDebut.errors?.['required']\"\r\n                                            [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                            rentrer une valeur</mat-error>\r\n                                    </div>\r\n                                </mat-form-field>\r\n                            </div>\r\n\r\n                            <div class=\"col-12\">\r\n                                <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                    <mat-label>DATE DE FIN </mat-label>\r\n                                    <input matInput [matDatepicker]=\"picke\" formControlName=\"dateFin\">\r\n                                    <mat-datepicker-toggle matIconSuffix [for]=\"picke\"></mat-datepicker-toggle>\r\n                                    <mat-datepicker #picke></mat-datepicker>\r\n                                    <div *ngIf=\"dateFin.touched && dateFin.invalid\">\r\n                                        <mat-error *ngIf=\"dateFin.errors?.['required']\"\r\n                                            [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                            rentrer une valeur</mat-error>\r\n                                    </div>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"col-12\">\r\n                                <mat-radio-group formControlName=\"enabled\" aria-label=\"Select\" >\r\n                                    <mat-radio-button [checked]=\"true\" [value]=\"0\">INACTIVE</mat-radio-button>\r\n                                    <mat-radio-button  [value]=\"1\">ACTIVE</mat-radio-button>\r\n                                </mat-radio-group>\r\n                            </div>\r\n                            <!-- <mat-form-field appearance=\"outline\" color=\"primary\" [style.display]=\"'none'\">\r\n                                <input matInput formControlName=\"totalCredit\" type=\"text\"  />\r\n                            </mat-form-field> -->\r\n                        </div>\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6\" color=\"primary\"\r\n                                [disabled]=\"registerForm.invalid\" (click)=\"register()\">ENREGISTRER</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, ViewChild, inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription, takeUntil } from 'rxjs';\r\nimport { Annee } from 'src/app/models/Annee';\r\nimport { AnneeService } from 'src/app/services/annee/annee.service';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\n\r\n@Component({\r\n  selector: 'app-list-annee-scolaire',\r\n  templateUrl: './list-annee-scolaire.component.html',\r\n  styleUrls: ['./list-annee-scolaire.component.css']\r\n})\r\nexport class ListAnneeScolaireComponent implements OnInit {\r\n\r\n  public annees!: Annee[];\r\n  @ViewChild(MatPaginator) paginator !: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  public dataSource!: MatTableDataSource<Annee>;\r\n  displayedColumns: string[] = ['id', 'name', 'dateDebut', 'dateFin', 'enabled', 'action'];\r\n\r\n  //NOTE:INJECTIONS\r\n  private service = inject(AnneeService);\r\n  private router = inject(Router);\r\n  private toastr = inject(ToastrService);\r\n  private destroyService = inject(DestroyService);\r\n\r\n  ngOnInit(): void {\r\n    this.getAll();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAll() {\r\n    this.service.getAll().pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.annees = response;\r\n          this.dataSource = new MatTableDataSource(this.annees);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        },\r\n        error: (error) => {\r\n          this.toastr.error(\"LOADING LIST FAILED\",\"ERROR\");\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  edit(id: number) {\r\n    this.router.navigate([\"/dashboard/annee/update/\" + id]);\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.service.delete(id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n      next: () => {\r\n        this.getAll();\r\n      }, error: (error) => {\r\n        this.toastr.error(\"SUPPRESSION FAILED\",\"ERROR\");\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  changeActive( id: number) {\r\n    this.service.activeAnnee(id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(result => {\r\n      this.getAll();\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">ANNEE SCOLAIRE</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">TABLEAU DE BORD</a></li>\r\n                <li class=\"breadcrumb-item act  ive\">ANNEE SCOLAIRE</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <h5 class=\"form-title\"><span>LISTE DES ANNEE SCOLAIRES</span></h5>\r\n                    </div>\r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <a mat-raised-button color=\"primary\" class=\"add-button\"\r\n                            routerLink=\"/dashboard/annee/create\">AJOUTER</a>\r\n                    </div>\r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Filtrer</mat-label>\r\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"2021-2022\" #input>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"mat-elevation-z8\">\r\n                        <div class=\"responsive-container table-responsive\">\r\n                            <table mat-table [dataSource]=\"dataSource\" matSort class=\"table border-0 star-student table-hover table-center mb-0 datatable table-striped\">\r\n                                <!-- ID Column -->\r\n                                <!-- Row Number Column -->\r\n                                <ng-container matColumnDef=\"id\">\r\n                                    <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                                    <td mat-cell *matCellDef=\"let i = index\"> {{ i + 1 }} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- FirstName Column -->\r\n                                <ng-container matColumnDef=\"name\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ANNEE SCOLAIRE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- lastName Column -->\r\n                                <ng-container matColumnDef=\"dateDebut\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> DATE DEBUT</th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.dateDebut | date:'dd MMMM yyyy'}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- lastName Column -->\r\n                                <ng-container matColumnDef=\"dateFin\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> DATE FIN</th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.dateFin | date:'dd MMMM yyyy' }} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- lastName Column -->\r\n                                <ng-container matColumnDef=\"enabled\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> STATUS </th>\r\n                                    <td mat-cell *matCellDef=\"let row\">\r\n                                        <mat-slide-toggle [checked]=\"row.enabled\"\r\n                                            (change)=\"changeActive(row.id)\">ACTIVER</mat-slide-toggle>\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n                                <!-- action Column -->\r\n                                <ng-container matColumnDef=\"action\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </th>\r\n                                    <td mat-cell *matCellDef=\"let row\">\r\n                                        <button mat-icon-button color=\"primary\" (click)=\"edit(row.id)\">\r\n                                            <mat-icon matSuffix>edit</mat-icon>\r\n\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"warn\" [swal]=\"deleteSwal\">\r\n                                            <mat-icon matSuffix>delete</mat-icon>\r\n                                        </button>\r\n                                        <swal #deleteSwal title=\"Voulez vous supprimer l'ANNEE SCOLAIRE\"\r\n                                            text=\"Vous ne pourrez plus revenir en arriere\" icon=\"warning\"\r\n                                            [showCancelButton]=\"true\" [focusCancel]=\"true\" (confirm)=\"delete(row.id)\">\r\n                                        </swal>\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                <!-- Row shown when there is no matching data. -->\r\n                                <tr class=\"mat-row\" *matNoDataRow>\r\n                                    <td class=\"mat-cell\" colspan=\"4\">AUCUNE DONNEE NE CORRESPOND A \"{{input.value}}\"\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n                            aria-label=\"Select page of users\"></mat-paginator>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy, inject } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription, takeUntil } from 'rxjs';\r\nimport { Annee } from 'src/app/models/Annee';\r\nimport { AnneeService } from 'src/app/services/annee/annee.service';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\n\r\n@Component({\r\n  selector: 'app-update-annee-scolaire',\r\n  templateUrl: './update-annee-scolaire.component.html',\r\n  styleUrls: ['./update-annee-scolaire.component.css']\r\n})\r\nexport class UpdateAnneeScolaireComponent implements OnInit{\r\n  hintColor = \"red\";\r\n  updateForm: any;\r\n  id!: number;\r\n  private destroyService= inject(DestroyService);\r\n  private fb = inject(FormBuilder);\r\n  private service = inject(AnneeService);\r\n  private toastr = inject(ToastrService);\r\n  private route = inject(ActivatedRoute);\r\n  private router =inject(Router);\r\n\r\n  \r\n  ngOnInit(): void {\r\n    this.updateForm = this.fb.group({\r\n      name: [null, [Validators.required, Validators.minLength(4)]],\r\n      enabled: [0],\r\n      dateDebut: [null, [Validators.required]],\r\n      dateFin: [null, [Validators.required]]\r\n    });\r\n    this.route.paramMap.pipe(takeUntil(this.destroyService.onDestroy$)).subscribe((value) => {\r\n      this.id = Number(value.get('id'));\r\n      this.service.getById(this.id).subscribe({\r\n        next: (res) => {\r\n          this.fillForm(res);\r\n        }, error: () => {\r\n          this.toastr.error(\"LOADING DATA FAILED\",\"ERROR\");\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  fillForm(annee:Annee) {\r\n    this.updateForm.setValue({\r\n      name: annee.name,\r\n      enabled:annee.enabled,\r\n      dateDebut:annee.dateDebut,\r\n      dateFin:annee.dateFin\r\n    });\r\n  }\r\n\r\n  get fc() {\r\n    return this.updateForm.controls;\r\n  }\r\n\r\n  update(){\r\n    const annee = this.updateForm.value;\r\n    this.service.putUpdate(annee,this.id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: () => {\r\n          this.router.navigate(['/dashboard/annee']);\r\n        },\r\n        error: (error) => {\r\n          if (error.status == 500) {\r\n            this.toastr.error(error.error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">MODIFICATIONANNEE SCOLAIRE</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">TABLEAU DE BORD</a></li>\r\n                <li class=\"breadcrumb-item active\"><a routerLink=\"/dashboard/annee\">ANNEE SCOLAIRE</a></li>\r\n                <li class=\"breadcrumb-item active\">MODIFIER</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-3\"></div>\r\n    <div class=\"col-sm-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"updateForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 d-flex justify-content-center\"> <!-- Modified line -->\r\n                            <h5><span>ANNEE SCOLAIRE</span></h5>\r\n                            <br>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ LE NOM </mat-label>\r\n                                <input matInput formControlName=\"name\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': fc.name.required && fc.name.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\r\n                                <div *ngIf=\"fc.name.touched && fc.name.invalid\">\r\n                                    <mat-error *ngIf=\"fc.name.errors?.required\"\r\n                                        [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                        rentrer une valeur</mat-error>\r\n                                    <mat-error *ngIf=\"fc.name.errors?.minlength\" [ngClass]=\"{color:   hintColor}\">Entrez\r\n                                        au minimum 4\r\n                                        lettres</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n\r\n                            <div class=\"col-12\">\r\n                                <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                    <mat-label>DATE DE DEBUT </mat-label>\r\n                                    <input matInput [matDatepicker]=\"picker\" formControlName=\"dateDebut\">\r\n                                    <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                    <mat-datepicker #picker></mat-datepicker>\r\n                                    <div *ngIf=\"fc.dateDebut.touched && fc.dateDebut.invalid\">\r\n                                        <mat-error *ngIf=\"fc.dateDebut.errors?.required\"\r\n                                            [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                            rentrer une valeur</mat-error>\r\n                                    </div>\r\n                                </mat-form-field>\r\n                            </div>\r\n\r\n                            <div class=\"col-12\">\r\n                                <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                    <mat-label>DATE DE FIN </mat-label>\r\n                                    <input matInput [matDatepicker]=\"picke\" formControlName=\"dateFin\">\r\n                                    <mat-datepicker-toggle matIconSuffix [for]=\"picke\"></mat-datepicker-toggle>\r\n                                    <mat-datepicker #picke></mat-datepicker>\r\n                                    <div *ngIf=\"fc.dateFin.touched && fc.dateFin.invalid\">\r\n                                        <mat-error *ngIf=\"fc.dateFin.errors?.required\"\r\n                                            [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                            rentrer une valeur</mat-error>\r\n                                    </div>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"col-12\">\r\n                                <mat-radio-group formControlName=\"enabled\" aria-label=\"Select\" >\r\n                                    <mat-radio-button [checked]=\"fc.enabled.value=='0'?true:false\" [value]=\"0\">INACTIVE</mat-radio-button>\r\n                                    <mat-radio-button [checked]=\"fc.enabled.value=='1'?true:false\"  [value]=\"1\">ACTIVE</mat-radio-button>\r\n                                </mat-radio-group>\r\n                            </div>\r\n                            <!-- <mat-form-field appearance=\"outline\" color=\"primary\" [style.display]=\"'none'\">\r\n                                <input matInput formControlName=\"totalCredit\" type=\"text\"  />\r\n                            </mat-form-field> -->\r\n                        </div>\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6\" color=\"primary\"\r\n                                [disabled]=\"updateForm.invalid\" (click)=\"update()\">MODIFIER</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, inject } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Classe } from 'src/app/models/Classe';\r\nimport { Matiere } from 'src/app/models/Matiere';\r\nimport { MatiereUE } from 'src/app/models/MatiereUe';\r\nimport { ClasseService } from 'src/app/services/classe/classe.service';\r\nimport { InscriptionComponent } from '../../etudiant/inscription/inscription.component';\r\nimport { ProfAddEditComponent } from '../prof-add-edit/prof-add-edit.component';\r\nimport { MatiereService } from 'src/app/services/matiere/matiere.service';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\nimport { takeUntil } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-classe-matieres',\r\n  templateUrl: './classe-matieres.component.html',\r\n  styleUrls: ['./classe-matieres.component.css']\r\n})\r\nexport class ClasseMatieresComponent implements OnInit {\r\n  id!: number;\r\n  matiere!: Matiere;\r\n  classe!: Classe;\r\n  registerForm!: FormGroup;\r\n  @ViewChild(MatPaginator) paginator !: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  public dataSource!: MatTableDataSource<MatiereUE>;\r\n  displayedColumns: string[] = ['id', 'name', 'credit', 'ue', 'assigner', 'professeur'];\r\n\r\n  //NOTE:INJECTION\r\n  private service = inject(ClasseService);\r\n  private matiereService = inject(MatiereService);\r\n  private toastr = inject(ToastrService);\r\n  private router = inject(Router);\r\n  private route = inject(ActivatedRoute);\r\n  private dialog = inject(MatDialog);\r\n  private destroyService = inject(DestroyService);\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.pipe(takeUntil(this.destroyService.onDestroy$)).subscribe((value) => {\r\n      this.id = Number(value.get('id'));\r\n      this.service.getById(this.id).subscribe({\r\n        next: (response) => {\r\n          this.classe = response.classe;\r\n        }\r\n      })\r\n      this.getAllMatieres();\r\n    });\r\n  }\r\n\r\n  openAddEditProfesseur(id: number) {\r\n    this.matiereService.getById(id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n      next: (response) => {\r\n        this.matiere = response.matiere;\r\n        const dialogData = {\r\n          classe: this.classe,\r\n          matiere: response.matiere // Replace this with the actual selected matiere from the table if needed\r\n        };\r\n        const dialogRef = this.dialog.open(ProfAddEditComponent, {\r\n          data: dialogData\r\n        });\r\n\r\n        dialogRef.afterClosed().pipe(takeUntil(this.destroyService.onDestroy$)).subscribe((registrationSuccess: boolean) => {\r\n          if (registrationSuccess) {\r\n            this.getAllMatieres();\r\n          }\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  getAllMatieres() {\r\n    this.service.getMatieresById(this.id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.dataSource = new MatTableDataSource(response);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        },\r\n        error: () => {\r\n          this.toastr.error(\"LOADING LIST FAILED\", \"ERROR\");\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">Matiere</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">TABLEAU DE BORD</a></li>\r\n                <li class=\"breadcrumb-item active\"><a routerLink=\"/dashboard/classe\">CLASSE</a></li>\r\n                <li class=\"breadcrumb-item active\">MATIERE</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <h5 class=\"form-title\"><span>LISTE DES MATIERE</span></h5>\r\n                    </div>\r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <a mat-raised-button color=\"primary\" class=\"add-button\"\r\n                            routerLink=\"/dashboard/matiere/create\">AJOUTER</a>\r\n                    </div>\r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Filtrer</mat-label>\r\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"MATH100\" #input>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"mat-elevation-z8\">\r\n                        <div class=\"responsive-container table-responsive\">\r\n                            <table mat-table [dataSource]=\"dataSource\" matSort\r\n                                class=\"table border-0 star-student table-hover table-center mb-0 datatable table-striped\">\r\n\r\n                                <!-- ID Column -->\r\n                                <!-- Row Number Column -->\r\n                                <ng-container matColumnDef=\"id\">\r\n                                    <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                                    <td mat-cell *matCellDef=\"let i = index\"> {{ i + 1 }} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- Name Column -->\r\n                                <ng-container matColumnDef=\"name\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> NAME </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.matiere.name}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- Credit Column -->\r\n                                <ng-container matColumnDef=\"credit\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> CREDIT </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.matiere.credit}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- UE CODE Column -->\r\n                                <ng-container matColumnDef=\"ue\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> UE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.ue.code}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- action Column -->\r\n                                <ng-container matColumnDef=\"assigner\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> action </th>\r\n                                    <td mat-cell *matCellDef=\"let row\">\r\n                                        <button mat-icon-button class=\"add-button\"color=\"primary\" (click)=\"openAddEditProfesseur(row.matiere.id)\"\r\n                                            matTooltip=\"ASSIGNER\">\r\n                                            <mat-icon matSuffix>add</mat-icon>\r\n                                        </button>\r\n                                    </td>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"professeur\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> PROFESSEUR </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.professeur}} </td>\r\n                                </ng-container>\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                <!-- Row shown when there is no matching data. -->\r\n                                <tr class=\"mat-row\" *matNoDataRow>\r\n                                    <td class=\"mat-cell\" colspan=\"4\">Aucune donnée ne correspond à \"{{input.value}}\"\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n                            aria-label=\"Select page of users\"></mat-paginator>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild,inject } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { takeUntil } from 'rxjs';\r\nimport { Etudiant } from 'src/app/models/Etudiant';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\nimport { InscriptionService } from 'src/app/services/inscription/inscription.service';\r\n\r\n@Component({\r\n  selector: 'app-classe-students',\r\n  templateUrl: './classe-students.component.html',\r\n  styleUrls: ['./classe-students.component.css']\r\n})\r\nexport class ClasseStudentsComponent implements OnInit {\r\n  id!: number;\r\n  etudiants: Etudiant[] = [];\r\n  @ViewChild(MatPaginator) paginator !: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  public dataSource!: MatTableDataSource<Etudiant>;\r\n  displayedColumns: string[] = ['id', 'matricule', 'name', 'prenoms', 'age', 'dateNaiss', 'telephone', 'action'];\r\n\r\n  //NOTE:INJECTIONS\r\n  private service = inject(InscriptionService);\r\n  private toastr = inject(ToastrService);\r\n  private route = inject(ActivatedRoute);\r\n  private router = inject(Router);\r\n  private destroyService = inject(DestroyService);\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.pipe(takeUntil(this.destroyService.onDestroy$)).subscribe((value) => {\r\n      this.id = Number(value.get('id'));\r\n      this.getAllEtudiants();\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllEtudiants() {\r\n    this.service.getAllEtudiantsByClasse(this.id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.etudiants = response;\r\n          this.dataSource = new MatTableDataSource(this.etudiants);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        },\r\n        error: () => {\r\n          this.toastr.error(\"LOADING LIST FAILED\", \"ERROR\");\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  notes(id: String) {\r\n    this.router.navigate([\"/dashboard/notes/etudiants/\" + id + \"/\" + this.id]);\r\n  }\r\n\r\n  export() { }\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">STUDENTS</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">TABLEAU DE BORD</a></li>\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard/classe\">CLASSE</a></li>\r\n                <li class=\"breadcrumb-item active\">STUDENTS</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <h5 class=\"form-title\"><span>LISTE DES ETUDIANTS</span></h5>\r\n                    </div>\r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Filtrer</mat-label>\r\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"MATH100\" #input>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"mat-elevation-z8\">\r\n                        <div class=\"responsive-container table-responsive\">\r\n                            <table mat-table [dataSource]=\"dataSource\" matSort\r\n                                class=\"table border-0 star-student table-hover table-center mb-0 datatable table-striped\">\r\n\r\n                                <!-- ID Column -->\r\n                                <!-- Row Number Column -->\r\n                                <ng-container matColumnDef=\"id\">\r\n                                    <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                                    <td mat-cell *matCellDef=\"let i = index\"> {{ i + 1 }} </td>\r\n                                </ng-container>\r\n                                <!-- Matricule Column -->\r\n                                <ng-container matColumnDef=\"matricule\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> MATRICULE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.matricule}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- FirstName Column -->\r\n                                <ng-container matColumnDef=\"name\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> NOM </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- lastName Column -->\r\n                                <ng-container matColumnDef=\"prenoms\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> PRENOMS </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.prenoms}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- AGE Column -->\r\n                                <ng-container matColumnDef=\"age\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> AGE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.age}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- DATE DE NAISSANCE Column -->\r\n                                <ng-container matColumnDef=\"dateNaiss\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> DATE DE NAISSANCE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.dateNaiss | date:'dd MMMM yyyy'}}</td>\r\n                                </ng-container>\r\n\r\n                                <!-- TELEPHONE Column -->\r\n                                <ng-container matColumnDef=\"telephone\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> TELEPHONE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.telephone }}</td>\r\n                                </ng-container>\r\n\r\n                                <!-- ACTION Column -->\r\n                                <ng-container matColumnDef=\"action\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </th>\r\n                                    <td mat-cell *matCellDef=\"let row\">\r\n                                        <button mat-icon-button color=\"primary\" (click)=\"notes(row.matricule)\"\r\n                                            matTooltip=\"NOTES\">\r\n                                            <mat-icon matSuffix>bar_chart</mat-icon>\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"primary\" (click)=\"export()\"\r\n                                            matTooltip=\"RELEVET DE NOTES\">\r\n                                            <mat-icon matSuffix>insert_drive_file</mat-icon>\r\n                                        </button>\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                <!-- Row shown when there is no matching data. -->\r\n                                <tr class=\"mat-row\" *matNoDataRow>\r\n                                    <td class=\"mat-cell\" colspan=\"4\">AUCUNE DONNEE NE CORRESPOND A \"{{input.value}}\"\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n                            aria-label=\"Select page of users\"></mat-paginator>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Filiere } from 'src/app/models/Filiere';\r\nimport { ClasseService } from 'src/app/services/classe/classe.service';\r\nimport { FiliereService } from 'src/app/services/filiere/filiere.service';\r\nimport { Observable, map, of, startWith } from 'rxjs';\r\n@Component({\r\n  selector: 'app-create-classe',\r\n  templateUrl: './create-classe.component.html',\r\n  styleUrls: ['./create-classe.component.css']\r\n})\r\nexport class CreateClasseComponent implements OnInit {\r\n  hintColor = \"red\";\r\n  registerForm!: FormGroup;\r\n  filieres: Filiere[] = [];\r\n  filiereControl: FormControl = new FormControl(null, Validators.required);\r\n  filteredOptions!: Observable<Filiere[]>;\r\n  niveaux: string[] = [\"LP\", \"MP\", \"BTS\"];\r\n  niveauM!: string;\r\n  // filiereM: String = \"\";\r\n  //NOTE: DEPENDENCY INJECTION\r\n  constructor(private fb: FormBuilder, private service: ClasseService, private filiereService: FiliereService, private toastr: ToastrService) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    //NOTE: FORM REPRESENTATION\r\n    this.registerForm = this.fb.group({\r\n      name: [null, [Validators.required, Validators.minLength(4)]],\r\n      filiere: this.filiereControl,\r\n      niveau: ['LP', [Validators.required]],\r\n      annee: [null, [Validators.required]],\r\n      effectif: [0]\r\n    });\r\n    //NOTE: GET ALL FILIERES\r\n    this.getAllFilieres();\r\n\r\n    // Subscribe to value changes of this.filiereControl\r\n    this.filiereControl.valueChanges\r\n      .subscribe(val => {\r\n        this.filteredOptions = of(this.findFilieres(val));\r\n     });\r\n  }\r\n\r\n  initializeFilieres() {\r\n    this.filteredOptions = of(this.findFilieres(\"\"))\r\n  }\r\n\r\n\r\n  findFilieres(val: string): Filiere[] {\r\n    return this.filieres.filter(option =>\r\n      option.name.toLowerCase().includes(val));\r\n  }\r\n\r\n  getValueNiveau() {\r\n    this.niveauM = this.registerForm.controls['niveau'].value;\r\n  }\r\n\r\n  displayFiliere(value: any) {\r\n    if (value != null) {\r\n      return value.name;\r\n    }\r\n  }\r\n\r\n  getAllFilieres() {\r\n    this.filiereService.getAll().subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.filieres = response;\r\n        },\r\n        error: (error) => {\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  //NOTESCONTROLES VALUES\r\n  get name(): FormControl {\r\n    return this.registerForm.get('name') as FormControl;\r\n  }\r\n\r\n\r\n  register() {\r\n    const classe = this.registerForm.value;\r\n    this.service.postRegistration(classe).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.registerForm.setValue({\r\n            name: \"\",\r\n            filiere: null,\r\n            niveau: 'LP',\r\n            annee: null,\r\n            effectif: 0\r\n          });\r\n          this.getAllFilieres();\r\n        }, error: (error) => {\r\n          this.toastr.error(\"DONNEES  INVALIDE\")\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">ENREGISTREMENT CLASSE</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">TABLEAU DE BORD</a></li>\r\n                <li class=\"breadcrumb-item active\"><a routerLink=\"/dashboard/classe\">CLASSE</a></li>\r\n                <li class=\"breadcrumb-item active\">CREER</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-3\"></div>\r\n    <div class=\"col-sm-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"registerForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 d-flex justify-content-center\"> <!-- Modified line -->\r\n                            <h5><span>CLASSE</span></h5>\r\n                            <br>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>Entrez le nom </mat-label>\r\n                                <input matInput formControlName=\"name\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': name.errors?.['required'] && name.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\r\n                                <div *ngIf=\"name.touched && name.invalid\">\r\n                                    <mat-error *ngIf=\"name.errors?.['required']\" [ngClass]=\"{color:   hintColor}\">\r\n                                        Veuillez Entrer une valeur\r\n                                    </mat-error>\r\n                                    <mat-error *ngIf=\"name.errors?.['minlength']\" [ngClass]=\"{color:   hintColor}\">\r\n                                        Entrez au minimum 4 lettres\r\n                                    </mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                                <mat-label>Filieres</mat-label>\r\n                                <input matInput formControlName=\"filiere\" [formControl]=\"filiereControl\" [matAutocomplete]=\"auto\" (focus)=\"initializeFilieres()\"   />\r\n                                <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFiliere\">\r\n                                    <mat-option *ngFor=\"let filiere of filteredOptions | async\" [value]=\"filiere\" >\r\n                                        {{ filiere.name }}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                                <mat-label>NIVEAU</mat-label>\r\n                                <mat-select formControlName=\"niveau\" (openedChange)=\"getValueNiveau()\">\r\n                                    <mat-option *ngFor=\"let niveau of niveaux\" [value]=\"niveau\">\r\n                                        {{ niveau }}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                            \r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                                <mat-label>ANNEE</mat-label>\r\n                                <mat-select formControlName=\"annee\" >\r\n                                    <div *ngIf=\"niveauM === 'LP' \">\r\n                                        <mat-option [value]=\"1\">1ère année</mat-option>\r\n                                        <mat-option [value]=\"2\">2ème année</mat-option>\r\n                                        <mat-option [value]=\"3\">3ème année</mat-option>\r\n                                    </div>\r\n                                    <div *ngIf=\"niveauM === 'MP' || niveauM === 'BTS'\">\r\n                                        <mat-option [value]=\"1\" >1ère année</mat-option>\r\n                                        <mat-option [value]=\"2\">2ème année</mat-option>\r\n                                    </div>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                            <mat-form-field style=\"width: 100%;\" class=\"invisible-input\">\r\n                                <input matInput formControlName=\"effectif\" type=\"number\" value=\"0\" />\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6\" color=\"primary\"\r\n                                [disabled]=\"registerForm.invalid\" (click)=\"register()\">\r\n                                ENREGISTRER\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, ViewChild, inject, OnInit, OnDestroy } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription, takeUntil } from 'rxjs';\r\nimport { ClassWithFiliere } from 'src/app/models/ClassWithFiliere';\r\nimport { ClasseService } from 'src/app/services/classe/classe.service';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\n\r\n@Component({\r\n  selector: 'app-list-classe',\r\n  templateUrl: './list-classe.component.html',\r\n  styleUrls: ['./list-classe.component.css']\r\n})\r\nexport class ListClasseComponent implements OnInit {\r\n  public classes!: ClassWithFiliere[];\r\n  @ViewChild(MatPaginator) paginator !: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort!: MatSort;\r\n  public dataSource!: MatTableDataSource<ClassWithFiliere>;\r\n  displayedColumns: string[] = ['id', 'name', 'niveau', 'annee', 'effectif', 'filiere', 'action'];\r\n\r\n  //NOTE: INJECTIONS\r\n  private service = inject(ClasseService);\r\n  private router = inject(Router);\r\n  private toastr = inject(ToastrService);\r\n  private destroyService = inject(DestroyService);\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.getAllClasses();\r\n  }\r\n\r\n  getAllClasses() {\r\n    this.service.getAll().pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.classes = response;\r\n          this.dataSource = new MatTableDataSource(this.classes);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        },\r\n        error: () => {\r\n          this.toastr.error(\"LOADING LIST FAILED\", \"ERROR\");\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getStudents(id: Number) {\r\n    this.router.navigate([\"/dashboard/classe/students/\" + id]);\r\n  }\r\n\r\n  getMatieres(id: number) {\r\n    this.router.navigate([\"/dashboard/classe/matieres/\" + id]);\r\n  }\r\n\r\n  edit(id: number) {\r\n    this.router.navigate([\"/dashboard/classe/update/\" + id]);\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.service.delete(id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n      next: () => {\r\n        this.getAllClasses();\r\n      }, error: () => {\r\n        this.toastr.error(\"SUPPRESSION FAILED\", \"ERROR\");\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">CLASSE</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">TABLEAU DE BORD</a></li>\r\n                <li class=\"breadcrumb-item act  ive\">CLASSE</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <h5 class=\"form-title\"><span>LISTE DES CLASSES</span></h5>\r\n                    </div>\r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <a mat-raised-button color=\"primary\" class=\"add-button\"\r\n                            routerLink=\"/dashboard/classe/create\">AJOUTER</a>\r\n                    </div>\r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Filtrer</mat-label>\r\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"CLASSE\" #input>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"mat-elevation-z8\">\r\n                        <div class=\"responsive-container table-responsive\">\r\n                            <table mat-table [dataSource]=\"dataSource\" matSort class=\"table border-0 star-student table-hover table-center mb-0 datatable table-striped\">\r\n\r\n                                <!-- ID Column -->\r\n                                <!-- Row Number Column -->\r\n                                <ng-container matColumnDef=\"id\">\r\n                                    <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                                    <td mat-cell *matCellDef=\"let i = index\"> {{ i + 1 }} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- Name Column -->\r\n                                <ng-container matColumnDef=\"name\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> NAME </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.classe.name}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- Niveau Column -->\r\n                                <ng-container matColumnDef=\"niveau\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> NIVEAU </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.classe.niveau}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- Niveau Column -->\r\n                                <ng-container matColumnDef=\"annee\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ANNEE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.classe.annee}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- Niveau Column -->\r\n                                <ng-container matColumnDef=\"effectif\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> EFFECTIF </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.classe.effectif}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- Filiere Column -->\r\n                                <ng-container matColumnDef=\"filiere\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> FILIERE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.filiere}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- action Column -->\r\n                                <ng-container matColumnDef=\"action\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> action </th>\r\n                                    <td mat-cell *matCellDef=\"let row\">\r\n                                        <button mat-icon-button color=\"primary\" (click)=\"edit(row.id)\"\r\n                                            matTooltip=\"MODIFIER\">\r\n                                            <mat-icon matSuffix>edit</mat-icon>\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"primary\" (click)=\"getStudents(row.id)\"\r\n                                            matTooltip=\"ETUDIANTS\">\r\n                                            <mat-icon matSuffix>group</mat-icon>\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"primary\" (click)=\"getMatieres(row.id)\"\r\n                                            matTooltip=\"MATIERES\">\r\n                                            <mat-icon>book</mat-icon>\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"warn\" [swal]=\"deleteSwal\" matTooltip=\"ANNULER\">\r\n                                            <mat-icon matSuffix>delete</mat-icon>\r\n                                        </button>\r\n                                        <swal #deleteSwal title=\"Voulez vous supprimer la classe?\"\r\n                                            text=\"Vous ne pourrez plus revenir en arriere\" icon=\"warning\"\r\n                                            [showCancelButton]=\"true\" [focusCancel]=\"true\" (confirm)=\"delete(row.id)\">\r\n                                        </swal>\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                <!-- Row shown when there is no matching data. -->\r\n                                <tr class=\"mat-row\" *matNoDataRow>\r\n                                    <td class=\"mat-cell\" colspan=\"4\">Aucune donnée ne correspond à \"{{input.value}}\"\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n                            aria-label=\"Select page of users\"></mat-paginator>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit, inject, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, of, takeUntil } from 'rxjs';\r\nimport { Classe } from 'src/app/models/Classe';\r\nimport { Filiere } from 'src/app/models/Filiere';\r\nimport { Matiere } from 'src/app/models/Matiere';\r\nimport { Professeur } from 'src/app/models/Professeur';\r\nimport { EnseignerService } from 'src/app/services/enseigner/enseigner.service';\r\nimport { ProfService } from 'src/app/services/prof/prof.service';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\n\r\n@Component({\r\n  selector: 'app-prof-add-edit',\r\n  templateUrl: './prof-add-edit.component.html',\r\n  styleUrls: ['./prof-add-edit.component.css']\r\n})\r\nexport class ProfAddEditComponent implements OnInit {\r\n  classe!: Classe; // Ensure that the Classe and Matiere models are imported correctly\r\n  matiere!: Matiere;\r\n  registerForm!: FormGroup;\r\n  professeurs: Professeur[] = [];\r\n  profControl: FormControl = new FormControl(null, Validators.required);\r\n  profOptions!: Observable<Professeur[]>;\r\n\r\n  //NOTE:INJECTIONS\r\n  private profService = inject(ProfService);\r\n  private enseignerService = inject(EnseignerService);\r\n  private toastr = inject(ToastrService);\r\n  private dialogRef = inject(MatDialogRef<ProfAddEditComponent>);\r\n  private fb = inject(FormBuilder);\r\n  private destroyService = inject(DestroyService);\r\n  constructor(@Inject(MAT_DIALOG_DATA) private data: any) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Assign the received data to component properties\r\n    this.classe = this.data.classe;\r\n    this.matiere = this.data.matiere;\r\n    this.getAllProfesseurs();\r\n    this.initializeForm();\r\n    this.profControl.valueChanges.pipe(takeUntil(this.destroyService.onDestroy$))\r\n      .subscribe(val => {\r\n        this.profOptions = of(this.findProfesseurs(val));\r\n      });\r\n  }\r\n\r\n  initializeForm() {\r\n    this.registerForm = this.fb.group({\r\n      professeur: this.profControl,\r\n      classe: this.classe,\r\n      matiere: this.matiere\r\n    });\r\n  }\r\n\r\n  initializeProfesseurs() {\r\n    this.profOptions = of(this.findProfesseurs(\"\"))\r\n  }\r\n\r\n\r\n  findProfesseurs(val: string): Professeur[] {\r\n    return this.professeurs.filter(option =>\r\n      option.name.toLowerCase().includes(val));\r\n  }\r\n\r\n  displayProfesseurs(professeur: Professeur): string {\r\n    if (professeur) {\r\n      return `${professeur.name} ${professeur.prenoms}`;\r\n    }\r\n    return '';\r\n  }\r\n\r\n\r\n  getAllProfesseurs() {\r\n    this.profService.getAll().pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.professeurs = response;\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n  register() {\r\n    const value = this.registerForm.value;\r\n    this.enseignerService.postProfesseurRegistration(value).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n      next: () => {\r\n        this.close();\r\n      }, error: (error) => {\r\n        this.toastr.error(error.error);\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<div mat-dialog-title>\r\n    <h1>PROFESSEUR FORMULAIRE</h1>\r\n</div>\r\n\r\n<form [formGroup]=\"registerForm\">\r\n    <div mat-dialog-content>\r\n        <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\r\n            <mat-label>SELECTIONNER LE PROFESSEUR</mat-label>\r\n            <input matInput formControlName=\"professeur\" [formControl]=\"profControl\" [matAutocomplete]=\"auto\"\r\n                (focus)=\"initializeProfesseurs()\" />\r\n            <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayProfesseurs\">\r\n                <mat-option *ngFor=\"let professeur of profOptions | async\" [value]=\"professeur\">\r\n                    {{ professeur.name+\" \"+professeur.prenoms}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n    </div>\r\n<div mat-dialog-actions>\r\n    <button mat-raised-button (click)=\"close()\">Cancel</button>\r\n    <button mat-raised-button color=\"primary\" (click)=\"register()\" [disabled]=\"registerForm.invalid\">ENREGISTRER</button>\r\n</div>\r\n</form>\r\n","import { Component, OnInit, OnDestroy, inject } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, Subscription, of, takeUntil } from 'rxjs';\r\nimport { ClassWithFiliere } from 'src/app/models/ClassWithFiliere';\r\nimport { Classe } from 'src/app/models/Classe';\r\nimport { Filiere } from 'src/app/models/Filiere';\r\nimport { ClasseService } from 'src/app/services/classe/classe.service';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\nimport { FiliereService } from 'src/app/services/filiere/filiere.service';\r\n\r\n@Component({\r\n  selector: 'app-update-classe',\r\n  templateUrl: './update-classe.component.html',\r\n  styleUrls: ['./update-classe.component.css']\r\n})\r\nexport class UpdateClasseComponent implements OnInit {\r\n  hintColor = \"red\";\r\n  updateForm!: FormGroup;\r\n  filieres: Filiere[] = [];\r\n  filiereControl: FormControl = new FormControl(null, Validators.required);\r\n  filteredOptions!: Observable<Filiere[]>;\r\n  niveaux: string[] = [\"LP\", \"MP\", \"BTS\"];\r\n  niveauM!: String;\r\n  id!: number;\r\n\r\n\r\n  //NOTE: DEPENDENCY INJECTION\r\n  private fb = inject(FormBuilder);\r\n  private service = inject(ClasseService);\r\n  private filiereService = inject(FiliereService);\r\n  private toastr = inject(ToastrService);\r\n  private route = inject(ActivatedRoute);\r\n  private router = inject(Router);\r\n  private destroyService = inject(DestroyService);\r\n\r\n  ngOnInit(): void {\r\n    //NOTE: FORM REPRESENTATION\r\n    this.initializeForm();\r\n\r\n    this.route.paramMap.pipe(takeUntil(this.destroyService.onDestroy$))\r\n    .subscribe((value) => {\r\n      this.id = Number(value.get('id'));\r\n      this.service.getById(this.id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n        next: (res) => {\r\n          this.fillForm(res);\r\n        }, error: () => {\r\n          this.toastr.error(\"LOADING LIST FAILED\", \"ERROR\");\r\n        }\r\n      })\r\n    });\r\n\r\n    this.getAllFilieres();\r\n\r\n    //NOTE: Subscribe to value changes of this.filiereControl\r\n    this.filiereControl.valueChanges\r\n      .pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(val => {\r\n        this.filteredOptions = of(this.findFilieres(val));\r\n      });\r\n  }\r\n\r\n  initializeForm() {\r\n    this.updateForm = this.fb.group({\r\n      name: [null, [Validators.required, Validators.minLength(4)]],\r\n      filiere: this.filiereControl,\r\n      niveau: ['LP', [Validators.required]],\r\n      annee: [null, [Validators.required]],\r\n      effectif: [0]\r\n    });\r\n  }\r\n\r\n  initializeFilieres() {\r\n    this.filteredOptions = of(this.findFilieres(\"\"))\r\n  }\r\n\r\n  fillForm(classeF: ClassWithFiliere) {\r\n    this.niveauM = classeF.classe.niveau;\r\n    this.updateForm.setValue({\r\n      name: classeF.classe.name,\r\n      filiere: classeF.filiere,\r\n      niveau: classeF.classe.niveau,\r\n      annee: classeF.classe.annee,\r\n      effectif: classeF.classe.effectif\r\n    });\r\n  }\r\n\r\n  findFilieres(val: string): Filiere[] {\r\n    return this.filieres.filter(option =>\r\n      option.name.toLowerCase().includes(val));\r\n  }\r\n\r\n  getValueNiveau() {\r\n    this.niveauM = this.updateForm.controls['niveau'].value;\r\n  }\r\n\r\n  displayFiliere(value: any) {\r\n    if (value != null) {\r\n      return value.name;\r\n    }\r\n  }\r\n\r\n  getAllFilieres() {\r\n    this.filiereService.getAll().pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.filieres = response;\r\n        },\r\n        error: () => {\r\n          this.toastr.error(\"LOADING LIST FAILED\", \"ERROR\");\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  //NOTESCONTROLES VALUES\r\n  get name(): FormControl {\r\n    return this.updateForm.get('name') as FormControl;\r\n  }\r\n\r\n\r\n  update() {\r\n    const classe = this.updateForm.value;\r\n    this.service.putUpdate(classe, this.id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: () => {\r\n          this.router.navigate(['/dashboard/classe']);\r\n        }, error: () => {\r\n          this.toastr.error(\"DONNEES INVALIDE\")\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">MODIFICATION CLASSE</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">TABLEAU DE BORD</a></li>\r\n                <li class=\"breadcrumb-item active\"><a routerLink=\"/dashboard/classe\">CLASSE</a></li>\r\n                <li class=\"breadcrumb-item active\">MODIFIER</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-3\"></div>\r\n    <div class=\"col-sm-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"updateForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 d-flex justify-content-center\"> <!-- Modified line -->\r\n                            <h5><span>CLASSE</span></h5>\r\n                            <br>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>Entrez le nom </mat-label>\r\n                                <input matInput formControlName=\"name\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': name.errors?.['required'] && name.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\r\n                                <div *ngIf=\"name.touched && name.invalid\">\r\n                                    <mat-error *ngIf=\"name.errors?.['required']\" [ngClass]=\"{color:   hintColor}\">\r\n                                        Veuillez Entrer une valeur\r\n                                    </mat-error>\r\n                                    <mat-error *ngIf=\"name.errors?.['minlength']\" [ngClass]=\"{color:   hintColor}\">\r\n                                        Entrez au minimum 4 lettres\r\n                                    </mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                                <mat-label>Filieres</mat-label>\r\n                                <input matInput formControlName=\"filiere\" [formControl]=\"filiereControl\" [matAutocomplete]=\"auto\" (focus)=\"initializeFilieres()\"   />\r\n                                <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFiliere\">\r\n                                    <mat-option *ngFor=\"let filiere of filteredOptions | async\" [value]=\"filiere\" >\r\n                                        {{ filiere.name }}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                                <mat-label>NIVEAU</mat-label>\r\n                                <mat-select formControlName=\"niveau\" (openedChange)=\"getValueNiveau()\">\r\n                                    <mat-option *ngFor=\"let niveau of niveaux\" [value]=\"niveau\">\r\n                                        {{ niveau }}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                            \r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                                <mat-label>ANNEE</mat-label>\r\n                                <mat-select formControlName=\"annee\" >\r\n                                    <div *ngIf=\"niveauM === 'LP' \">\r\n                                        <mat-option [value]=\"1\">1ère année</mat-option>\r\n                                        <mat-option [value]=\"2\">2ème année</mat-option>\r\n                                        <mat-option [value]=\"3\">3ème année</mat-option>\r\n                                    </div>\r\n                                    <div *ngIf=\"niveauM === 'MP' || niveauM === 'BTS'\">\r\n                                        <mat-option [value]=\"1\" >1ère année</mat-option>\r\n                                        <mat-option [value]=\"2\">2ème année</mat-option>\r\n                                    </div>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                            <mat-form-field style=\"width: 100%;\" class=\"invisible-input\">\r\n                                <input matInput formControlName=\"effectif\" type=\"number\" value=\"0\" />\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6\" \r\n                                [disabled]=\"updateForm.invalid\" (click)=\"update()\">\r\n                                MODIFIER\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, inject } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { EtudiantService } from 'src/app/services/etudiant/etudiant.service';\r\nimport { FileHandle } from '../../../../models/FileHandle';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ImageService } from 'src/app/services/utils/image.service';\r\n\r\n@Component({\r\n  selector: 'app-create-etudiant',\r\n  templateUrl: './create-etudiant.component.html',\r\n  styleUrls: ['./create-etudiant.component.css']\r\n})\r\nexport class CreateEtudiantComponent implements OnInit {\r\n  registerForm!: FormGroup;\r\n  hintColor = \"red\";\r\n  maxDate!: Date;\r\n  maxDateAd!: Date;\r\n  selectedFile: any = null;\r\n\r\n  //NOTE:INJECTIONS\r\n  private fb = inject(FormBuilder);\r\n  private service = inject(EtudiantService);\r\n  private toastr = inject(ToastrService);\r\n\r\n  constructor() {\r\n    const currentDate = new Date();\r\n    const currentYear = currentDate.getFullYear();\r\n    const currentMonth = currentDate.getMonth();\r\n    const currentDay = currentDate.getDate();\r\n    this.maxDate = new Date(currentYear - 8, currentMonth, currentDay);\r\n    this.maxDateAd = new Date(currentYear, currentMonth, currentDay);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = this.fb.group({\r\n      matricule: [null, [Validators.required]],\r\n      name: [null, [Validators.required, Validators.minLength(4)]],\r\n      prenoms: [null, [Validators.required, Validators.minLength(4)]],\r\n      age: [0, [Validators.required, Validators.maxLength(120)]],\r\n      telephone: [null, [Validators.required]],\r\n      dateNaiss: [null, [Validators.required]],\r\n      tuteur: [null, [Validators.required, Validators.minLength(4)]],\r\n      tuteurTel: [null, [Validators.required]],\r\n      dateAdmission: [null, [Validators.required]],\r\n      nationalite: [null, [Validators.required]],\r\n      sexe: [null, [Validators.required]],\r\n      photo: [\"\"],\r\n    });\r\n  }\r\n\r\n  //NOTE :FORMCONTROL GETTEURS\r\n  get matricule(): FormControl {\r\n    return this.registerForm.get('matricule') as FormControl;\r\n  }\r\n\r\n  get name(): FormControl {\r\n    return this.registerForm.get('name') as FormControl;\r\n  }\r\n\r\n  get photo(): FormControl {\r\n    return this.registerForm.get('photo') as FormControl;\r\n  }\r\n\r\n  get prenoms(): FormControl {\r\n    return this.registerForm.get('prenoms') as FormControl;\r\n  }\r\n\r\n  get age(): FormControl {\r\n    return this.registerForm.get(\"age\") as FormControl;\r\n  }\r\n\r\n  get dateNaiss(): FormControl {\r\n    return this.registerForm.get(\"dateNaiss\") as FormControl;\r\n  }\r\n\r\n  get telephone(): FormControl {\r\n    return this.registerForm.get(\"telephone\") as FormControl;\r\n  }\r\n\r\n  get tuteur(): FormControl {\r\n    return this.registerForm.get(\"tuteur\") as FormControl;\r\n  }\r\n\r\n  get tuteurTel(): FormControl {\r\n    return this.registerForm.get(\"tuteurTel\") as FormControl;\r\n  }\r\n\r\n  get dateAdmission(): FormControl {\r\n    return this.registerForm.get(\"dateAdmission\") as FormControl;\r\n  }\r\n\r\n  get nationalite(): FormControl {\r\n    return this.registerForm.get(\"nationalite\") as FormControl;\r\n  }\r\n\r\n\r\n  //NOTE:METHODES\r\n  register() {\r\n    const etudiant = this.registerForm.value;\r\n    this.service.postRegistration(etudiant).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.registerForm.setValue({\r\n            matricule: \"\",\r\n            name: \"\",\r\n            prenoms: \"\",\r\n            age: 0,\r\n            telephone: null,\r\n            dateNaiss: null,\r\n            tuteur: null,\r\n            tuteurTel: null,\r\n            dateAdmission: null,\r\n            nationalite: null,\r\n            sexe: null,\r\n            photo: [\"\"],\r\n          });\r\n        },\r\n        error: (error) => {\r\n          if (error.status == 500) {\r\n            this.toastr.error(error.error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  //NOTE: CHECK NUMBER\r\n  validateNumber(event: KeyboardEvent): void {\r\n    const input = event.key;\r\n    const isNumber = /^[0-9]$/.test(input);\r\n    const isBackspace = input === \"Backspace\";\r\n    const isPlus = input === \"+\";\r\n    const isSpace = input === \" \";\r\n    if (!isNumber && !isBackspace && !isPlus && !isSpace) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  onSelectedFile(event: any) {\r\n    if (event.target.files) {\r\n      // const file = event.target.files[0];\r\n      // const uniqueName = this.imageService.generateUniqueFileName(file.name);\r\n      // this.registerForm.patchValue({photo:uniqueName});\r\n    }\r\n  }\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">ENREGISTREMENT ETUDIANT</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">DASHBOARD</a></li>\r\n                <li class=\"breadcrumb-item active\"><a routerLink=\"/dashboard/etudiant\">ETUDIANT</a></li>\r\n                <li class=\"breadcrumb-item active\">ENREGISTRER</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\"></div>\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"registerForm\" multip>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 d-flex justify-content-center\"> <!-- Modified line -->\r\n                            <h5><span>ETUDIANT</span></h5>\r\n                            <br>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-label>IMAGE</mat-label>\r\n                            <input  type=\"file\" class=\"form-control\"  (change)=\"onSelectedFile($event)\" #selectFile\r\n                                [ngClass]=\"{ 'is-invalid': photo.errors?.['required'] && photo.invalid }\"  />\r\n                            <div *ngIf=\"photo.touched && photo.invalid\">\r\n                                <mat-error *ngIf=\"photo.errors?.['required']\" [ngClass]=\"{color:   hintColor}\">VEUILLEZ\r\n                                    ENTREZ UNE VALEUR</mat-error>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ UN MATRICULE</mat-label>\r\n                                <input matInput formControlName=\"matricule\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': matricule.errors?.['required'] && matricule.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"matricule.touched && matricule.invalid\">\r\n\r\n                                    <mat-error *ngIf=\"name.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">VEUILLEZ ENTREZ UNE VALEUR</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ UN NOM</mat-label>\r\n                                <input matInput formControlName=\"name\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': name.errors?.['required'] && name.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"name.touched && name.invalid\">\r\n\r\n                                    <mat-error *ngIf=\"name.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">VEUILLEZ ENTREZ UNE VALEUR</mat-error>\r\n                                    <mat-error *ngIf=\"name.errors?.['minlength']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">ENTREZ AU MINIMUM 4 LETTRES</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ VOTRE PRENOMS </mat-label>\r\n                                <input matInput formControlName=\"prenoms\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': prenoms.errors?.['required'] && prenoms.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"prenoms.touched && prenoms.invalid\">\r\n\r\n                                    <mat-error *ngIf=\"prenoms.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">VEUILLEZ ENTREZ UNE VALEUR</mat-error>\r\n                                    <mat-error *ngIf=\"prenoms.errors?.['minlength']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">ENTREZ AU MINIMUM 4 LETTRES</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ VOTRE AGE </mat-label>\r\n                                <input matInput formControlName=\"age\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': age.errors?.['required'] && age.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"age.touched && age.invalid\">\r\n                                    <mat-error *ngIf=\"age.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">VEUILLEZ ENTREZ UNE VALEUR </mat-error>\r\n                                    <mat-error *ngIf=\"age.errors?.['minlength']\" [ngClass]=\"{color:   hintColor}\">ENTREZ\r\n                                        AU MINIMUM 4 LETTRES</mat-error>\r\n                                    <mat-error *ngIf=\"age.errors?.['minlength']\" [ngClass]=\"{color:   hintColor}\">ENTREZ\r\n                                        UN AGE MAXIMAL DE 120</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ VOTRE TELEPHONE </mat-label>\r\n                                <input matInput formControlName=\"telephone\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': telephone.errors?.['required'] && telephone.invalid }\"\r\n                                    (keydown)=\"validateNumber($event)\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"telephone.touched && telephone.invalid\">\r\n                                    <mat-error *ngIf=\"telephone.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">VEUILLEZ ENTREZ UNE VALEUR</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ VOTRE NATIONALITE </mat-label>\r\n                                <input matInput formControlName=\"nationalite\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': nationalite.errors?.['required'] && nationalite.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"nationalite.touched && nationalite.invalid\">\r\n                                    <mat-error *ngIf=\"nationalite.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">VEUILLEZ ENTREZ UNE VALEUR</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>SEXE</mat-label>\r\n                                <mat-select formControlName=\"sexe\">\r\n                                    <mat-option [value]=\"'HOMME'\">HOMME</mat-option>\r\n                                    <mat-option [value]=\"'FEMME'\">FEMME</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>DATE DE NAISSANCE </mat-label>\r\n                                <input matInput [matDatepicker]=\"picker\" formControlName=\"dateNaiss\" [max]=\"maxDate\">\r\n                                <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                <mat-datepicker style=\"z-index: 1000;\" #picker></mat-datepicker>\r\n                                <div *ngIf=\"dateNaiss.touched && dateNaiss.invalid\">\r\n                                    <mat-error *ngIf=\"dateNaiss.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">VEUILLEZ ENTREZ UNE VALEUR</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>DATE DE D' ADMISSION </mat-label>\r\n                                <input matInput [matDatepicker]=\"picker1\" formControlName=\"dateAdmission\"\r\n                                    [max]=\"maxDateAd\">\r\n                                <mat-datepicker-toggle matIconSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #picker1></mat-datepicker>\r\n                                <div *ngIf=\"dateAdmission.touched && dateAdmission.invalid\">\r\n                                    <mat-error *ngIf=\"dateAdmission.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">VEUILLEZ ENTREZ UNE VALEUR</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ UN NOM COMPLET DU TUTEUR</mat-label>\r\n                                <input matInput formControlName=\"tuteur\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': tuteur.errors?.['required'] && tuteur.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"tuteur.touched && tuteur.invalid\">\r\n                                    <mat-error *ngIf=\"tuteur.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">VEUILLEZ ENTREZ UNE VALEUR</mat-error>\r\n                                    <mat-error *ngIf=\"tuteur.errors?.['minlength']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">ENTREZ AU MINIMUM 4 LETTRES</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ VOTRE TELEPHONE DU TUTEUR </mat-label>\r\n                                <input matInput formControlName=\"tuteurTel\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': tuteurTel.errors?.['required'] && tuteurTel.invalid }\"\r\n                                    (keydown)=\"validateNumber($event)\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"tuteurTel.touched && tuteurTel.invalid\">\r\n                                    <mat-error *ngIf=\"tuteurTel.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">VEUILLEZ ENTREZ UNE VALEUR</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6\" color=\"primary\"\r\n                                [disabled]=\"registerForm.invalid\" (click)=\"register()\">ENREGISTRER</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Etudiant } from 'src/app/models/Etudiant';\r\nimport { NoteDtoProf } from 'src/app/models/NoteDtoProf';\r\nimport { EtudiantService } from 'src/app/services/etudiant/etudiant.service';\r\nimport { NoteService } from 'src/app/services/note/note.service';\r\n\r\n@Component({\r\n  selector: 'app-etudiant-notes',\r\n  templateUrl: './etudiant-notes.component.html',\r\n  styleUrls: ['./etudiant-notes.component.css']\r\n})\r\n\r\n\r\nexport class EtudiantNotesComponent implements OnInit {\r\n\r\n  //NOTE: DATAS\r\n  etudiant!: Etudiant;\r\n  idMatiere!: number;\r\n  idClasse!: number;\r\n  idEtudiant!: String;\r\n\r\n  //NOTE:DATA INSERTED\r\n  public noteForms!: FormGroup;\r\n  public registerForm!: FormGroup;\r\n  public formArray: FormGroup[] = [];\r\n\r\n  //NOTE: Tables DATAS\r\n  public notesDtos: NoteDtoProf[] = [];\r\n  isShow: boolean = false;\r\n  @ViewChild(MatPaginator) paginator !: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  public dataSource!: MatTableDataSource<any>;\r\n  displayedColumns: string[] = ['id', 'professeur', 'matiere', 'devoir', 'devoir1', 'moyenne', 'examen', 'moyenneS', 'coef', 'noteDefinitive', 'moyenneClasse', 'appreciations'];\r\n  displayedHeaderColumns: string[] = ['id', 'professeur', 'matiere', 'devoir', 'moyenne', 'examen', 'moyenneS', 'coef', 'noteDefinitive', 'moyenneClasse', 'appreciations'];\r\n  \r\n  \r\n  constructor(private formBuilder: FormBuilder, private fb: FormBuilder, private etudiantService: EtudiantService, private route: ActivatedRoute, private toastr: ToastrService, private service: NoteService) {\r\n   this.noteForms = this.formBuilder.group({\r\n      notes: this.formBuilder.array([])\r\n    });\r\n  }\r\n\r\n  \r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe((value) => {\r\n      this.idEtudiant = String(value.get('etudiant'));\r\n      this.idClasse = Number(value.get('classe'));\r\n      this.getAllNotes(this.idEtudiant, this.idClasse);\r\n      this.etudiantService.getByMatricule(this.idEtudiant).subscribe({\r\n        next: (res) => {\r\n          this.etudiant = res;\r\n        }, error: (error) => {\r\n          console.log(error);\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  //NOTE:TABLES\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  validateNumber(event: KeyboardEvent): void {\r\n    const input = event.key;\r\n    const isNumber = /^[0-9]$/.test(input);\r\n    const isBackspace = input === \"Backspace\";\r\n    const isPlus = input === \"+\";\r\n    const isSpace = input === \" \";\r\n    if (!isNumber && !isBackspace && !isPlus && !isSpace) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  get notes(): FormArray {\r\n    return this.noteForms.get('notes') as FormArray;\r\n  }\r\n\r\n  getAllNotes(idEtudiant: String, idClasse: number) {\r\n\r\n    this.idClasse = idClasse;\r\n    this.idEtudiant = idEtudiant;\r\n    this.service.getEtudiantNotes(idEtudiant, idClasse).subscribe({\r\n      next: (value) => {\r\n        this.noteForms = this.formBuilder.group({\r\n          notes: this.formBuilder.array([])\r\n        });\r\n        this.notesDtos = value;\r\n        //NOTE:CREATE FORM IN TABLE\r\n        this.noteForms = this.formBuilder.group({\r\n          notes: this.formBuilder.array(value)\r\n        });\r\n        this.formArray = [];\r\n        \r\n        this.notesDtos.forEach((value) => {\r\n          this.formArray.push(this.createNoteFormGroup(value));\r\n        })\r\n      }, error(err) {\r\n        console.log(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  createNoteFormGroup(note: NoteDtoProf): FormGroup {\r\n    return this.fb.group({\r\n      id: [note.id],\r\n      professeur: [note.professeur],\r\n      matiereName: [note.matiereName],\r\n      matiere: [note.idMatiere],\r\n      moyenne: [note.moyenne],\r\n      moyenneClasse: [note.moyenneClasse],\r\n      noteDefinitive: [note.noteDefinitive],\r\n      appreciations: [note.appreciations],\r\n      matricule: [note.matricule],\r\n      devoirOne: [note.devoirOne, Validators.required],\r\n      devoirTwo: [note.devoirTwo, Validators.required],\r\n      examen: [note.examen, Validators.required],\r\n    });\r\n  }\r\n\r\n  exportExcel() {\r\n\r\n  }\r\n\r\n  exportPdf() {\r\n\r\n  }\r\n\r\n  register() {\r\n\r\n  }\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">NOTES DE L' ETUDIANT</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">DASHBOARD</a></li>\r\n                <li class=\"breadcrumb-item \"><a routerLink=\"/dashboard/notes\">NOTES</a></li>\r\n                <li class=\"breadcrumb-item active\">ETUDIANT</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"page-header\">\r\n                        <div class=\"row align-items-center\">\r\n                            <div class=\"col\">\r\n                                <h3 class=\"page-title\">NOTES</h3>\r\n                            </div>\r\n                            <div class=\"col-auto text-end float-end ms-auto download-grp\">\r\n                                <button class=\"btn btn-primary mb-3 me-2 p-2\" (click)=\"exportExcel()\"\r\n                                    matTooltip=\"EXPORTER NOTES\"><i\r\n                                        class=\"feather feather-arrow-up-right p-2\"></i></button>\r\n                                <button class=\"btn btn-primary mb-3 me-2 p-2\" matTooltip=\"IMPORTER NOTES\"><i\r\n                                        class=\"feather feather-arrow-down-left  p-2\"></i></button>\r\n                                <button class=\"btn btn-primary mb-3 p-2\" matTooltip=\"RELEVET DE NOTES\"\r\n                                    (click)=\"exportPdf()\"><i class=\"feather feather-arrow-down-circle p-2\"></i></button>\r\n                            </div>\r\n                            <div class=\"col-4\"> <!-- Adjust the column width as needed -->\r\n                                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                    <mat-label>Filtrer</mat-label>\r\n                                    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"MATH100\" #input>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-8\"></div>\r\n\r\n                    <div class=\"mat-elevation-z8\" >\r\n                        <div class=\"responsive-container table-responsive\">\r\n                            <br>\r\n                            <form [formGroup]=\"noteForms\">\r\n                                <ng-container formArrayName=\"notes\">\r\n                                    <table mat-table [dataSource]=\"notes.controls\" matSort>\r\n                                        <!-- ID Column -->\r\n                                        <!-- Row Number Column -->\r\n                                        <ng-container matColumnDef=\"id\">\r\n                                            <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                                            <td mat-cell *matCellDef=\"let i = index\"> {{ i + 1 }} </td>\r\n                                        </ng-container>\r\n\r\n                                        <!-- FirstName Column -->\r\n                                        <ng-container matColumnDef=\"professeur\">\r\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> PROFESSEUR </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.value.professeur}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"matiere\">\r\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> MATIERE </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.value.matiereName}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"devoir\">\r\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header [attr.colspan]=\"2\">\r\n                                                DEVOIR\r\n                                            </th>\r\n                                            <td mat-cell *matCellDef=\"let element;let i = index\">\r\n                                                <br>\r\n                                                <mat-form-field appearance=\"outline\" color=\"primary\">\r\n                                                    <div [formGroup]=\"formArray[i]\">\r\n                                                        <input matInput formControlName=\"devoirOne\" type=\"text\"\r\n                                                            [value]=\"element.value.devoirOne\"\r\n                                                            (keydown)=\"validateNumber($event)\" />\r\n                                                    </div>\r\n                                                </mat-form-field>\r\n                                            </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"devoir1\">\r\n                                            <td mat-cell *matCellDef=\"let element;let i = index\">\r\n                                                <br>\r\n                                                <mat-form-field appearance=\"outline\" color=\"primary\"\r\n                                                    [formGroup]=\"formArray[i]\">\r\n                                                    <input matInput formControlName=\"devoirTwo\" type=\"text\"\r\n                                                        [value]=\"element.value.devoirTwo\"\r\n                                                        (keydown)=\"validateNumber($event)\" />\r\n                                                </mat-form-field>\r\n                                            </td>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef=\"moyenne\">\r\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> MOYENNE</th>\r\n                                            <br>\r\n                                            <td mat-cell *matCellDef=\"let element\" [formGroup]=\"formArray[0]\">\r\n                                                {{ (element.value.devoirTwo +element.value.devoirOne)/2 }}\r\n                                            </td>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef=\"examen\">\r\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> COMPOSITION </th>\r\n                                            <td mat-cell *matCellDef=\"let element;let i = index\">\r\n                                                <br>\r\n                                                <mat-form-field appearance=\"outline\" color=\"primary\"\r\n                                                    [formGroup]=\"formArray[i]\">\r\n                                                    <input matInput formControlName=\"examen\" type=\"text\"\r\n                                                        [value]=\"element.value.examen\"\r\n                                                        (keydown)=\"validateNumber($event)\" />\r\n                                                </mat-form-field>\r\n                                            </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"moyenneS\">\r\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> MOYENNE\r\n                                                SEMESTRE/20</th>\r\n                                            <br>\r\n                                            <td mat-cell *matCellDef=\"let element\" [formGroup]=\"formArray[0]\">\r\n                                                {{ ((element.value.devoirTwo +element.value.devoirOne)/2 +\r\n                                                element.value.examen)/2 }}\r\n                                            </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"coef\">\r\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> COEF</th>\r\n                                            <td mat-cell *matCellDef=\"let element\">{{ element.value.coef }}</td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"noteDefinitive\">\r\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> NOTE DEFINITIVE\r\n                                            </th>\r\n                                            <td mat-cell *matCellDef=\"let element\" [formGroup]=\"formArray[0]\">\r\n                                                {{ (((element.value.devoirTwo +element.value.devoirOne)/2 +\r\n                                                element.value.examen)/2)*element.value.coef }}\r\n                                            </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"moyenneClasse\">\r\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> MOYENNE CLASSE\r\n                                            </th>\r\n                                            <td mat-cell *matCellDef=\"let element\" [formGroup]=\"formArray[0]\">\r\n                                                {{ element.value.moyenneClasse }}\r\n                                            </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"appreciations\">\r\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> APPRECIATIONS\r\n                                            </th>\r\n                                            <td mat-cell *matCellDef=\"let element\">{{ element.value.appreciations }}\r\n                                            </td>\r\n                                        </ng-container>\r\n\r\n                                        <tr mat-header-row *matHeaderRowDef=\"displayedHeaderColumns\"></tr>\r\n                                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                                        <!-- Row shown when there is no matching data. -->\r\n                                        <tr class=\"mat-row\" *matNoDataRow>\r\n                                            <td class=\"mat-cell\" colspan=\"4\">AUCUNE DONNEE NE CORRESPOND A\r\n                                                \"{{input.value}}\"\r\n                                            </td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </ng-container>\r\n                            </form>\r\n                        </div>\r\n                        <br>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-4\"></div>\r\n                            <div class=\"col-4\">\r\n                                <button type=\"submit\" mat-raised-button style=\"margin: 20px;padding: 30px;\"\r\n                                    color=\"primary\" (click)=\"register()\">ENREGISTRER</button>\r\n                            </div>\r\n                        </div>\r\n                        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n                            aria-label=\"Select page of users\"></mat-paginator>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { InscriptionDto } from 'src/app/models/InscriptionDto';\r\nimport { InscriptionService } from 'src/app/services/inscription/inscription.service';\r\n\r\n@Component({\r\n  selector: 'app-inscription-liste',\r\n  templateUrl: './inscription-liste.component.html',\r\n  styleUrls: ['./inscription-liste.component.css']\r\n})\r\nexport class InscriptionListeComponent {\r\n  public inscriptions!: InscriptionDto[];\r\n  @ViewChild(MatPaginator) paginator !: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  public dataSource!: MatTableDataSource<InscriptionDto>;\r\n  displayedColumns: string[] = ['etudiant', 'date', 'type', 'filiere', 'classe', 'niveau', 'annee', 'action'];\r\n  constructor(private service: InscriptionService, private router: Router) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.getAll();\r\n\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAll() {\r\n    this.service.getAllInscriptionsByYear().subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.inscriptions = response;\r\n          this.dataSource = new MatTableDataSource(this.inscriptions);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  edit(id: number) {\r\n    this.router.navigate([\"/dashboard/etuiant/update/\" + id]);\r\n  }\r\n\r\n  inscription(matricule: String) {\r\n    this.router.navigate([\"/dashboard/etudiant/inscription/\" + matricule]);\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.service.delete(id).subscribe({\r\n      next: (response) => {\r\n        this.getAll();\r\n      }, error: (error) => {\r\n        console.log(error);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">ETUDIANT</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">DASHBOARD</a></li>\r\n                <li class=\"breadcrumb-item active\">INSCRIPTIONS</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <h5 class=\"form-title\"><span>LISTE DES INSCRIPTIONS</span></h5>\r\n                    </div>\r\n                    \r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Filtrer</mat-label>\r\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"MATH100\" #input>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"mat-elevation-z8\">\r\n                        <div class=\"responsive-container table-responsive\">\r\n                            <table mat-table [dataSource]=\"dataSource\" class=\"table border-0 star-student table-hover table-center mb-0 datatable table-striped\" matSort>\r\n\r\n                                <!-- ID Column -->\r\n                                <!-- <ng-container matColumnDef=\"id\">\r\n                                                <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n                                                <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\r\n                                            </ng-container> -->\r\n\r\n                                <!-- ETUDIANT Column -->\r\n                                <ng-container matColumnDef=\"etudiant\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ETUDIANT </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.etudiant}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- DATE Column -->\r\n                                <ng-container matColumnDef=\"date\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> DATE D'INSCRIPTION</th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.date | date:'dd MMMM yyyy'}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- TYPE Column -->\r\n                                <ng-container matColumnDef=\"type\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE D'INSCRIPTION </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.type}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- NIVEAU Column -->\r\n                                <ng-container matColumnDef=\"filiere\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> FILIERE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.filiere }}</td>\r\n                                </ng-container>\r\n\r\n                                <!-- NIVEAU Column -->\r\n                                <ng-container matColumnDef=\"classe\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> CLASSE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.classe }}</td>\r\n                                </ng-container>\r\n\r\n                                <!-- NIVEAU Column -->\r\n                                <ng-container matColumnDef=\"niveau\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> NIVEAU </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.niveau }}</td>\r\n                                </ng-container>\r\n\r\n                                <!-- ANNEE Column -->\r\n                                <ng-container matColumnDef=\"annee\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ANNEE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.annee }}</td>\r\n                                </ng-container>\r\n\r\n\r\n                                <!-- action Column -->\r\n                                <ng-container matColumnDef=\"action\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </th>\r\n                                    <td mat-cell *matCellDef=\"let row\">\r\n                                        <button mat-icon-button color=\"warn\" [swal]=\"deleteSwal\" matTooltip=\"SUPPRIMER\">\r\n                                            <mat-icon matSuffix>delete</mat-icon>\r\n                                        </button>\r\n                                        <swal #deleteSwal title=\"Voulez vous supprimer l' INSCRIPTION?\"\r\n                                            text=\"Vous ne pourrez plus revenir en arriere\" icon=\"warning\"\r\n                                            [showCancelButton]=\"true\" [focusCancel]=\"true\" (confirm)=\"delete(row.id)\">\r\n                                        </swal>\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n\r\n\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                <!-- Row shown when there is no matching data. -->\r\n                                <tr class=\"mat-row\" *matNoDataRow>\r\n                                    <td class=\"mat-cell\" colspan=\"4\">AUCUNE DONNEE NE CORRESPOND A \"{{input.value}}\"\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n                            aria-label=\"Select page of users\"></mat-paginator>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, inject } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, of, takeUntil } from 'rxjs';\r\nimport { Classe } from 'src/app/models/Classe';\r\nimport { Etudiant } from 'src/app/models/Etudiant';\r\nimport { Filiere } from 'src/app/models/Filiere';\r\nimport { ClasseService } from 'src/app/services/classe/classe.service';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\nimport { EtudiantService } from 'src/app/services/etudiant/etudiant.service';\r\nimport { FiliereService } from 'src/app/services/filiere/filiere.service';\r\nimport { InscriptionService } from 'src/app/services/inscription/inscription.service';\r\n\r\n@Component({\r\n  selector: 'app-inscription',\r\n  templateUrl: './inscription.component.html',\r\n  styleUrls: ['./inscription.component.css']\r\n})\r\nexport class InscriptionComponent implements OnInit {\r\n  //NOTES:VARIALES\r\n  hintColor = \"red\";\r\n  registerForm!: FormGroup;\r\n  public filieres: Filiere[] = [];\r\n  public classes: Classe[] = [];\r\n  matricule!: string;\r\n  fullName!: string;\r\n  id!: number;\r\n  maxDate!: Date;\r\n  anneeSelected!: number;\r\n  niveaux: string[] = [\"LP\", \"MP\", \"BTS\"];\r\n  niveauM!: string;\r\n  //NOTE:FORMCONTROLS\r\n  filiereControl: FormControl = new FormControl(null, Validators.required);\r\n  filteredFilieres!: Observable<Filiere[]>;\r\n  classeControl: FormControl = new FormControl(null, Validators.required);\r\n  filteredClasses!: Observable<Classe[]>;\r\n  etudiantControl: FormControl = new FormControl(null);\r\n\r\n  //NOTE:INJECTIONS\r\n  private toastr = inject(ToastrService);\r\n  private filiereService = inject(FiliereService);\r\n  private classeService = inject(ClasseService);\r\n  private service = inject(InscriptionService);\r\n  private route = inject(ActivatedRoute);\r\n  private etudiantService = inject(EtudiantService);\r\n  private destroyService = inject(DestroyService);\r\n  private fb = inject(FormBuilder);\r\n\r\n\r\n  constructor() {\r\n    const currentDate = new Date();\r\n    const currentYear = currentDate.getFullYear();\r\n    const currentMonth = currentDate.getMonth();\r\n    const currentDay = currentDate.getDate();\r\n    this.maxDate = new Date(currentYear, currentMonth, currentDay);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n    this.loadDataFromMatriculeParam();\r\n    this.getAllFilieres();\r\n    this.subscribeToFormChanges();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.registerForm = this.fb.group({\r\n      dateInscription: [null, [Validators.required]],\r\n      typeInscription: [null, [Validators.required]],\r\n      annee: [null, [Validators.required]],\r\n      niveau: [null, [Validators.required]],\r\n      classe: this.classeControl,\r\n      etudiant: this.etudiantControl\r\n    });\r\n  }\r\n\r\n  loadDataFromMatriculeParam() {\r\n    this.route.paramMap.pipe(takeUntil(this.destroyService.onDestroy$))\r\n      .subscribe((value) => {\r\n        this.matricule = value.get('matricule')?.toString() ?? \"\";\r\n        this.getEtudiantById();\r\n      });\r\n  }\r\n\r\n  subscribeToFormChanges() {\r\n    this.filiereControl.valueChanges\r\n      .pipe(takeUntil(this.destroyService.onDestroy$))\r\n      .subscribe(val => {\r\n        this.filteredFilieres = of(this.findFilieres(val));\r\n      });\r\n    this.classeControl.valueChanges\r\n      .pipe(takeUntil(this.destroyService.onDestroy$))\r\n      .subscribe(val => {\r\n        this.filteredClasses = of(this.findClasses(val));\r\n      });\r\n  }\r\n\r\n  get dateInscription(): FormControl {\r\n    return this.registerForm.get('dateInscription') as FormControl;\r\n  }\r\n\r\n  get typeInscription(): FormControl {\r\n    return this.registerForm.get('typeInscription') as FormControl;\r\n  }\r\n\r\n  get annee(): FormControl {\r\n    return this.registerForm.get('annee') as FormControl;\r\n  }\r\n\r\n  get niveau(): FormControl {\r\n    return this.registerForm.get('niveau') as FormControl;\r\n  }\r\n\r\n  get filiere(): Filiere {\r\n    return this.filiereControl.value;\r\n  }\r\n\r\n  get classe(): Classe {\r\n    return this.classeControl.value;\r\n  }\r\n\r\n  onSelectedFiliere(id: number) {\r\n    this.classeControl.setValue(null);\r\n    if (this.registerForm.get('annee')?.value && this.registerForm.get('niveau')?.value) {\r\n      this.getAllClasses(id);\r\n    }\r\n  }\r\n\r\n  getEtudiantById() {\r\n    this.etudiantService.getByMatricule(this.matricule)\r\n      .pipe(takeUntil(this.destroyService.onDestroy$))\r\n      .subscribe({\r\n        next: (res) => {\r\n          this.fullName = res.name + \" \" + res.prenoms;\r\n          this.etudiantControl.setValue(res);\r\n        }, error: (error) => {\r\n          console.log(error);\r\n        }\r\n      })\r\n  }\r\n\r\n  getAllFilieres() {\r\n    this.filiereService.getAll()\r\n      .pipe(takeUntil(this.destroyService.onDestroy$))\r\n      .subscribe(\r\n        {\r\n          next: (response) => {\r\n            this.filieres = response;\r\n          },\r\n          error: (error) => {\r\n            console.log(error);\r\n          },\r\n        }\r\n      );\r\n  }\r\n\r\n  checkAnne() {\r\n    if (!this.registerForm.get('niveau')?.value) {\r\n      this.toastr.error(\"CHOSISSEZ UN NIVEAU \")\r\n    }\r\n    else if (!this.registerForm.get('annee')?.value) {\r\n      this.toastr.error(\"CHOSISSEZ L' ANNEE \")\r\n    }\r\n  }\r\n\r\n  fetchClasses() {\r\n    if (this.id && this.registerForm.get('annee')?.value && this.registerForm.get('niveau')?.value) {\r\n      this.getAllClasses(this.id);\r\n      this.classeControl.setValue(\"\");\r\n    }\r\n\r\n  }\r\n\r\n  getAllClasses(id: number) {\r\n    this.id = id;\r\n    const annee = this.registerForm.get('annee')?.value;\r\n    const niveau = this.registerForm.get('niveau')?.value;\r\n    this.classeService.getByFiliereAnneeNiveau(id, annee, niveau)\r\n      .pipe(takeUntil(this.destroyService.onDestroy$))\r\n      .subscribe(\r\n        {\r\n          next: (response) => {\r\n            this.classes = response;\r\n          },\r\n          error: (error) => {\r\n            console.log(error);\r\n          },\r\n        }\r\n      )\r\n  }\r\n\r\n  //NOTE: FIND IN \r\n  findFilieres(val: string): Filiere[] {\r\n    return this.filieres.filter(option =>\r\n      option.name.toLowerCase().includes(val));\r\n  }\r\n\r\n  findClasses(val: string): Classe[] {\r\n    return this.classes.filter(option =>\r\n      option.name.toLowerCase().includes(val));\r\n  }\r\n\r\n\r\n  //NOTE: INITIALIZE\r\n  initializeFilieres() {\r\n    this.filteredFilieres = of(this.findFilieres(\"\"))\r\n  }\r\n\r\n  initializeClasses() {\r\n    this.filteredClasses = of(this.findClasses(\"\"))\r\n  }\r\n\r\n  // NOTE:DISPLAY VALUE IN INPUT\r\n  displayFiliere(value: any) {\r\n    if (value != null) {\r\n      return value.name;\r\n    }\r\n  }\r\n\r\n  displayClasse(value: any) {\r\n    if (value != null) {\r\n      return value.name;\r\n    }\r\n  }\r\n\r\n  getValueNiveau() {\r\n    this.niveauM = this.registerForm.controls['niveau'].value;\r\n  }\r\n\r\n  inscription() {\r\n    const inscripiton = this.registerForm.value;\r\n    this.service.postRegistration(inscripiton)\r\n      .pipe(takeUntil(this.destroyService.onDestroy$))\r\n      .subscribe(\r\n        {\r\n          next: () => {\r\n            this.registerForm.setValue({\r\n              dateInscription: [null],\r\n              typeInscription: [null],\r\n              annee: [null],\r\n              niveau: [null],\r\n              classe: [null],\r\n              etudiant: this.etudiantControl\r\n            });\r\n            this.getAllFilieres();\r\n          }, error: (error) => {\r\n            this.registerForm.setValue({\r\n              dateInscription: [null],\r\n              typeInscription: [null],\r\n              annee: [null],\r\n              niveau: [null],\r\n              classe: [null],\r\n              etudiant: this.etudiantControl\r\n            });\r\n            if (error.status == 500) {\r\n              this.toastr.error(error.error);\r\n            }\r\n          }\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"page-header\" style=\"z-index: 0;\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">INSCRIPTION ETUDIANT</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Dashboard</a></li>\r\n                <li class=\"breadcrumb-item active\"><a routerLink=\"/dashboard/etudiant\">ETUDIANT</a></li>\r\n                <li class=\"breadcrumb-item active\">INSCRIPTION</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"registerForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 d-flex justify-content-center\"> <!-- Modified line -->\r\n                            <h5><span>{{ fullName }}</span></h5>\r\n                            <br>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>DATE D'INSCRIPTION </mat-label>\r\n                                <input matInput [matDatepicker]=\"picker\" formControlName=\"dateInscription\" [max]=\"maxDate\">\r\n                                <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #picker></mat-datepicker>\r\n                                <div *ngIf=\"dateInscription.touched && dateInscription.invalid\">\r\n                                    <mat-error *ngIf=\"dateInscription.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                        rentrer une valeur</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                                <mat-label>TYPE D' INSCRIPTION</mat-label>\r\n                                <mat-select formControlName=\"typeInscription\" >\r\n                                    <mat-option  [value]=\"'INSCRIPTION'\"> INSCRIPTION</mat-option>\r\n                                    <mat-option  [value]=\"'REINSCRIPTION'\"> REINSCRIPTION</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                                <mat-label>NIVEAU</mat-label>\r\n                                <mat-select formControlName=\"niveau\" (openedChange)=\"getValueNiveau()\" (selectionChange)=\"fetchClasses()\">\r\n                                    <mat-option *ngFor=\"let niveau of niveaux\" [value]=\"niveau\">\r\n                                        {{ niveau }}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                                <mat-label>ANNEE</mat-label>\r\n                                <mat-select formControlName=\"annee\" (selectionChange)=\"fetchClasses()\" >\r\n                                    <div *ngIf=\"niveauM === 'LP' \">\r\n                                        <mat-option [value]=\"1\">1ère année</mat-option>\r\n                                        <mat-option [value]=\"2\">2ème année</mat-option>\r\n                                        <mat-option [value]=\"3\">3ème année</mat-option>\r\n                                    </div>\r\n                                    <div *ngIf=\"niveauM === 'MP' || niveauM === 'BTS'\">\r\n                                        <mat-option [value]=\"1\" >1ère année</mat-option>\r\n                                        <mat-option [value]=\"2\">2ème année</mat-option>\r\n                                    </div>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>FILIERE</mat-label>\r\n                                <input matInput  [formControl]=\"filiereControl\"\r\n                                    [matAutocomplete]=\"auto\" (focus)=\"initializeFilieres()\" type=\"text\" />\r\n                                <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFiliere\"\r\n                                    (optionSelected)=\"onSelectedFiliere(filiere.id)\">\r\n                                    <mat-option *ngFor=\"let filiere of filteredFilieres | async\" [value]=\"filiere\">\r\n                                        {{ filiere.name }}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>CLASSE</mat-label>\r\n                                <input matInput formControlName=\"classe\" [formControl]=\"classeControl\"\r\n                                    [matAutocomplete]=\"auto1\" (focus)=\"initializeClasses()\" type=\"text\" (click)=\"checkAnne()\" />\r\n                                <mat-autocomplete #auto1=\"matAutocomplete\" [displayWith]=\"displayClasse\" >\r\n                                    <mat-option *ngFor=\"let classe of filteredClasses | async\" [value]=\"classe\">\r\n                                        {{ classe.name }}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6\" color=\"primary\"\r\n                                [disabled]=\"registerForm.invalid\" (click)=\"inscription()\">ENREGISTRER</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Etudiant } from 'src/app/models/Etudiant';\r\nimport { EtudiantService } from 'src/app/services/etudiant/etudiant.service';\r\n\r\n@Component({\r\n  selector: 'app-list-etudiant',\r\n  templateUrl: './list-etudiant.component.html',\r\n  styleUrls: ['./list-etudiant.component.css']\r\n})\r\nexport class ListEtudiantComponent implements OnInit {\r\n  public etudiants!: Etudiant[];\r\n  @ViewChild(MatPaginator) paginator !: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  public dataSource!: MatTableDataSource<Etudiant>;\r\n  displayedColumns: string[] = ['id','name','prenoms','age','dateNaiss','telephone','action'];\r\n  constructor(private service: EtudiantService, private router: Router) {\r\n    \r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.getAllEtudiants();\r\n    \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllEtudiants() {\r\n    this.service.getAll().subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.etudiants = response;\r\n          this.dataSource = new MatTableDataSource(this.etudiants);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  edit(id:number){\r\n    this.router.navigate([\"/dashboard/etudiant/update/\"+id]);\r\n  }\r\n\r\n  inscription(matricule:String){\r\n    this.router.navigate([\"/dashboard/etudiant/inscription/\"+matricule]);\r\n  }\r\n\r\n  delete(id:number){\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">ETUDIANT</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">DASHBOARD</a></li>\r\n                <li class=\"breadcrumb-item active\">ETUDIANT</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <h5 class=\"form-title\"><span>LISTE DES ETUDIANTS</span></h5>\r\n                    </div>\r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <a mat-raised-button color=\"primary\" class=\"add-button\"\r\n                            routerLink=\"/dashboard/etudiant/create\">AJOUTER</a>\r\n                    </div>\r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Filtrer</mat-label>\r\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"MATH100\" #input>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"mat-elevation-z8\">\r\n                        <div class=\"responsive-container table-responsive\">\r\n                            <table mat-table [dataSource]=\"dataSource\" matSort class=\"table border-0 star-student table-hover table-center mb-0 datatable table-striped\">\r\n\r\n                                <!-- ID Column -->\r\n                                <!-- Row Number Column -->\r\n                                <ng-container matColumnDef=\"id\">\r\n                                    <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                                    <td mat-cell *matCellDef=\"let i = index\"> {{ i + 1 }} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- NAME Column -->\r\n                                <ng-container matColumnDef=\"name\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> NOM </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- PRENOMS Column -->\r\n                                <ng-container matColumnDef=\"prenoms\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> PRENOMS </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.prenoms}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- AGE Column -->\r\n                                <ng-container matColumnDef=\"age\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> AGE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.age}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- DATE DE NAISSANCE Column -->\r\n                                <ng-container matColumnDef=\"dateNaiss\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> DATE DE NAISSANCE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.dateNaiss | date:'dd MMMM yyyy'}}</td>\r\n                                </ng-container>\r\n\r\n                                <!-- TELEPHONE Column -->\r\n                                <ng-container matColumnDef=\"telephone\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> TELEPHONE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.telephone }}</td>\r\n                                </ng-container>\r\n\r\n\r\n                                <!-- action Column -->\r\n                                <ng-container matColumnDef=\"action\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </th>\r\n                                    <td mat-cell *matCellDef=\"let row\">\r\n                                        <button mat-icon-button color=\"primary\" (click)=\"edit(row.matricule)\"\r\n                                            matTooltip=\"MODIFIER\">\r\n                                            <mat-icon matSuffix>edit</mat-icon>\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"accent\" (click)=\"inscription(row.matricule)\"\r\n                                            matTooltip=\"INSCRIPTION\">\r\n                                            <mat-icon class=\"material-icons color_yellow\"\r\n                                                matSuffix>person_add</mat-icon>\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"warn\" [swal]=\"deleteSwal\" matTooltip=\"SUPPRIMER\">\r\n                                            <mat-icon matSuffix>delete</mat-icon>\r\n                                        </button>\r\n                                        <swal #deleteSwal title=\"Voulez vous supprimer l'Etudiant?\"\r\n                                            text=\"Vous ne pourrez plus revenir en arriere\" icon=\"warning\"\r\n                                            [showCancelButton]=\"true\" [focusCancel]=\"true\" (confirm)=\"delete(row.id)\">\r\n                                        </swal>\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n\r\n\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                <!-- Row shown when there is no matching data. -->\r\n                                <tr class=\"mat-row\" *matNoDataRow>\r\n                                    <td class=\"mat-cell\" colspan=\"4\">AUCUNE DONNEE NE CORRESPOND A \"{{input.value}}\"\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n                            aria-label=\"Select page of users\"></mat-paginator>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, inject } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { takeUntil } from 'rxjs';\r\nimport { Etudiant } from 'src/app/models/Etudiant';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\nimport { EtudiantService } from 'src/app/services/etudiant/etudiant.service';\r\nimport { ImageService } from 'src/app/services/utils/image.service';\r\n\r\n@Component({\r\n  selector: 'app-update-etudiant',\r\n  templateUrl: './update-etudiant.component.html',\r\n  styleUrls: ['./update-etudiant.component.css']\r\n})\r\nexport class UpdateEtudiantComponent {\r\n  updateForm!: FormGroup;\r\n  hintColor = \"red\";\r\n  maxDate!: Date;\r\n  maxDateAd!: Date;\r\n  selectedFile: any = null;\r\n  private fb = inject(FormBuilder);\r\n  private service = inject(EtudiantService);\r\n  private toastr = inject(ToastrService);\r\n  private router = inject(Router);\r\n  private route = inject(ActivatedRoute);\r\n  private destroyService = inject(DestroyService);\r\n\r\n  constructor() {\r\n    const currentDate = new Date();\r\n    const currentYear = currentDate.getFullYear();\r\n    const currentMonth = currentDate.getMonth();\r\n    const currentDay = currentDate.getDate();\r\n    this.maxDate = new Date(currentYear - 8, currentMonth, currentDay);\r\n    this.maxDateAd = new Date(currentYear, currentMonth, currentDay);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n    this.loadDataFromMatriculeParam();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.updateForm = this.fb.group({\r\n      matricule: [null, [Validators.required]],\r\n      name: [null, [Validators.required, Validators.minLength(4)]],\r\n      prenoms: [null, [Validators.required, Validators.minLength(4)]],\r\n      age: [0, [Validators.required, Validators.maxLength(120)]],\r\n      telephone: [null, [Validators.required]],\r\n      dateNaiss: [null, [Validators.required]],\r\n      tuteur: [null, [Validators.required, Validators.minLength(4)]],\r\n      tuteurTel: [null, [Validators.required]],\r\n      dateAdmission: [null, [Validators.required]],\r\n      nationalite: [null, [Validators.required]],\r\n      sexe: [null, [Validators.required]],\r\n      photo: [\"\"],\r\n    });\r\n  }\r\n\r\n  loadDataFromMatriculeParam() {\r\n    this.route.paramMap.pipe(takeUntil(this.destroyService.onDestroy$)).subscribe((value) => {\r\n      const matricule = value.get('matricule')?.toString() ?? \"\";\r\n      this.service.getByMatricule(matricule).subscribe({\r\n        next: (res) => {\r\n          this.fillForm(res);\r\n        }, error: (error) => {\r\n          console.log(error);\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  //NOTE :FORMCONTROL GETTEURS\r\n  get matricule(): FormControl {\r\n    return this.updateForm.get('matricule') as FormControl;\r\n  }\r\n\r\n  get name(): FormControl {\r\n    return this.updateForm.get('name') as FormControl;\r\n  }\r\n\r\n  get photo(): FormControl {\r\n    return this.updateForm.get('photo') as FormControl;\r\n  }\r\n\r\n  get prenoms(): FormControl {\r\n    return this.updateForm.get('prenoms') as FormControl;\r\n  }\r\n\r\n  get age(): FormControl {\r\n    return this.updateForm.get(\"age\") as FormControl;\r\n  }\r\n\r\n  get dateNaiss(): FormControl {\r\n    return this.updateForm.get(\"dateNaiss\") as FormControl;\r\n  }\r\n\r\n  get telephone(): FormControl {\r\n    return this.updateForm.get(\"telephone\") as FormControl;\r\n  }\r\n\r\n  get tuteur(): FormControl {\r\n    return this.updateForm.get(\"tuteur\") as FormControl;\r\n  }\r\n\r\n  get tuteurTel(): FormControl {\r\n    return this.updateForm.get(\"tuteurTel\") as FormControl;\r\n  }\r\n\r\n  get dateAdmission(): FormControl {\r\n    return this.updateForm.get(\"dateAdmission\") as FormControl;\r\n  }\r\n\r\n  get nationalite(): FormControl {\r\n    return this.updateForm.get(\"nationalite\") as FormControl;\r\n  }\r\n\r\n\r\n  //NOTE:METHODES\r\n  update() {\r\n    const etudiant = this.updateForm.value;\r\n    this.service.putUpdate(etudiant, etudiant.matricule).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: () => {\r\n          this.router.navigate(['/dashboard/etudiant']);\r\n        },\r\n        error: (error) => {\r\n          if (error.status == 500) {\r\n            this.toastr.error(error.error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  fillForm(etudiant: Etudiant) {\r\n    this.updateForm.setValue({\r\n      matricule: etudiant.matricule,\r\n      name: etudiant.name,\r\n      prenoms: etudiant.prenoms,\r\n      age: etudiant.age,\r\n      telephone: etudiant.telephone,\r\n      dateNaiss: etudiant.dateNaiss,\r\n      tuteur: etudiant.tuteur,\r\n      tuteurTel: etudiant.tuteurTel,\r\n      dateAdmission: etudiant.dateAdmission,\r\n      nationalite: etudiant.nationalite,\r\n      sexe: etudiant.sexe,\r\n      photo: etudiant.photo,\r\n    });\r\n  }\r\n\r\n  //NOTE: CHECK NUMBER\r\n  validateNumber(event: KeyboardEvent): void {\r\n    const input = event.key;\r\n    const isNumber = /^[0-9]$/.test(input);\r\n    const isBackspace = input === \"Backspace\";\r\n    const isPlus = input === \"+\";\r\n    const isSpace = input === \" \";\r\n    if (!isNumber && !isBackspace && !isPlus && !isSpace) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  onSelectedFile(event: any) {\r\n    if (event.target.files) {\r\n      const file = event.target.files[0];\r\n      // const uniqueName = this.imageService.generateUniqueFileName(file.name);\r\n      // this.updateForm.patchValue({photo:uniqueName});\r\n    }\r\n  }\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">ENREGISTREMENT ETUDIANT</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">DASHBOARD</a></li>\r\n                <li class=\"breadcrumb-item active\"><a routerLink=\"/dashboard/etudiant\">ETUDIANT</a></li>\r\n                <li class=\"breadcrumb-item active\">ENREGISTRER</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\"></div>\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"updateForm\" multip>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 d-flex justify-content-center\"> <!-- Modified line -->\r\n                            <h5><span>ETUDIANT</span></h5>\r\n                            <br>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-label>IMAGE</mat-label>\r\n                            <input  type=\"file\" class=\"form-control\"  (change)=\"onSelectedFile($event)\" #selectFile\r\n                                [ngClass]=\"{ 'is-invalid': photo.errors?.['required'] && photo.invalid }\"  />\r\n                            <div *ngIf=\"photo.touched && photo.invalid\">\r\n                                <mat-error *ngIf=\"photo.errors?.['required']\" [ngClass]=\"{color:   hintColor}\">VEUILLEZ\r\n                                    ENTREZ UNE VALEUR</mat-error>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ UN MATRICULE</mat-label>\r\n                                <input matInput formControlName=\"matricule\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': matricule.errors?.['required'] && matricule.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"matricule.touched && matricule.invalid\">\r\n\r\n                                    <mat-error *ngIf=\"name.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">VEUILLEZ ENTREZ UNE VALEUR</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ UN NOM</mat-label>\r\n                                <input matInput formControlName=\"name\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': name.errors?.['required'] && name.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"name.touched && name.invalid\">\r\n\r\n                                    <mat-error *ngIf=\"name.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">VEUILLEZ ENTREZ UNE VALEUR</mat-error>\r\n                                    <mat-error *ngIf=\"name.errors?.['minlength']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">ENTREZ AU MINIMUM 4 LETTRES</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ VOTRE PRENOMS </mat-label>\r\n                                <input matInput formControlName=\"prenoms\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': prenoms.errors?.['required'] && prenoms.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"prenoms.touched && prenoms.invalid\">\r\n\r\n                                    <mat-error *ngIf=\"prenoms.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">VEUILLEZ ENTREZ UNE VALEUR</mat-error>\r\n                                    <mat-error *ngIf=\"prenoms.errors?.['minlength']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">ENTREZ AU MINIMUM 4 LETTRES</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ VOTRE AGE </mat-label>\r\n                                <input matInput formControlName=\"age\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': age.errors?.['required'] && age.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"age.touched && age.invalid\">\r\n                                    <mat-error *ngIf=\"age.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">VEUILLEZ ENTREZ UNE VALEUR </mat-error>\r\n                                    <mat-error *ngIf=\"age.errors?.['minlength']\" [ngClass]=\"{color:   hintColor}\">ENTREZ\r\n                                        AU MINIMUM 4 LETTRES</mat-error>\r\n                                    <mat-error *ngIf=\"age.errors?.['minlength']\" [ngClass]=\"{color:   hintColor}\">ENTREZ\r\n                                        UN AGE MAXIMAL DE 120</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ VOTRE TELEPHONE </mat-label>\r\n                                <input matInput formControlName=\"telephone\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': telephone.errors?.['required'] && telephone.invalid }\"\r\n                                    (keydown)=\"validateNumber($event)\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"telephone.touched && telephone.invalid\">\r\n                                    <mat-error *ngIf=\"telephone.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">VEUILLEZ ENTREZ UNE VALEUR</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ VOTRE NATIONALITE </mat-label>\r\n                                <input matInput formControlName=\"nationalite\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': nationalite.errors?.['required'] && nationalite.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"nationalite.touched && nationalite.invalid\">\r\n                                    <mat-error *ngIf=\"nationalite.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">VEUILLEZ ENTREZ UNE VALEUR</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>SEXE</mat-label>\r\n                                <mat-select formControlName=\"sexe\">\r\n                                    <mat-option [value]=\"'HOMME'\">HOMME</mat-option>\r\n                                    <mat-option [value]=\"'FEMME'\">FEMME</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>DATE DE NAISSANCE </mat-label>\r\n                                <input matInput [matDatepicker]=\"picker\" formControlName=\"dateNaiss\" [max]=\"maxDate\">\r\n                                <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #picker></mat-datepicker>\r\n                                <div *ngIf=\"dateNaiss.touched && dateNaiss.invalid\">\r\n                                    <mat-error *ngIf=\"dateNaiss.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">VEUILLEZ ENTREZ UNE VALEUR</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>DATE DE D' ADMISSION </mat-label>\r\n                                <input matInput [matDatepicker]=\"picker1\" formControlName=\"dateAdmission\"\r\n                                    [max]=\"maxDateAd\">\r\n                                <mat-datepicker-toggle matIconSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #picker1></mat-datepicker>\r\n                                <div *ngIf=\"dateAdmission.touched && dateAdmission.invalid\">\r\n                                    <mat-error *ngIf=\"dateAdmission.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">VEUILLEZ ENTREZ UNE VALEUR</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ UN NOM COMPLET DU TUTEUR</mat-label>\r\n                                <input matInput formControlName=\"tuteur\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': tuteur.errors?.['required'] && tuteur.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"tuteur.touched && tuteur.invalid\">\r\n                                    <mat-error *ngIf=\"tuteur.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">VEUILLEZ ENTREZ UNE VALEUR</mat-error>\r\n                                    <mat-error *ngIf=\"tuteur.errors?.['minlength']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">ENTREZ AU MINIMUM 4 LETTRES</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ VOTRE TELEPHONE DU TUTEUR </mat-label>\r\n                                <input matInput formControlName=\"tuteurTel\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': tuteurTel.errors?.['required'] && tuteurTel.invalid }\"\r\n                                    (keydown)=\"validateNumber($event)\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"tuteurTel.touched && tuteurTel.invalid\">\r\n                                    <mat-error *ngIf=\"tuteurTel.errors?.['required']\"\r\n                                        [ngClass]=\"{color:   hintColor}\">VEUILLEZ ENTREZ UNE VALEUR</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6\"  [disabled]=\"updateForm.invalid\" (click)=\"update()\">MODIFIER</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, inject } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { takeUntil } from 'rxjs';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\nimport { FiliereService } from 'src/app/services/filiere/filiere.service';\r\n\r\n@Component({\r\n  selector: 'app-create-filiere',\r\n  templateUrl: './create-filiere.component.html',\r\n  styleUrls: ['./create-filiere.component.css']\r\n})\r\nexport class CreateFiliereComponent implements OnInit {\r\n  hintColor = \"red\";\r\n  registerForm!: FormGroup;\r\n\r\n  //NOTE:INJECTIONS\r\n  private fb = inject(FormBuilder);\r\n  private service=inject(FiliereService);\r\n  private toastr = inject(ToastrService);\r\n  private destroyService = inject(DestroyService);\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = this.fb.group({\r\n      name: [null, [Validators.required, Validators.minLength(4)]],\r\n    });\r\n  }\r\n\r\n  get name(){\r\n    return this.registerForm.get('name') as FormControl;\r\n  }\r\n\r\n\r\n  register() {\r\n    const filiere = this.registerForm.value;\r\n    this.service.postRegistration(filiere).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: (response) => {\r\n          console.log(response.status);\r\n          this.registerForm.setValue({\r\n            name: \"\"\r\n          });\r\n        },\r\n        error: (error) => {\r\n          if (error.status == 500) {\r\n            this.toastr.error(error.error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">ENREGISTREMENT FILIERE</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Dashboard</a></li>\r\n                <li class=\"breadcrumb-item active\"><a routerLink=\"/dashboard/filiere\">FILIERE</a></li>\r\n                <li class=\"breadcrumb-item active\">ENREGISTER</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-3\"></div>\r\n    <div class=\"col-sm-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"registerForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 d-flex justify-content-center\"> <!-- Modified line -->\r\n                            <h5><span>FILIERE</span></h5>\r\n                            <br>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\"  [style.width]=\"'100%'\">\r\n                                <mat-label>Entrez le nom </mat-label>\r\n                                <input matInput formControlName=\"name\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': name.errors?.['required'] && name.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\r\n                                <div *ngIf=\"name.touched && name.invalid\">\r\n                                    <mat-error *ngIf=\"name.errors?.['required']\" [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                        rentrer une valeur</mat-error>\r\n                                    <mat-error *ngIf=\"name.errors?.['minlength']\" [ngClass]=\"{color:   hintColor}\">Entrez\r\n                                        au minimum 4\r\n                                        lettres</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6\" color=\"primary\" [disabled]=\"registerForm.invalid\"\r\n                                (click)=\"register()\">ENREGISTRER</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, of } from 'rxjs';\r\nimport { LoginComponent } from 'src/app/login/login.component';\r\nimport { FiliereUeDto } from 'src/app/models/FiliereUeDto';\r\nimport { UE } from 'src/app/models/UE';\r\nimport { FiliereService } from 'src/app/services/filiere/filiere.service';\r\nimport { FiliereueService } from 'src/app/services/filiereue/filiereue.service';\r\nimport { UeService } from 'src/app/services/ue/ue.service';\r\n\r\n@Component({\r\n  selector: 'app-filiere-ue',\r\n  templateUrl: './filiere-ue.component.html',\r\n  styleUrls: ['./filiere-ue.component.css']\r\n})\r\nexport class FiliereUeComponent implements OnInit {\r\n  registerForm!: FormGroup;\r\n  ues: UE[] = [];\r\n  id!: number;\r\n  ueControl: FormControl = new FormControl(null, Validators.required);\r\n  displayUE!: string;\r\n  filteredOptions!: Observable<UE[]>;\r\n  filiereControl: FormControl = new FormControl(null, Validators.required);\r\n\r\n  //NOTE: TABLE PART\r\n  public uesT!: FiliereUeDto[];\r\n  @ViewChild(MatPaginator) paginator !: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  public dataSource!: MatTableDataSource<FiliereUeDto>;\r\n  displayedColumns: string[] = ['code','niveau','annee','semestre', 'action'];\r\n  niveauM!: string;\r\n  niveaux: string[] = [\"LP\", \"MP\", \"BTS\"];\r\n\r\n\r\n  constructor(private fb: FormBuilder, private toastr: ToastrService, private ueService: UeService, private service: FiliereueService, private filiereService: FiliereService, private route: ActivatedRoute) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = this.fb.group({\r\n      ue: this.ueControl,\r\n      filiere: this.filiereControl,\r\n      niveau: ['LP', [Validators.required]],\r\n      annee: [null, [Validators.required]],\r\n      semestre: [null, [Validators.required]],\r\n      active: [0],\r\n\r\n    });\r\n    this.getAllUes();\r\n    this.ueControl.valueChanges\r\n      .subscribe(val => {\r\n        this.filteredOptions = of(this.findUes(val));\r\n      });\r\n\r\n    this.route.paramMap.subscribe((value) => {\r\n      this.id = Number(value.get('id'));\r\n      this.getFiliereByid(this.id);\r\n      this.getAllFiliereUes(this.id);\r\n    });\r\n  }\r\n\r\n  //NOTE: dynamique selection\r\n  initializeUes() {\r\n    this.filteredOptions = of(this.findUes(\"\"))\r\n  }\r\n\r\n  getValueNiveau() {\r\n    this.niveauM = this.registerForm.controls['niveau'].value;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  findUes(val: string): UE[] {\r\n    return this.ues.filter(option =>\r\n      option.code.toLowerCase().includes(val));\r\n  }\r\n\r\n  displayUe(value: any) {\r\n    if (value != null) {\r\n      return value.code;\r\n    }\r\n  }\r\n\r\n  register() {\r\n    const value = this.registerForm.value;\r\n    console.log(value);\r\n    \r\n    this.service.postRegistration(value).subscribe({\r\n      next: (response) => {\r\n        this.registerForm = this.fb.group({\r\n          ue: null,\r\n          filiere: this.filiereControl,\r\n          niveau: ['LP', [Validators.required]],\r\n          annee: [null, [Validators.required]],\r\n          semestre: [null, [Validators.required]],\r\n          active: [1],\r\n        });\r\n        this.getAllFiliereUes(this.id);\r\n      }, error: (response) => {\r\n        this.registerForm = this.fb.group({\r\n          ue: null,\r\n          filiere: this.filiereControl,\r\n          niveau: ['LP', [Validators.required]],\r\n          annee: [null, [Validators.required]],\r\n          semestre: [null, [Validators.required]],\r\n          active: [1],\r\n        });\r\n        this.toastr.error(response.error)\r\n      }\r\n    })\r\n  }\r\n\r\n  //NOTE:FETCH DATA\r\n  getAllUes() {\r\n    this.ueService.getAllUes().subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.ues = response;\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getFiliereByid(id: number) {\r\n    this.filiereService.getById(id).subscribe({\r\n      next: (response) => {\r\n        this.filiereControl.setValue(response);\r\n      }, error: (error) => {\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n\r\n  getAllFiliereUes(id: number) {\r\n    this.filiereService.getUesDtoById(id).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.uesT = response;\r\n          this.dataSource = new MatTableDataSource(this.uesT);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.service.delete(id).subscribe({\r\n      next: (response) => {\r\n        this.getAllFiliereUes(this.id);\r\n      }, error: (error) => {\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\"> UES DE LA FILIERES</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">DASHBOARD</a></li>\r\n                <li class=\"breadcrumb-item active\"><a routerLink=\"/dashboard/filiere\">FILIERES</a></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-3\"></div>\r\n    <div class=\"col-sm-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"registerForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 d-flex justify-content-center\"> <!-- Modified line -->\r\n                            <h5><span>UES</span></h5>\r\n                            <br>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>CHOISISSEZ UNE UE </mat-label>\r\n                                <input matInput formControlName=\"ue\" type=\"text\" [formControl]=\"ueControl\" [matAutocomplete]=\"auto\" (focus)=\"initializeUes()\"  />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayUe\">\r\n                                    <mat-option *ngFor=\"let ue of filteredOptions | async\" [value]=\"ue\" >\r\n                                        {{ ue.code }}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                                <mat-label>NIVEAU</mat-label>\r\n                                <mat-select formControlName=\"niveau\" (openedChange)=\"getValueNiveau()\">\r\n                                    <mat-option *ngFor=\"let niveau of niveaux\" [value]=\"niveau\">\r\n                                        {{ niveau }}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                            \r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                                <mat-label>ANNEE</mat-label>\r\n                                <mat-select formControlName=\"annee\" >\r\n                                    <div *ngIf=\"niveauM === 'LP' \">\r\n                                        <mat-option [value]=\"1\">1ère année</mat-option>\r\n                                        <mat-option [value]=\"2\">2ème année</mat-option>\r\n                                        <mat-option [value]=\"3\">3ème année</mat-option>\r\n                                    </div>\r\n                                    <div *ngIf=\"niveauM === 'MP' || niveauM === 'BTS'\">\r\n                                        <mat-option [value]=\"1\" >1ère année</mat-option>\r\n                                        <mat-option [value]=\"2\">2ème année</mat-option>\r\n                                    </div>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                                <mat-label>SEMESTRE</mat-label>\r\n                                <mat-select formControlName=\"semestre\" >\r\n                                    <div >\r\n                                        <mat-option [value]=\"1\" >1ère année</mat-option>\r\n                                        <mat-option [value]=\"2\">2ème année</mat-option>\r\n                                    </div>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                            <div class=\"col-12\">\r\n                                <mat-radio-group formControlName=\"active\" aria-label=\"Select\" >\r\n                                    <mat-radio-button [checked]=\"true\" [value]=\"1\">ACTIVE</mat-radio-button>\r\n                                    <mat-radio-button [value]=\"0\">INACTIVE</mat-radio-button>\r\n                                </mat-radio-group>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6\" color=\"primary\"\r\n                                [disabled]=\"registerForm.invalid\" (click)=\"register()\">ENREGISTRER</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <h5 class=\"form-title\"><span>LISTE DES UES</span></h5>\r\n                    </div>\r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Filtrer</mat-label>\r\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"MATH100\" #input>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"mat-elevation-z8\">\r\n                        <div class=\"responsive-container\">\r\n                            <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n                                <!-- ID Column -->\r\n                                <!-- <ng-container matColumnDef=\"id\">\r\n                                                <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n                                                <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\r\n                                            </ng-container> -->\r\n\r\n                                <!-- FirstName Column -->\r\n                                <ng-container matColumnDef=\"code\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> CODE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.code}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"niveau\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> NIVEAU </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.niveau}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"annee\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ANNEE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.annee}} </td>\r\n                                </ng-container>\r\n\r\n                                <ng-container matColumnDef=\"semestre\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> SEMESTRE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.semestre}} </td>\r\n                                </ng-container>\r\n\r\n\r\n                                <!-- action Column -->\r\n                                <ng-container matColumnDef=\"action\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </th>\r\n                                    <td mat-cell *matCellDef=\"let row\">\r\n                                        <button mat-icon-button color=\"warn\" [swal]=\"deleteSwal\">\r\n                                            <mat-icon matSuffix>delete</mat-icon>\r\n                                        </button>\r\n                                        <swal #deleteSwal title=\"Voulez vous supprimer l'UE?\" text=\"Vous ne pourrez plus revenir en arriere\"\r\n                                            icon=\"warning\" [showCancelButton]=\"true\" [focusCancel]=\"true\"\r\n                                            (confirm)=\"delete(row.id)\">\r\n                                        </swal>\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n\r\n\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                <!-- Row shown when there is no matching data. -->\r\n                                <tr class=\"mat-row\" *matNoDataRow>\r\n                                    <td class=\"mat-cell\" colspan=\"4\">AUCUNE DONNEE NE CORRESPOND A \"{{input.value}}\" </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n                            aria-label=\"Select page of users\"></mat-paginator>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component,OnInit,ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { Filiere } from 'src/app/models/Filiere';\r\nimport { FiliereService } from 'src/app/services/filiere/filiere.service';\r\n\r\n@Component({\r\n  selector: 'app-list-filiere',\r\n  templateUrl: './list-filiere.component.html',\r\n  styleUrls: ['./list-filiere.component.css']\r\n})\r\nexport class ListFiliereComponent implements OnInit {\r\n  public filieres!: Filiere[];\r\n  @ViewChild(MatPaginator) paginator !: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  public dataSource!: MatTableDataSource<Filiere>;\r\n  displayedColumns: string[] = ['id','name','action'];\r\n\r\n  constructor(private service: FiliereService, private router: Router) {}\r\n  ngOnInit(): void {\r\n    this.getAllFilieres();\r\n  }\r\n  \r\n  getAllFilieres() {\r\n      this.service.getAll().subscribe(\r\n        {\r\n          next: (response) => {\r\n            this.filieres = response;\r\n            this.dataSource = new MatTableDataSource(this.filieres);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          },\r\n          error: (error) => {\r\n            console.log(error);\r\n          },\r\n        }\r\n      );\r\n  }\r\n\r\n  getUes(id:number){\r\n    this.router.navigate([\"/dashboard/filiere/ues/\"+id]);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  edit(id:number){\r\n    this.router.navigate([\"/dashboard/filiere/update/\"+id]);\r\n  } \r\n\r\n  delete(id:number){\r\n    this.service.delete(id).subscribe({\r\n      next:() =>{\r\n        this.getAllFilieres();\r\n      },error:(error) =>{\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">FILIERE</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Dashboard</a></li>\r\n                <li class=\"breadcrumb-item act  ive\">FILIERE</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <h5 class=\"form-title\"><span>LISTE DES FILIERES</span></h5>\r\n                    </div>\r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <a mat-raised-button color=\"primary\" class=\"add-button\"\r\n                            routerLink=\"/dashboard/filiere/create\">AJOUTER</a>\r\n                    </div>\r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Filtrer</mat-label>\r\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"MATH100\" #input>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"mat-elevation-z8\">\r\n                        <div class=\"responsive-container table-responsive\">\r\n                            <table mat-table [dataSource]=\"dataSource\" matSort class=\"table border-0 star-student table-hover table-center mb-0 datatable table-striped\">\r\n\r\n                                <!-- ID Column -->\r\n                                <!-- Row Number Column -->\r\n                                <ng-container matColumnDef=\"id\">\r\n                                    <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                                    <td mat-cell *matCellDef=\"let i = index\"> {{ i + 1 }} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- Name Column -->\r\n                                <ng-container matColumnDef=\"name\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> name </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- action Column -->\r\n                                <ng-container matColumnDef=\"action\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> action </th>\r\n                                    <td mat-cell *matCellDef=\"let row\">\r\n                                        <button mat-icon-button color=\"accent\" (click)=\"getUes(row.id)\"\r\n                                            matTooltip=\"UES\">\r\n                                            <mat-icon class=\"material-icons color_yellow\" matSuffix>book</mat-icon>\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"primary\" (click)=\"edit(row.id)\"\r\n                                            matTooltip=\"MODIFIER\">\r\n                                            <mat-icon matSuffix>edit</mat-icon>\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"warn\" [swal]=\"deleteSwal\" matTooltip=\"SUPPRIMER\">\r\n                                            <mat-icon matSuffix>delete</mat-icon>\r\n                                        </button>\r\n                                        <swal #deleteSwal title=\"Voulez vous supprimer la filiere?\"\r\n                                            text=\"Vous ne pourrez plus revenir en arriere\" icon=\"warning\"\r\n                                            [showCancelButton]=\"true\" [focusCancel]=\"true\" (confirm)=\"delete(row.id)\">\r\n                                        </swal>\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n\r\n\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                <!-- Row shown when there is no matching data. -->\r\n                                <tr class=\"mat-row\" *matNoDataRow>\r\n                                    <td class=\"mat-cell\" colspan=\"4\">Aucune donnée ne correspond à \"{{input.value}}\"\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n                            aria-label=\"Select page of users\"></mat-paginator>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Filiere } from 'src/app/models/Filiere';\r\nimport { FiliereService } from 'src/app/services/filiere/filiere.service';\r\n\r\n@Component({\r\n  selector: 'app-update-filiere',\r\n  templateUrl: './update-filiere.component.html',\r\n  styleUrls: ['./update-filiere.component.css']\r\n})\r\nexport class UpdateFiliereComponent implements OnInit {\r\n  hintColor = \"red\";\r\n  updateForm: any;\r\n  id!: number;\r\n  constructor(private fb: FormBuilder, private service: FiliereService, private toastr: ToastrService, private route: ActivatedRoute,private router:Router) { }\r\n  ngOnInit(): void {\r\n    this.updateForm = this.fb.group({\r\n      name: [null, [Validators.required, Validators.minLength(4)]],\r\n    });\r\n    this.route.paramMap.subscribe((value) => {\r\n      this.id = Number(value.get('id'));\r\n      this.service.getById(this.id).subscribe({\r\n        next: (res) => {\r\n          this.fillForm(res);\r\n        }, error: (error) => {\r\n          console.log(error);\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  get fc() {\r\n    return this.updateForm.controls;\r\n  }\r\n\r\n  fillForm(filiere:Filiere) {\r\n    this.updateForm.setValue({\r\n      name: filiere.name\r\n    });\r\n  }\r\n\r\n  update() {\r\n    const filiere = this.updateForm.value;\r\n    this.service.putUpdate(filiere,this.id).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.router.navigate(['/dashboard/filiere']);;\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n          if (error.status == 500) {\r\n            this.toastr.error(error.error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">MODIFICATION FILIERE</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Dashboard</a></li>\r\n                <li class=\"breadcrumb-item active\"><a routerLink=\"/dashboard/filiere\">FILIERE</a></li>\r\n                <li class=\"breadcrumb-item active\">MODIFICATION</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-3\"></div>\r\n    <div class=\"col-sm-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"updateForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <div class=\"col-md-3\"></div>\r\n                            <h5 class=\"form-title\"><span>FILIERE</span></h5>\r\n                        </div>\r\n                        <!-- <div class=\"col-md-3\"></div> -->\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\" >\r\n                                <mat-label>Entrez le nom </mat-label>\r\n                                <input matInput formControlName=\"name\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': fc.name.required && fc.name.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\r\n                                <div *ngIf=\"fc.name.touched && fc.name.invalid\">\r\n                                    <mat-error *ngIf=\"fc.name.errors?.required\" [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                        rentrer une valeur</mat-error>\r\n                                    <mat-error *ngIf=\"fc.name.errors?.minlength\" [ngClass]=\"{color:   hintColor}\">Entrez\r\n                                        au minimum 4\r\n                                        lettres</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6\"  [disabled]=\"updateForm.invalid\"\r\n                                (click)=\"update()\">MODIFIER</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewRef, inject } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { UE } from 'src/app/models/UE';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\nimport { MatiereService } from 'src/app/services/matiere/matiere.service';\r\nimport { UeService } from 'src/app/services/ue/ue.service';\r\n\r\n@Component({\r\n  selector: 'app-create-matiere',\r\n  templateUrl: './create-matiere.component.html',\r\n  styleUrls: ['./create-matiere.component.css']\r\n})\r\nexport class CreateMatiereComponent implements OnInit {\r\n  hintColor = \"red\";\r\n  registerForm: any;\r\n  ues!: UE[];\r\n\r\n  //NOTE:INJECTIONS\r\n  private fb = inject(FormBuilder);\r\n  private service = inject(MatiereService);\r\n  private ueService = inject(UeService);\r\n  private destroyService = inject(DestroyService);\r\n\r\n  //NOTE: SUBSCRIPTIONS\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n    this.getAllUes();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.registerForm = this.fb.group({\r\n      name: [null, [Validators.required, Validators.minLength(4)]],\r\n      credit: [null, [Validators.required]],\r\n      ue: [null, [Validators.required]]\r\n    });\r\n  }\r\n\r\n  getAllUes() {\r\n    this.ueService.getAllUes().pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.ues = response;\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  //NOTES: getteurs\r\n  get name(): FormControl {\r\n    return this.registerForm.get(\"name\") as FormControl;\r\n  }\r\n\r\n  get credit(): FormControl {\r\n    return this.registerForm.get(\"credit\") as FormControl;\r\n  }\r\n\r\n  get ue(): FormControl {\r\n    return this.registerForm.get(\"ue\") as FormControl;\r\n  }\r\n\r\n\r\n  register() {\r\n    const matiere = this.registerForm.value;\r\n    this.service.postRegistration(matiere).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: () => {\r\n          this.registerForm.setValue({\r\n            name: \"\",\r\n            credit: 0,\r\n            ue: null,\r\n          });\r\n          this.getAllUes();\r\n        }, error: (error) => {\r\n          console.log(error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  validateNumber(event: KeyboardEvent): void {\r\n    const input = event.key;\r\n    const isNumber = /^[0-9]$/.test(input);\r\n    const isBackspace = input === \"Backspace\";\r\n    if (!isNumber && !isBackspace) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">ENREGISTREMENT MATIERE</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Dashboard</a></li>\r\n                <li class=\"breadcrumb-item active\"><a routerLink=\"/dashboard/matiere\">MATIERE</a></li>\r\n                <li class=\"breadcrumb-item active\">CREER</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-3\"></div>\r\n    <div class=\"col-sm-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"registerForm\">\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"col-12 d-flex justify-content-center\"> <!-- Modified line -->\r\n                            <h5><span>MATIERE</span></h5>\r\n                            <br>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>Entrez le nom </mat-label>\r\n                                <input matInput formControlName=\"name\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': name.errors?.['required'] && name.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\r\n                                <div *ngIf=\"name.touched && name.invalid\">\r\n                                    <mat-error *ngIf=\"name.errors?.['required']\" [ngClass]=\"{color:   hintColor}\">\r\n                                        VEUILLEZ ENTRER UNE VALEUR\r\n                                    </mat-error>\r\n                                    <mat-error *ngIf=\"name.errors?.['minlength']\" [ngClass]=\"{color:   hintColor}\">\r\n                                        ENTREZ AU MINIMUM 4 LETTRES\r\n                                    </mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>Entrez le credit de la matiere </mat-label>\r\n                                <input matInput formControlName=\"credit\" type=\"number\"\r\n                                    [ngClass]=\"{ 'is-invalid': credit.errors?.['required'] && credit.invalid }\" (keydown)=\"validateNumber($event)\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\r\n                                <div *ngIf=\"credit.touched && credit.invalid\">\r\n                                    <mat-error *ngIf=\"credit.errors?.['required']\" [ngClass]=\"{color:   hintColor}\">\r\n                                        VEUILLEZ ENTRER UNE VALEUR\r\n                                    </mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field style=\"width: 100%;\">\r\n                                <mat-label>UES</mat-label>\r\n                                <mat-select formControlName=\"ue\">\r\n                                    <mat-option *ngFor=\"let ue of ues\" [value]=\"ue\">\r\n                                        {{ ue.code }}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6\" color=\"primary\"\r\n                                [disabled]=\"registerForm.invalid\" (click)=\"register()\">ENREGISTRER</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewChild, ViewRef, inject } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { MatiereUE } from 'src/app/models/MatiereUe';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\nimport { MatiereService } from 'src/app/services/matiere/matiere.service';\r\n\r\n@Component({\r\n  selector: 'app-list-matiere',\r\n  templateUrl: './list-matiere.component.html',\r\n  styleUrls: ['./list-matiere.component.css']\r\n})\r\nexport class ListMatiereComponent implements OnInit {\r\n  public matieres!: MatiereUE[];\r\n  @ViewChild(MatPaginator) paginator !: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  public dataSource!: MatTableDataSource<MatiereUE>;\r\n  displayedColumns: string[] = ['id', 'name', 'credit', 'ue', 'action'];\r\n\r\n  //NOTE: INJECTIONS\r\n  private service = inject(MatiereService);\r\n  private router = inject(Router);\r\n  private destroyService = inject(DestroyService);\r\n  \r\n  ngOnInit(): void {\r\n    this.getAllMatieres();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllMatieres() {\r\n    this.service.getAll().pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.matieres = response;\r\n          console.log(response);\r\n          this.dataSource = new MatTableDataSource(this.matieres);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  edit(id: number) {\r\n    this.router.navigate([\"/dashboard/matiere/update/\" + id]);\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.service.delete(id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n      next: () => {\r\n        this.getAllMatieres();\r\n      }, error: (error) => {\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">Matiere</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Dashboard</a></li>\r\n                <li class=\"breadcrumb-item act  ive\">Matiere</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <h5 class=\"form-title\"><span>LISTE DES MATIERE</span></h5>\r\n                    </div>\r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <a mat-raised-button color=\"primary\" class=\"add-button\"\r\n                            routerLink=\"/dashboard/matiere/create\">AJOUTER</a>\r\n                    </div>\r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Filtrer</mat-label>\r\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"MATH100\" #input>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"mat-elevation-z8\">\r\n                        <div class=\"responsive-container table-responsive\">\r\n                            <table mat-table [dataSource]=\"dataSource\" matSort class=\"table border-0 star-student table-hover table-center mb-0 datatable table-striped\">\r\n\r\n                                <!-- ID Column -->\r\n                                <!-- Row Number Column -->\r\n                                <ng-container matColumnDef=\"id\">\r\n                                    <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                                    <td mat-cell *matCellDef=\"let i = index\"> {{ i + 1 }} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- Name Column -->\r\n                                <ng-container matColumnDef=\"name\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> NAME </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.matiere.name}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- Credit Column -->\r\n                                <ng-container matColumnDef=\"credit\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> CREDIT </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.matiere.credit}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- UE CODE Column -->\r\n                                <ng-container matColumnDef=\"ue\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> UE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.ue.code}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- action Column -->\r\n                                <ng-container matColumnDef=\"action\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> action </th>\r\n                                    <td mat-cell *matCellDef=\"let row\">\r\n                                        <button mat-icon-button color=\"primary\" (click)=\"edit(row.id)\"\r\n                                            matTooltip=\"MODIFIER\">\r\n                                            <mat-icon matSuffix>edit{{ row.id }}</mat-icon>\r\n\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"warn\" [swal]=\"deleteSwal\" matTooltip=\"SUPPRIMER\">\r\n                                            <mat-icon matSuffix>delete</mat-icon>\r\n                                        </button>\r\n                                        <swal #deleteSwal title=\"Voulez vous supprimer la Matiere?\"\r\n                                            text=\"Vous ne pourrez plus revenir en arriere\" icon=\"warning\"\r\n                                            [showCancelButton]=\"true\" [focusCancel]=\"true\" (confirm)=\"delete(row.id)\">\r\n                                        </swal>\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n\r\n\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                <!-- Row shown when there is no matching data. -->\r\n                                <tr class=\"mat-row\" *matNoDataRow>\r\n                                    <td class=\"mat-cell\" colspan=\"4\">Aucune donnée ne correspond à \"{{input.value}}\"\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n                            aria-label=\"Select page of users\"></mat-paginator>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, inject } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Matiere } from 'src/app/models/Matiere';\r\nimport { MatiereUE } from 'src/app/models/MatiereUe';\r\nimport { UE } from 'src/app/models/UE';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\nimport { MatiereService } from 'src/app/services/matiere/matiere.service';\r\nimport { UeService } from 'src/app/services/ue/ue.service';\r\n\r\n@Component({\r\n  selector: 'app-update-matiere',\r\n  templateUrl: './update-matiere.component.html',\r\n  styleUrls: ['./update-matiere.component.css']\r\n})\r\nexport class UpdateMatiereComponent {\r\n  hintColor = \"red\";\r\n  updateForm: any;\r\n  ues!: UE[];\r\n  id!: number;\r\n\r\n  private fb = inject(FormBuilder);\r\n  private service = inject(MatiereService);\r\n  private ueService = inject(UeService);\r\n  private toastr = inject(ToastrService);\r\n  private router = inject(Router);\r\n  private route = inject(ActivatedRoute);\r\n  private destroyService = inject(DestroyService);\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n    this.getAllUes();\r\n    this.subscribeToRouteParams();\r\n  }\r\n\r\n  subscribeToRouteParams() {\r\n    this.route.paramMap.subscribe((value) => {\r\n      this.id = Number(value.get('id'));\r\n      this.service.getById(this.id).subscribe({\r\n        next: (res) => {\r\n          this.fillForm(res);\r\n        }, error: (error) => {\r\n          console.log(error);\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  initializeForm() {\r\n    this.updateForm = this.fb.group({\r\n      name: [null, [Validators.required, Validators.minLength(4)]],\r\n      credit: [null, [Validators.required]],\r\n      ue: [null, [Validators.required]]\r\n    });\r\n  }\r\n\r\n  getAllUes() {\r\n    this.ueService.getAllUes().subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.ues = response;\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  //NOTES: getteurs\r\n  get name(): FormControl {\r\n    return this.updateForm.get(\"name\") as FormControl;\r\n  }\r\n\r\n  get credit(): FormControl {\r\n    return this.updateForm.get(\"credit\") as FormControl;\r\n  }\r\n\r\n  get ue(): FormControl {\r\n    return this.updateForm.get(\"ue\") as FormControl;\r\n  }\r\n\r\n  fillForm(MatiereUE: MatiereUE) {\r\n    this.updateForm.setValue({\r\n      name: MatiereUE.matiere.name,\r\n      credit: MatiereUE.matiere.credit,\r\n      ue: MatiereUE.ue\r\n    });\r\n  }\r\n\r\n  update() {\r\n    const matiere = this.updateForm.value;\r\n    this.service.putUpdate(matiere, this.id).subscribe(\r\n      {\r\n        next: () => {\r\n          this.router.navigate(['/dashboard/matiere']);\r\n        }, error: (error) => {\r\n          console.log(error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  validateNumber(event: KeyboardEvent): void {\r\n    const input = event.key;\r\n    const isNumber = /^[0-9]$/.test(input);\r\n    const isBackspace = input === \"Backspace\";\r\n    if (!isNumber && !isBackspace) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">MODIFICATION MATIERE</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Dashboard</a></li>\r\n                <li class=\"breadcrumb-item active\"><a routerLink=\"/dashboard/matiere\">MATIERE</a></li>\r\n                <li class=\"breadcrumb-item active\">MODIFIER</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-3\"></div>\r\n    <div class=\"col-sm-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"updateForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 d-flex justify-content-center\"> <!-- Modified line -->\r\n                            <h5><span>MATIERE</span></h5>\r\n                            <br>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>Entrez le nom </mat-label>\r\n                                <input matInput formControlName=\"name\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': name.errors?.['required'] && name.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\r\n                                <div *ngIf=\"name.touched && name.invalid\">\r\n                                    <mat-error *ngIf=\"name.errors?.['required']\" [ngClass]=\"{color:   hintColor}\">\r\n                                        VEUILLEZ ENTRER UNE VALEUR\r\n                                    </mat-error>\r\n                                    <mat-error *ngIf=\"name.errors?.['minlength']\" [ngClass]=\"{color:   hintColor}\">\r\n                                        ENTREZ AU MINIMUM 4 LETTRES\r\n                                    </mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>Entrez le credit de la matiere </mat-label>\r\n                                <input matInput formControlName=\"credit\" type=\"number\"\r\n                                    [ngClass]=\"{ 'is-invalid': credit.errors?.['required'] && credit.invalid }\" (keydown)=\"validateNumber($event)\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\r\n                                <div *ngIf=\"credit.touched && credit.invalid\">\r\n                                    <mat-error *ngIf=\"credit.errors?.['required']\" [ngClass]=\"{color:   hintColor}\">\r\n                                        VEUILLEZ ENTRER UNE VALEUR\r\n                                    </mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field style=\"width: 100%;\">\r\n                                <mat-label>UES</mat-label>\r\n                                <mat-select formControlName=\"ue\" >\r\n                                    <mat-option *ngFor=\"let ue of ues\" [value]=\"ue\">\r\n                                        {{ ue.code }}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6\" \r\n                                [disabled]=\"updateForm.invalid\" (click)=\"update()\">MODIFIER</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Annee } from 'src/app/models/Annee';\r\nimport { Classe } from 'src/app/models/Classe';\r\nimport { Filiere } from 'src/app/models/Filiere';\r\nimport { Matiere } from 'src/app/models/Matiere';\r\nimport { NoteDto } from 'src/app/models/NoteDto';\r\nimport { UE } from 'src/app/models/UE';\r\nimport { ClasseService } from 'src/app/services/classe/classe.service';\r\nimport { FiliereService } from 'src/app/services/filiere/filiere.service';\r\nimport { NoteService } from 'src/app/services/note/note.service';\r\nimport { ReportService } from 'src/app/services/report/report.service';\r\nimport { UeService } from 'src/app/services/ue/ue.service';\r\n\r\n@Component({\r\n  selector: 'app-note',\r\n  templateUrl: './note.component.html',\r\n  styleUrls: ['./note.component.css']\r\n})\r\nexport class NoteComponent implements OnInit {\r\n  loadForm!: FormGroup;\r\n  public filieres: Filiere[] = [];\r\n  public classes: Classe[] = [];\r\n  public ues: UE[] = [];\r\n  public matieres: Matiere[] = [];\r\n  idFiliere!: number;\r\n  idMatiere!: number;\r\n  idClasse!: number;\r\n  anneeSelected!: number;\r\n  niveaux: string[] = [\"LP\", \"MP\", \"BTS\"];\r\n  niveauM!: string;\r\n  coef!: number;\r\n\r\n  //NOTE:FORM CONTROLS\r\n  filiereControl: FormControl = new FormControl(null, Validators.required);\r\n  filteredFilieres!: Observable<Filiere[]>;\r\n  classeControl: FormControl = new FormControl(null, Validators.required);\r\n  filteredClasses!: Observable<Classe[]>;\r\n  anneeControl: FormControl = new FormControl(null, Validators.required);\r\n  niveauControl: FormControl = new FormControl(null, Validators.required);\r\n  ueControl: FormControl = new FormControl(null, Validators.required);\r\n  filteredUes!: Observable<UE[]>;\r\n  matiereControl: FormControl = new FormControl(null, Validators.required);\r\n  filteredMatieres!: Observable<Matiere[]>;\r\n\r\n  //NOTE:TABLES\r\n  public notesDtos: NoteDto[] = [];\r\n  isShow: boolean = false;\r\n  @ViewChild(MatPaginator) paginator !: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  public dataSource!: MatTableDataSource<any>;\r\n  displayedColumns: string[] = ['id', 'nom', 'prenoms', 'devoir', 'devoir1', 'moyenne', 'examen', 'moyenneS', 'coef', 'noteDefinitive', 'moyenneClasse', 'appreciations'];\r\n  displayedHeaderColumns: string[] = ['id', 'nom', 'prenoms', 'devoir', 'moyenne', 'examen', 'moyenneS', 'coef', 'noteDefinitive', 'moyenneClasse', 'appreciations'];\r\n\r\n  //NOTE:DATA INSERTED\r\n  public noteForms!: FormGroup;\r\n  public registerForm!: FormGroup;\r\n  public formArray: FormGroup[] = [];\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder, private fb: FormBuilder, private toastr: ToastrService, private service: NoteService, private filiereService: FiliereService, private ueService: UeService, private classeService: ClasseService,private reportService:ReportService) { }\r\n  \r\n  ngOnInit(): void {\r\n    this.loadForm = this.fb.group({\r\n      classe: this.classeControl,\r\n      matiere: this.matiereControl\r\n    });\r\n\r\n    this.getAllFilieres();\r\n    //NOTE: RECHERCHE DANS AUTOCOMPLETE\r\n    this.filiereControl.valueChanges\r\n      .subscribe(val => {\r\n        this.filteredFilieres = of(this.findFilieres(val));\r\n      });\r\n    this.classeControl.valueChanges\r\n      .subscribe(val => {\r\n        this.filteredClasses = of(this.findClasses(val));\r\n      });\r\n    this.ueControl.valueChanges.subscribe(val => {\r\n      this.filteredUes = of(this.findUes(val));\r\n    });\r\n    this.matiereControl.valueChanges.subscribe(val => {\r\n      this.filteredMatieres = of(this.findMatieres(val));\r\n    });\r\n  }\r\n\r\n  //NOTE: HANDLING SELECTION\r\n  onSelectedFiliere(id: number) {\r\n    this.idFiliere = id;\r\n    this.classeControl.setValue(null);\r\n    if (this.anneeControl.value && this.niveauControl.value) {\r\n      this.getAllClasses(id);\r\n    }\r\n  }\r\n\r\n  onSelectedClasse(id: number) {\r\n    this.ueControl.setValue(null);\r\n    if (this.anneeControl.value && this.niveauControl.value) {\r\n      this.getAllUes(id);\r\n    }\r\n  }\r\n\r\n  onSelectedUe(id: number) {\r\n    this.matiereControl.setValue(null);\r\n    this.getAllMatieres(id);\r\n  }\r\n\r\n  //NOTE:GET DATA\r\n  getAllFilieres() {\r\n    this.filiereService.getAll().subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.filieres = response;\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllClasses(id: number) {\r\n    this.classeService.getByFiliereAnneeNiveau(id, this.anneeControl.value, this.niveauControl.value).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.classes = response;\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n        },\r\n      }\r\n    )\r\n  }\r\n\r\n  getAllUes(id: number) {\r\n    this.classeService.getUesById(id).subscribe({\r\n      next: (response) => {\r\n        this.ues = response;\r\n      }, error: (error) => {\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n\r\n  getAllMatieres(id: number) {\r\n    this.ueService.getMatieresById(id).subscribe({\r\n      next: (response) => {\r\n        this.matieres = response;\r\n      }, error: (error) => {\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n\r\n  getValueNiveau() {\r\n    this.niveauM = this.niveauControl.value;\r\n  }\r\n\r\n  getNotes(idMatiere: number, idClasse: number) {\r\n    this.idClasse = idClasse;\r\n    this.idMatiere = idMatiere;\r\n    this.service.getNotes(idMatiere, idClasse).subscribe({\r\n      next: (value) => {\r\n        this.notesDtos = value;\r\n        //NOTE:CREATE FORM IN TABLE\r\n        this.noteForms = this.formBuilder.group({\r\n          notes: this.formBuilder.array(value)\r\n        });\r\n        this.formArray =[];\r\n        this.notesDtos.forEach((value) => {\r\n          this.formArray.push(this.createNoteFormGroup(value));\r\n        })\r\n      }, error(err) {\r\n        console.log(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  // NOTE:DISPLAY VALUE IN INPUT\r\n  displayFiliere(value: any) {\r\n    if (value != null) {\r\n      return value.name;\r\n    }\r\n  }\r\n\r\n  displayClasse(value: any) {\r\n    if (value != null) {\r\n      return value.name;\r\n    }\r\n  }\r\n\r\n  displayUe(value: any) {\r\n    if (value != null) {\r\n      return value.code;\r\n    }\r\n  }\r\n\r\n  displayMatiere(value: any) {\r\n    if (value != null) {\r\n      return value.name;\r\n    }\r\n  }\r\n\r\n  //NOTE: GETTEURS\r\n  get filiere(): Filiere {\r\n    return this.filiereControl.value;\r\n  }\r\n\r\n  get classe(): Classe {\r\n    return this.classeControl.value;\r\n  }\r\n\r\n  get annee(): Annee {\r\n    return this.anneeControl.value;\r\n  }\r\n\r\n  get niveau() {\r\n    return this.niveauControl.value;\r\n  }\r\n\r\n  get ue(): UE {\r\n    return this.ueControl.value;\r\n  }\r\n\r\n  checkAnne() {\r\n    if (!this.loadForm.get('niveau')?.value) {\r\n      this.toastr.error(\"CHOSISSEZ UN NIVEAU \")\r\n    }\r\n    else if (!this.loadForm.get('annee')?.value) {\r\n      this.toastr.error(\"CHOSISSEZ L' ANNEE \")\r\n    }\r\n  }\r\n\r\n  fetchClasses() {\r\n    if (this.idFiliere && this.loadForm.get('annee')?.value && this.loadForm.get('niveau')?.value) {\r\n      this.getAllClasses(this.idFiliere);\r\n      this.classeControl.setValue(\"\");\r\n    }\r\n  }\r\n\r\n  //NOTE:CHARGER LES NOTES\r\n  loadNotes() {\r\n    this.isShow = true;\r\n    const data = this.loadForm.value;\r\n    this.coef = data.matiere.credit;\r\n    this.noteForms = this.formBuilder.group({\r\n      notes: this.formBuilder.array([])\r\n    });\r\n    this.getNotes(data.matiere.id, data.classe.id);\r\n  }\r\n\r\n  //NOTE: CHECK NUMBER\r\n  validateNumber(event: KeyboardEvent): void {\r\n    const input = event.key;\r\n    const isNumber = /^[0-9]$/.test(input);\r\n    const isBackspace = input === \"Backspace\";\r\n    const isPlus = input === \"+\";\r\n    const isSpace = input === \" \";\r\n    if (!isNumber && !isBackspace && !isPlus && !isSpace) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  register() {\r\n    this.formArray.forEach((value, index) => {\r\n      this.service.postRegistration(value.value, this.idMatiere, this.idClasse).subscribe({\r\n        next: (response) => {\r\n          this.getNotes(this.idMatiere, this.idClasse);\r\n        }, error: (error) => {\r\n          console.log(error);\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  get notes(): FormArray {\r\n    return this.noteForms.get('notes') as FormArray;\r\n  }\r\n\r\n  createNoteFormGroup(note: NoteDto): FormGroup {\r\n    return this.fb.group({\r\n      id: [note.id],\r\n      nom: [note.nom],\r\n      prenoms: [note.prenoms],\r\n      moyenne: [note.moyenne],\r\n      moyenneClasse: [note.moyenneClasse],\r\n      noteDefinitive: [note.noteDefinitive],\r\n      appreciations: [note.appreciations],\r\n      matricule: [note.matricule],\r\n      devoirOne: [note.devoirOne, Validators.required],\r\n      devoirTwo: [note.devoirTwo, Validators.required],\r\n      examen: [note.examen, Validators.required],\r\n    });\r\n  }\r\n\r\n  //NOTE: FIND IN \r\n  findFilieres(val: string): Filiere[] {\r\n    return this.filieres.filter(option =>\r\n      option.name.toLowerCase().includes(val));\r\n  }\r\n\r\n  findClasses(val: string): Classe[] {\r\n    return this.classes.filter(option =>\r\n      option.name.toLowerCase().includes(val));\r\n  }\r\n\r\n  findUes(val: string): UE[] {\r\n    return this.ues.filter(option =>\r\n      option.code.toLowerCase().includes(val));\r\n  }\r\n\r\n  findMatieres(val: string): Matiere[] {\r\n    return this.matieres.filter(option =>\r\n      option.name.toLowerCase().includes(val));\r\n  }\r\n\r\n  //NOTE: INITIALIZE\r\n  initializeFilieres() {\r\n    this.filteredFilieres = of(this.findFilieres(\"\"))\r\n  }\r\n\r\n  initializeClasses() {\r\n    this.filteredClasses = of(this.findClasses(\"\"))\r\n  }\r\n\r\n  initializeUes() {\r\n    this.filteredUes = of(this.findUes(''));\r\n  }\r\n\r\n  initializeMatieres() {\r\n    this.filteredMatieres = of(this.findMatieres(''));\r\n  }\r\n\r\n  //NOTE:TABLES\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  //NOTE:EXPORT NOTE TO PDF\r\n  exportPdf(){\r\n    this.reportService.getReportFicheComplet(this.idMatiere,this.idClasse,\"pdf\").subscribe({\r\n      next:()=>{\r\n        this.toastr.info(\"EXCEL WAS GENERATED\");\r\n      },error:(error)=>{\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n\r\n  exportExcel(){\r\n    this.reportService.getReportFicheComplet(this.idMatiere,this.idClasse,\"excel\").subscribe({\r\n      next:()=>{\r\n        this.toastr.info(\"PDF WAS GENERATED\");\r\n      },error:(error)=>{\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">ASSIGNER UNE MATIERE AU PROFESSEUR</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">DASHBOARD</a></li>\r\n                <li class=\"breadcrumb-item active\">NOTES</li>\r\n                <li class=\"breadcrumb-item active\">ENREGISTRER</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!--NOTE: FORMULAIRE LOADING NOTES  -->\r\n<div class=\"row\">\r\n    <div class=\"col-12\"></div>\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"loadForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 d-flex justify-content-center\"> <!-- Modified line -->\r\n                            <h5><span>CHARGER LES NOTES PAR MATIERES</span></h5>\r\n                            <br>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                                <mat-label>NIVEAU</mat-label>\r\n                                <mat-select [formControl]=\"niveauControl\" (openedChange)=\"getValueNiveau()\"\r\n                                    (selectionChange)=\"fetchClasses()\">\r\n                                    <mat-option *ngFor=\"let niveau of niveaux\" [value]=\"niveau\">\r\n                                        {{ niveau }}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                                <mat-label>ANNEE</mat-label>\r\n                                <mat-select [formControl]=\"anneeControl\" (selectionChange)=\"fetchClasses()\">\r\n                                    <div *ngIf=\"niveauM === 'LP' \">\r\n                                        <mat-option [value]=\"1\">1ère année</mat-option>\r\n                                        <mat-option [value]=\"2\">2ème année</mat-option>\r\n                                        <mat-option [value]=\"3\">3ème année</mat-option>\r\n                                    </div>\r\n                                    <div *ngIf=\"niveauM === 'MP' || niveauM === 'BTS'\">\r\n                                        <mat-option [value]=\"1\">1ère année</mat-option>\r\n                                        <mat-option [value]=\"2\">2ème année</mat-option>\r\n                                    </div>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>FILIERE</mat-label>\r\n                                <input matInput [formControl]=\"filiereControl\" [matAutocomplete]=\"auto\"\r\n                                    (focus)=\"initializeFilieres()\" type=\"text\" />\r\n                                <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFiliere\"\r\n                                    (optionSelected)=\"onSelectedFiliere(filiere.id)\">\r\n                                    <mat-option *ngFor=\"let filiere of filteredFilieres | async\" [value]=\"filiere\">\r\n                                        {{ filiere.name }}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>CLASSE</mat-label>\r\n                                <input matInput formControlName=\"classe\" [formControl]=\"classeControl\"\r\n                                    [matAutocomplete]=\"auto1\" (focus)=\"initializeClasses()\" type=\"text\" />\r\n                                <mat-autocomplete #auto1=\"matAutocomplete\" [displayWith]=\"displayClasse\"\r\n                                    (optionSelected)=\"onSelectedClasse(classe.id)\">\r\n                                    <mat-option *ngFor=\"let classe of filteredClasses | async\" [value]=\"classe\">\r\n                                        {{ classe.name }}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>UE</mat-label>\r\n                                <input matInput [formControl]=\"ueControl\" [matAutocomplete]=\"auto2\"\r\n                                    (focus)=\"initializeUes()\" type=\"text\" />\r\n                                <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayUe\"\r\n                                    (optionSelected)=\"onSelectedUe(ue.id)\">\r\n                                    <mat-option *ngFor=\"let ue of filteredUes | async\" [value]=\"ue\">\r\n                                        {{ ue.code }}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>MATIERE</mat-label>\r\n                                <input matInput formControlName=\"matiere\" [formControl]=\"matiereControl\"\r\n                                    [matAutocomplete]=\"auto3\" (focus)=\"initializeMatieres()\" type=\"text\" />\r\n                                <mat-autocomplete #auto3=\"matAutocomplete\" [displayWith]=\"displayMatiere\">\r\n                                    <mat-option *ngFor=\"let matiere of filteredMatieres | async\" [value]=\"matiere\">\r\n                                        {{ matiere.name }}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6\" color=\"primary\"\r\n                                [disabled]=\"loadForm.invalid\" (click)=\"loadNotes()\">CHARGER LA NOTE</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<br>\r\n\r\n<!-- NOTE: TABLES -->\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"page-header\">\r\n                        <div class=\"row align-items-center\">\r\n                            <div class=\"col\">\r\n                                <h3 class=\"page-title\">NOTES</h3>\r\n                            </div>\r\n                            <!-- <div *ngIf=\"isShow\" class=\"col-auto text-end float-end ms-auto download-grp\">\r\n                                <button class=\"btn btn-primary mb-3 me-2 p-2\" (click)=\"exportExcel()\"\r\n                                    matTooltip=\"EXPORTER NOTES\"><i\r\n                                        class=\"feather feather-arrow-up-right p-2\"></i></button>\r\n                                <button class=\"btn btn-primary mb-3 me-2 p-2\" matTooltip=\"IMPORTER NOTES\"><i\r\n                                        class=\"feather feather-arrow-down-left  p-2\"></i></button>\r\n                                <button class=\"btn btn-primary mb-3 p-2\" matTooltip=\"FICHES DE NOTES\"\r\n                                    (click)=\"exportPdf()\"><i class=\"feather feather-arrow-down-circle p-2\"></i></button>\r\n                                <button class=\"btn btn-primary mb-3 p-2\" matTooltip=\"FICHES DE NOTES VIDES\"\r\n                                    (click)=\"exportExcel()\"><i class=\"feather feather-arrow-down p-2\"></i></button>\r\n                            </div> -->\r\n                            <div class=\"col-4\"> <!-- Adjust the column width as needed -->\r\n                                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                    <mat-label>Filtrer</mat-label>\r\n                                    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"MATH100\" #input>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-8\"></div>\r\n\r\n                    <div class=\"mat-elevation-z8\" *ngIf=\"isShow\">\r\n                        <div class=\"responsive-container table-responsive\">\r\n                            <br>\r\n                            <form [formGroup]=\"noteForms\">\r\n                                <ng-container formArrayName=\"notes\">\r\n                                    <table mat-table [dataSource]=\"notes.controls\" matSort>\r\n                                        <!-- ID Column -->\r\n                                        <!-- Row Number Column -->\r\n                                        <ng-container matColumnDef=\"id\">\r\n                                            <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                                            <td mat-cell *matCellDef=\"let i = index\"> {{ i + 1 }} </td>\r\n                                        </ng-container>\r\n\r\n                                        <!-- FirstName Column -->\r\n                                        <ng-container matColumnDef=\"nom\">\r\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> NOM </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.value.nom}} </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"prenoms\">\r\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> PRENOMS </th>\r\n                                            <td mat-cell *matCellDef=\"let row\"> {{row.value.prenoms}} </td>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef=\"devoir\">\r\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header [attr.colspan]=\"2\">\r\n                                                DEVOIR\r\n                                            </th>\r\n                                            <td mat-cell *matCellDef=\"let element;let i = index\">\r\n                                                <br>\r\n                                                <mat-form-field appearance=\"outline\" color=\"primary\">\r\n                                                    <div [formGroup]=\"formArray[i]\">\r\n                                                        <input matInput formControlName=\"devoirOne\" type=\"text\"\r\n                                                            [value]=\"element.value.devoirOne\"\r\n                                                            (keydown)=\"validateNumber($event)\" />\r\n                                                    </div>\r\n                                                </mat-form-field>\r\n                                            </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"devoir1\">\r\n                                            <td mat-cell *matCellDef=\"let element;let i = index\">\r\n                                                <br>\r\n                                                <mat-form-field appearance=\"outline\" color=\"primary\"\r\n                                                    [formGroup]=\"formArray[i]\">\r\n                                                    <input matInput formControlName=\"devoirTwo\" type=\"text\"\r\n                                                        [value]=\"element.value.devoirTwo\"\r\n                                                        (keydown)=\"validateNumber($event)\" />\r\n                                                </mat-form-field>\r\n                                            </td>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef=\"moyenne\">\r\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> MOYENNE</th>\r\n                                            <br>\r\n                                            <td mat-cell *matCellDef=\"let element\" [formGroup]=\"formArray[0]\">\r\n                                                {{ (element.value.devoirTwo +element.value.devoirOne)/2 }}\r\n                                            </td>\r\n                                        </ng-container>\r\n                                        <ng-container matColumnDef=\"examen\">\r\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> COMPOSITION </th>\r\n                                            <td mat-cell *matCellDef=\"let element;let i = index\">\r\n                                                <br>\r\n                                                <mat-form-field appearance=\"outline\" color=\"primary\"\r\n                                                    [formGroup]=\"formArray[i]\">\r\n                                                    <input matInput formControlName=\"examen\" type=\"text\"\r\n                                                        [value]=\"element.value.examen\"\r\n                                                        (keydown)=\"validateNumber($event)\" />\r\n                                                </mat-form-field>\r\n                                            </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"moyenneS\">\r\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> MOYENNE\r\n                                                SEMESTRE/20</th>\r\n                                            <br>\r\n                                            <td mat-cell *matCellDef=\"let element\" [formGroup]=\"formArray[0]\">\r\n                                                {{ ((element.value.devoirTwo +element.value.devoirOne)/2 +\r\n                                                element.value.examen)/2 }}\r\n                                            </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"coef\">\r\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> COEF</th>\r\n                                            <td mat-cell *matCellDef=\"let element\">{{ coef }}</td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"noteDefinitive\">\r\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> NOTE DEFINITIVE\r\n                                            </th>\r\n                                            <td mat-cell *matCellDef=\"let element\" [formGroup]=\"formArray[0]\">\r\n                                                {{ (((element.value.devoirTwo +element.value.devoirOne)/2 +\r\n                                                element.value.examen)/2)*coef }}\r\n                                            </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"moyenneClasse\">\r\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> MOYENNE CLASSE\r\n                                            </th>\r\n                                            <td mat-cell *matCellDef=\"let element\" [formGroup]=\"formArray[0]\">\r\n                                                {{ element.value.moyenneClasse }}\r\n                                            </td>\r\n                                        </ng-container>\r\n\r\n                                        <ng-container matColumnDef=\"appreciations\">\r\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> APPRECIATIONS\r\n                                            </th>\r\n                                            <td mat-cell *matCellDef=\"let element\">{{ element.value.appreciations }}\r\n                                            </td>\r\n                                        </ng-container>\r\n\r\n                                        <tr mat-header-row *matHeaderRowDef=\"displayedHeaderColumns\"></tr>\r\n                                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                                        <!-- Row shown when there is no matching data. -->\r\n                                        <tr class=\"mat-row\" *matNoDataRow>\r\n                                            <td class=\"mat-cell\" colspan=\"4\">AUCUNE DONNEE NE CORRESPOND A\r\n                                                \"{{input.value}}\"\r\n                                            </td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </ng-container>\r\n                            </form>\r\n                        </div>\r\n                        <br>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-4\"></div>\r\n                            <div class=\"col-4\">\r\n                                <button type=\"submit\" mat-raised-button style=\"margin: 20px;padding: 30px;\"\r\n                                    color=\"primary\" (click)=\"register()\">ENREGISTRER</button>\r\n                            </div>\r\n                        </div>\r\n                        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n                            aria-label=\"Select page of users\"></mat-paginator>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit,  inject } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {  takeUntil } from 'rxjs';\r\nimport { ProfService } from 'src/app/services/prof/prof.service';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\n\r\n@Component({\r\n  selector: 'app-create-prof',\r\n  templateUrl: './create-prof.component.html',\r\n  styleUrls: ['./create-prof.component.css']\r\n})\r\nexport class CreateProfComponent implements OnInit {\r\n  hintColor = \"red\";\r\n  registerForm!: any;\r\n  maxDate!: Date;\r\n\r\n  //NOTE:INJECTIONS\r\n  private fb = inject(FormBuilder);\r\n  private service = inject(ProfService);\r\n  private toastr = inject(ToastrService);\r\n  private destroyService = inject(DestroyService);\r\n\r\n  constructor() {\r\n    const currentDate = new Date();\r\n    const currentYear = currentDate.getFullYear();\r\n    const currentMonth = currentDate.getMonth();\r\n    const currentDay = currentDate.getDate();\r\n    this.maxDate = new Date(currentYear, currentMonth, currentDay);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.registerForm = this.fb.group({\r\n      name: [null, [Validators.required, Validators.minLength(3)]],\r\n      prenoms: [null, [Validators.required, , Validators.minLength(4)]],\r\n      telephone: [null, [Validators.required, Validators.pattern('^[0-9]*$')]],\r\n      adresse: [null],\r\n      email: [null, [Validators.email]],\r\n      dateEmb: [null],\r\n      sexe: [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  //NOTE : ENREGISTER LE PROFESSEUR\r\n  register() {\r\n    const professeur = this.registerForm.value;\r\n    this.service.postRegistration(professeur)\r\n      .pipe(takeUntil(this.destroyService.onDestroy$))\r\n      .subscribe(\r\n        {\r\n          next: () => {\r\n            this.toastr.success(\"PROFESSEUR ENREGISTER\", \"SUCCES\");\r\n            this.resetForm();\r\n          },\r\n          error: (error) => {\r\n            if (error.status == 500) {\r\n              this.toastr.error(error.error);\r\n            }\r\n          },\r\n        }\r\n      );\r\n  }\r\n\r\n  //NOTE : RESET FORM\r\n  resetForm() {\r\n    this.registerForm.reset();\r\n  }\r\n\r\n\r\n  //NOTE: GET FORMS INPUTS VALUES\r\n  get fc() {\r\n    return this.registerForm.controls;\r\n  }\r\n\r\n  //NOTE: CHECK NUMBER\r\n  validateNumber(event: KeyboardEvent): void {\r\n    const input = event.key;\r\n    const isNumber = /^[0-9]$/.test(input);\r\n    const isBackspace = input === \"Backspace\";\r\n    const isPlus = input === \"+\";\r\n    const isSpace = input === \" \";\r\n    if (!isNumber && !isBackspace && !isPlus && !isSpace) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">MODIFICATION DU PROFESSEUR</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">DASHBOARD</a></li>\r\n                <li class=\"breadcrumb-item active\"><a routerLink=\"/dashboard/professeur\">PROFESSEUR</a></li>\r\n                <li class=\"breadcrumb-item active\">CREATE</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"registerForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 d-flex justify-content-center\"> <!-- Modified line -->\r\n                            <h5><span>PROFESSEUR</span></h5>\r\n                            <br>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ LE NOM</mat-label>\r\n                                <input matInput formControlName=\"name\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': fc.name.required && fc.name.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\r\n                                <div *ngIf=\"fc.name.touched && fc.name.invalid\">\r\n                                    <mat-error *ngIf=\"fc.name.errors?.required\"\r\n                                        [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                        rentrer une valeur</mat-error>\r\n                                    <mat-error *ngIf=\"fc.name.errors?.minlength\" [ngClass]=\"{color:   hintColor}\">Entrez\r\n                                        au minimum 4\r\n                                        lettres</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ LE PRENOMS </mat-label>\r\n                                <input matInput formControlName=\"prenoms\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': fc.prenoms.required && fc.prenoms.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\r\n                                <div *ngIf=\"fc.prenoms.touched && fc.prenoms.invalid\">\r\n                                    <mat-error *ngIf=\"fc.prenoms.errors?.required\"\r\n                                        [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                        rentrer une valeur</mat-error>\r\n                                    <mat-error *ngIf=\"fc.prenoms.errors?.minlength\"\r\n                                        [ngClass]=\"{color:   hintColor}\">Entrez\r\n                                        au minimum 4\r\n                                        lettres</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ LE TELEPHONE </mat-label>\r\n                                <input matInput formControlName=\"telephone\" type=\"number\"\r\n                                    [ngClass]=\"{ 'is-invalid': fc.telephone.required && fc.telephone.invalid }\"\r\n                                    (keydown)=\"validateNumber($event)\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\r\n                                <div *ngIf=\"fc.telephone.touched && fc.telephone.invalid\">\r\n                                    <mat-error *ngIf=\"fc.telephone.errors?.required\"\r\n                                        [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                        rentrer une valeur</mat-error>\r\n                                    <mat-error *ngIf=\"fc.telephone.errors?.pattern\"\r\n                                        [ngClass]=\"{color:   hintColor}\">Entrez\r\n                                        un numero </mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ LE ADRESSE </mat-label>\r\n                                <input matInput formControlName=\"adresse\" type=\"text\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ L'EMAIL </mat-label>\r\n                                <input matInput formControlName=\"email\" type=\"text\"/>\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"fc.email.touched && fc.email.invalid\">\r\n                                    <mat-error *ngIf=\"fc.email.errors?.email\" [ngClass]=\"{color: hintColor}\">Veuillez\r\n                                        entrer une adresse email valide</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field style=\"width: 100%;\">\r\n                                <mat-label>SEXE</mat-label>\r\n                                <mat-select formControlName=\"sexe\">\r\n                                    <mat-option [value]=\"'HOMME'\">HOMME</mat-option>\r\n                                    <mat-option [value]=\"'FEMME'\">FEMME</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>DATE D'EMBAUCHE </mat-label>\r\n                                <input matInput [matDatepicker]=\"picker\" formControlName=\"dateEmb\" [max]=\"maxDate\">\r\n                                <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #picker></mat-datepicker>\r\n                                <div *ngIf=\"fc.dateEmb.touched && fc.dateEmb.invalid\">\r\n                                    <mat-error *ngIf=\"fc.dateEmb.errors?.required\"\r\n                                        [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                        rentrer une valeur</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6\" color=\"primary\"\r\n                                [disabled]=\"registerForm.invalid\" (click)=\"register()\">ENREGISTRER</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { DatePipe } from '@angular/common';\r\nimport { Component, LOCALE_ID, ViewChild, OnInit, OnDestroy, inject, ChangeDetectorRef, ViewRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { Professeur } from 'src/app/models/Professeur';\r\nimport { ProfService } from 'src/app/services/prof/prof.service';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport localeFr from '@angular/common/locales/fr';\r\nimport { Subject, Subscription, takeUntil } from 'rxjs';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\n\r\nregisterLocaleData(localeFr);\r\n@Component({\r\n  selector: 'app-list-prof',\r\n  templateUrl: './list-prof.component.html',\r\n  styleUrls: ['./list-prof.component.css'],\r\n  providers: [DatePipe, { provide: LOCALE_ID, useValue: 'fr' }]\r\n})\r\nexport class ListProfComponent implements OnInit {\r\n  public profs!: Professeur[];\r\n  @ViewChild(MatPaginator) paginator !: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  public dataSource!: MatTableDataSource<Professeur>;\r\n  displayedColumns: string[] = ['id', 'name', 'prenoms', 'telephone', 'email', 'dateEmb', 'sexe', 'action'];\r\n\r\n  //NOTE:INJECTIONS\r\n  private service = inject(ProfService);\r\n  private router = inject(Router);\r\n  private destroyService = inject(DestroyService);\r\n\r\n  ngOnInit(): void {\r\n    this.getAllUes();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllUes() {\r\n    this.service.getAll().pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.profs = response;\r\n          this.dataSource = new MatTableDataSource(this.profs);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  edit(id: number) {\r\n    this.router.navigate([\"/dashboard/professeur/update/\" + id]);\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.service.delete(id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n      next: () => {\r\n        this.getAllUes();\r\n      }, error: (error) => {\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n\r\n  getMatieres(id: number) {\r\n    this.router.navigate([\"/dashboard/professeur/matieres/\" + id]);\r\n  }\r\n\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">UE</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">DASHBOARD</a></li>\r\n                <li class=\"breadcrumb-item act  ive\">PROFESSEUR</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <h5 class=\"form-title\"><span>LISTE DES PROFESSEURS</span></h5>\r\n                    </div>\r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <a mat-raised-button color=\"primary\"  class=\"add-button\" routerLink=\"/dashboard/professeur/create\">AJOUTER</a>\r\n                    </div>\r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Filtrer</mat-label>\r\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"MATH100\" #input>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"mat-elevation-z8\">\r\n                        <div class=\"responsive-container table-responsive\">\r\n                            <table mat-table [dataSource]=\"dataSource\" matSort class=\"table border-0 star-student table-hover table-center mb-0 datatable table-striped\">\r\n\r\n                                <!-- ID Column -->\r\n                                <ng-container matColumnDef=\"id\">\r\n                                    <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                                    <td mat-cell *matCellDef=\"let i = index\"> {{ i + 1 }} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- FirstName Column -->\r\n                                <ng-container matColumnDef=\"name\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> NOM </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- lastName Column -->\r\n                                <ng-container matColumnDef=\"prenoms\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> PRENOMS </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.prenoms}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- Telephone Column -->\r\n                                <ng-container matColumnDef=\"telephone\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> TELEPHONE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.telephone}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- Email Column -->\r\n                                <ng-container matColumnDef=\"email\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> EMAIL </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- Email Column -->\r\n                                <ng-container matColumnDef=\"dateEmb\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> DATE D'EMBAUCHE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.dateEmb| date:'dd MMMM yyyy'}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- SEXE Column -->\r\n                                <ng-container matColumnDef=\"sexe\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> SEXE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.sexe}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- action Column -->\r\n                                <ng-container matColumnDef=\"action\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </th>\r\n                                    <td mat-cell *matCellDef=\"let row\">\r\n                                        <button mat-icon-button color=\"primary\" (click)=\"edit(row.id)\" matTooltip=\"MODIFIER\">\r\n                                            <mat-icon matSuffix>edit</mat-icon>\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"accent\" (click)=\"getMatieres(row.id)\" matTooltip=\"MATIERES ENSEIGNERS\">\r\n                                            <mat-icon class=\"material-icons color_yellow\" matSuffix>book</mat-icon>\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"warn\" [swal]=\"deleteSwal\" matTooltip=\"SUPPRIMER\">\r\n                                            <mat-icon matSuffix>delete</mat-icon>\r\n                                        </button>\r\n                                        <swal #deleteSwal title=\"Voulez vous supprimer le professeur\" text=\"Vous ne pourrez plus revenir en arriere\"\r\n                                            icon=\"warning\" [showCancelButton]=\"true\" [focusCancel]=\"true\"\r\n                                            (confirm)=\"delete(row.id)\">\r\n                                        </swal>\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n\r\n\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                <!-- Row shown when there is no matching data. -->\r\n                                <tr class=\"mat-row\" *matNoDataRow>\r\n                                    <td class=\"mat-cell\" colspan=\"4\">AUCUNE DONNEE NE CORRESPOND A \"{{input.value}}\" </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n                            aria-label=\"Select page of users\"></mat-paginator>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, inject } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, of, takeUntil } from 'rxjs';\r\nimport { Classe } from 'src/app/models/Classe';\r\nimport { EnseignerProf } from 'src/app/models/EnseignerProf';\r\nimport { Filiere } from 'src/app/models/Filiere';\r\nimport { Matiere } from 'src/app/models/Matiere';\r\nimport { UE } from 'src/app/models/UE';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\nimport { EnseignerService } from 'src/app/services/enseigner/enseigner.service';\r\nimport { FiliereService } from 'src/app/services/filiere/filiere.service';\r\nimport { ProfService } from 'src/app/services/prof/prof.service';\r\nimport { UeService } from 'src/app/services/ue/ue.service';\r\n\r\n@Component({\r\n  selector: 'app-matieres-prof',\r\n  templateUrl: './matieres-prof.component.html',\r\n  styleUrls: ['./matieres-prof.component.css']\r\n})\r\nexport class MatieresProfComponent implements OnInit {\r\n  registerForm!: FormGroup;\r\n  public filieres: Filiere[] = [];\r\n  public classes: Classe[] = [];\r\n  public ues: UE[] = [];\r\n  public matieres: Matiere[] = [];\r\n  public id!: number;\r\n  fullName!: String;\r\n\r\n  //NOTE: id pour selected\r\n  public idUe!: number;\r\n\r\n  // NOTE: Filter and FormControl\r\n  filiereControl: FormControl = new FormControl(null, Validators.required);\r\n  filteredFilieres!: Observable<Filiere[]>;\r\n  classeControl: FormControl = new FormControl(null, Validators.required);\r\n  filteredClasses!: Observable<Classe[]>;\r\n  ueControl: FormControl = new FormControl(null, Validators.required);\r\n  filteredUes!: Observable<UE[]>;\r\n  matiereControl: FormControl = new FormControl(null, Validators.required);\r\n  filteredMatieres!: Observable<Matiere[]>;\r\n  profControl: FormControl = new FormControl(null);\r\n\r\n  //NOTE:TABLE DATAS\r\n  public enseigners!: EnseignerProf[];;\r\n  @ViewChild(MatPaginator) paginator !: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  public dataSource!: MatTableDataSource<EnseignerProf>;\r\n  displayedColumns: string[] = ['filiere', 'classe', 'matiere', 'action'];\r\n\r\n  //NOTE:INJECTIONS\r\n  private fb = inject(FormBuilder);\r\n  private toastr = inject(ToastrService);\r\n  private service = inject(ProfService);\r\n  private filiereService = inject(FiliereService);\r\n  private ueService = inject(UeService);\r\n  private enseignerService = inject(EnseignerService);\r\n  private route = inject(ActivatedRoute);\r\n  private destroyService = inject(DestroyService);\r\n\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n    this.subscribeToRouteParams();\r\n    this.getAllFilieres();\r\n    this.subscribeToFormChanges();\r\n  }\r\n  \r\n  //NOTE: INITIALZE THE FORM\r\n  initializeForm() {\r\n    this.registerForm = this.fb.group({\r\n      filiere: this.filiereControl,\r\n      classe: this.classeControl,\r\n      ue: this.ueControl,\r\n      matiere: this.matiereControl,\r\n      professeur: this.profControl\r\n    });\r\n  }\r\n\r\n  subscribeToFormChanges() {\r\n    this.filiereControl.valueChanges\r\n      .pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(val => {\r\n        this.filteredFilieres = of(this.findFilieres(val));\r\n      });\r\n    this.classeControl.valueChanges\r\n      .pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(val => {\r\n        this.filteredClasses = of(this.findClasses(val));\r\n      });\r\n    this.ueControl.valueChanges.pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(val => {\r\n      this.filteredUes = of(this.findUes(val));\r\n    });\r\n    this.matiereControl.valueChanges.pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(val => {\r\n      this.filteredMatieres = of(this.findMatieres(val));\r\n    });\r\n  }\r\n\r\n  subscribeToRouteParams() {\r\n    this.route.paramMap.pipe(takeUntil(this.destroyService.onDestroy$)).subscribe((value) => {\r\n      this.id = Number(value.get('id'));\r\n      this.getAllEnseigner(this.id);\r\n      this.getProfesseurById(this.id);\r\n    });\r\n  }\r\n\r\n  //NOTE:GET SELECTED DATA\r\n  get filiere(): Filiere {\r\n    return this.filiereControl.value;\r\n  }\r\n  get ue(): UE {\r\n    return this.ueControl.value;\r\n  }\r\n\r\n  //NOTE: RECUPERER LES VALEURS A LA SELECTION\r\n  onSelectedFiliere(id: number) {\r\n    this.ueControl.setValue(null);\r\n    this.matiereControl.setValue(null);\r\n    this.classeControl.setValue(null);\r\n    this.getAllClasses(id);\r\n    this.getAllUes(id);\r\n  }\r\n  onSelectedUe(id: number) {\r\n    this.matiereControl.setValue(null);\r\n    this.getAllMatieres(id);\r\n  }\r\n\r\n  //NOTE:FETCH ALL DATAS\r\n  getAllFilieres() {\r\n    this.filiereService.getAll().pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.filieres = response;\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllClasses(id: number) {\r\n    this.filiereService.getClassesById(id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.classes = response;\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllUes(id: number) {\r\n    this.filiereService.getUesById(id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n      next: (response) => {\r\n        this.ues = response;\r\n      }, error: (error) => {\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n\r\n  getAllMatieres(id: number) {\r\n    this.ueService.getMatieresById(id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n      next: (response) => {\r\n        this.matieres = response;\r\n      }, error: (error) => {\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n\r\n  getProfesseurById(id: number) {\r\n    this.service.getById(id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n      next: (response) => {\r\n        this.profControl.setValue(response);\r\n      }, error: (error) => {\r\n        console.log(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  //NOTE:ENREGISTRER\r\n  register() {\r\n    const register = this.registerForm.value;\r\n    this.enseignerService.postRegistration(register).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n      next: (response) => {\r\n        console.log(response);\r\n        this.registerForm = this.fb.group({\r\n          filiere: null,\r\n          classe: null,\r\n          ue: null,\r\n          matiere: null,\r\n          professeur: this.profControl\r\n        });\r\n        this.getAllEnseigner(this.id);\r\n      }, error: (error) => {\r\n        this.toastr.error(error.error);\r\n        this.registerForm = this.fb.group({\r\n          filiere: null,\r\n          classe: null,\r\n          ue: null,\r\n          matiere: null,\r\n          professeur: this.profControl\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  //NOTE: INITIALIZE\r\n  initializeFilieres() {\r\n    this.filteredFilieres = of(this.findFilieres(\"\"))\r\n  }\r\n\r\n  initializeClasses() {\r\n    this.filteredClasses = of(this.findClasses(\"\"))\r\n  }\r\n\r\n  initializeUes() {\r\n    this.filteredUes = of(this.findUes(''));\r\n  }\r\n\r\n  initializeMatieres() {\r\n    this.filteredMatieres = of(this.findMatieres(''));\r\n  }\r\n\r\n  //NOTE: MAKE SEARCH IN\r\n  findFilieres(val: string): Filiere[] {\r\n    return this.filieres.filter(option =>\r\n      option.name.toLowerCase().includes(val));\r\n  }\r\n\r\n  findClasses(val: string): Classe[] {\r\n    return this.classes.filter(option =>\r\n      option.name.toLowerCase().includes(val));\r\n  }\r\n\r\n  findUes(val: string): UE[] {\r\n    return this.ues.filter(option =>\r\n      option.code.toLowerCase().includes(val));\r\n  }\r\n\r\n  findMatieres(val: string): Matiere[] {\r\n    return this.matieres.filter(option =>\r\n      option.name.toLowerCase().includes(val));\r\n  }\r\n\r\n  // NOTE:DISPLAY VALUE IN INPUT\r\n  displayFiliere(value: any) {\r\n    if (value != null) {\r\n      this.matieres = [];\r\n      return value.name;\r\n    }\r\n  }\r\n\r\n  displayClasse(value: any) {\r\n    if (value != null) {\r\n      return value.name;\r\n    }\r\n  }\r\n\r\n  displayUe(value: any) {\r\n    if (value != null) {\r\n      return value.code;\r\n    }\r\n  }\r\n\r\n  displayMatiere(value: any) {\r\n    if (value != null) {\r\n      return value.name;\r\n    }\r\n  }\r\n\r\n  //NOTE: TABLE PART\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllEnseigner(id: number) {\r\n    this.enseignerService.getAll(id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n      next: (response) => {\r\n        this.enseigners = response;\r\n        this.dataSource = new MatTableDataSource(this.enseigners);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      }\r\n    })\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.enseignerService.delete(id);\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">ASSIGNER UNE MATIERE AU PROFESSEUR</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">DASHBOARD</a></li>\r\n                <li class=\"breadcrumb-item active\"><a routerLink=\"/dashboard/professeur\">PROFESSEURS</a></li>\r\n                <li class=\"breadcrumb-item active\">ENREGISTRER</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!--NOTE: FORMULAIRE AJOUT DES MATIERES  -->\r\n<div class=\"row\">\r\n    <div class=\"col-12\"></div>\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"registerForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 d-flex justify-content-center\"> <!-- Modified line -->\r\n                            <h5><span>MATIERES DES PROFESSEURS</span></h5>\r\n                            <br>\r\n                        </div>\r\n                        <div class=\"col-3\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>FILIERE</mat-label>\r\n                                <input matInput formControlName=\"filiere\" [formControl]=\"filiereControl\"\r\n                                    [matAutocomplete]=\"auto\" (focus)=\"initializeFilieres()\" type=\"text\" />\r\n                                <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFiliere\"\r\n                                    (optionSelected)=\"onSelectedFiliere(filiere.id)\">\r\n                                    <mat-option *ngFor=\"let filiere of filteredFilieres | async\" [value]=\"filiere\">\r\n                                        {{ filiere.name }}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-3\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>CLASSE</mat-label>\r\n                                <input matInput formControlName=\"classe\" [formControl]=\"classeControl\"\r\n                                    [matAutocomplete]=\"auto1\" (focus)=\"initializeClasses()\" type=\"text\" />\r\n                                <mat-autocomplete #auto1=\"matAutocomplete\" [displayWith]=\"displayClasse\">\r\n                                    <mat-option *ngFor=\"let classe of filteredClasses | async\" [value]=\"classe\">\r\n                                        {{ classe.name }}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-3\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>UE</mat-label>\r\n                                <input matInput formControlName=\"ue\" [formControl]=\"ueControl\" [matAutocomplete]=\"auto2\"\r\n                                    (focus)=\"initializeUes()\" type=\"text\" />\r\n                                <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayUe\"\r\n                                    (optionSelected)=\"onSelectedUe(ue.id)\">\r\n                                    <mat-option *ngFor=\"let ue of filteredUes | async\" [value]=\"ue\">\r\n                                        {{ ue.code }}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-3\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>MATIERE</mat-label>\r\n                                <input matInput formControlName=\"matiere\" [formControl]=\"matiereControl\"\r\n                                    [matAutocomplete]=\"auto3\" (focus)=\"initializeMatieres()\" type=\"text\" />\r\n                                <mat-autocomplete #auto3=\"matAutocomplete\" [displayWith]=\"displayMatiere\">\r\n                                    <mat-option *ngFor=\"let matiere of filteredMatieres | async\" [value]=\"matiere\">\r\n                                        {{ matiere.name }}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6\" color=\"primary\"\r\n                                [disabled]=\"registerForm.invalid\" (click)=\"register()\">ENREGISTRER</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<br>\r\n\r\n<!-- NOTE: TABLEAU -->\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <h5 class=\"form-title\"><span>LISTE DES MATIERES</span></h5>\r\n                    </div>\r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Filtrer</mat-label>\r\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"MATH100\" #input>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"mat-elevation-z8\">\r\n                        <div class=\"responsive-container table-responsive\">\r\n                            <table mat-table [dataSource]=\"dataSource\" matSort class=\"table border-0 star-student table-hover table-center mb-0 datatable table-striped\">\r\n                                <ng-container matColumnDef=\"filiere\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> FILIERE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.filiere}} </td>\r\n                                </ng-container>\r\n                                <ng-container matColumnDef=\"classe\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> CLASSE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.classe}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- lastName Column -->\r\n                                <ng-container matColumnDef=\"matiere\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> MATIERE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.matiere}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- action Column -->\r\n                                <ng-container matColumnDef=\"action\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </th>\r\n                                    <td mat-cell *matCellDef=\"let row\">\r\n                                        <button mat-icon-button color=\"warn\" [swal]=\"deleteSwal\">\r\n                                            <mat-icon matSuffix>delete</mat-icon>\r\n                                        </button>\r\n                                        <swal #deleteSwal title=\"Voulez vous supprimer la Matiere?\"\r\n                                            text=\"Vous ne pourrez plus revenir en arriere\" icon=\"warning\"\r\n                                            [showCancelButton]=\"true\" [focusCancel]=\"true\" (confirm)=\"delete(row.id)\">\r\n                                        </swal>\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n\r\n\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                <!-- Row shown when there is no matching data. -->\r\n                                <tr class=\"mat-row\" *matNoDataRow>\r\n                                    <td class=\"mat-cell\" colspan=\"4\">AUCUNE DONNEE NE CORRESPOND A \"{{input.value}}\"\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n                            aria-label=\"Select page of users\"></mat-paginator>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Professeur } from 'src/app/models/Professeur';\r\nimport { ProfService } from 'src/app/services/prof/prof.service';\r\n\r\n@Component({\r\n  selector: 'app-update-prof',\r\n  templateUrl: './update-prof.component.html',\r\n  styleUrls: ['./update-prof.component.css']\r\n})\r\nexport class UpdateProfComponent {\r\n  hintColor = \"red\";\r\n  updateForm: any;\r\n  id!: number;\r\n  maxDate!: Date;\r\n  constructor(private fb: FormBuilder, private service: ProfService, private toastr: ToastrService, private route: ActivatedRoute,private router:Router) {\r\n    const currentDate = new Date();\r\n    const currentYear = currentDate.getFullYear();\r\n    const currentMonth = currentDate.getMonth();\r\n    const currentDay = currentDate.getDate();\r\n    this.maxDate = new Date(currentYear, currentMonth, currentDay);\r\n  }\r\n  ngOnInit(): void {\r\n    this.updateForm = this.fb.group({\r\n      name: [null, [Validators.required, Validators.minLength(4)]],\r\n      prenoms: [null, [Validators.required, , Validators.minLength(4)]],\r\n      telephone: [null, [Validators.required, Validators.pattern('^[0-9]*$')]],\r\n      adresse: [null, [Validators.required]],\r\n      email: [null, [Validators.required, Validators.email]],\r\n      dateEmb: [null],\r\n      sexe: [null,Validators.required]\r\n    });\r\n    this.route.paramMap.subscribe((value) => {\r\n      this.id = Number(value.get('id'));\r\n      this.service.getById(this.id).subscribe({\r\n        next: (res) => {\r\n          this.fillForm(res);\r\n        }, error: (error) => {\r\n          console.log(error);\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  fillForm(prof:Professeur) {\r\n    this.updateForm.setValue({\r\n      name: prof.name,\r\n      prenoms: prof.prenoms,\r\n      telephone: prof.telephone,\r\n      adresse: prof.adresse,\r\n      email:prof.email,\r\n      dateEmb: prof.dateEmb,\r\n      sexe: prof.sexe\r\n    });\r\n  }\r\n\r\n  get fc() {\r\n    return this.updateForm.controls;\r\n  }\r\n\r\n  update(){\r\n    const ue = this.updateForm.value;\r\n    this.service.putUpdate(ue,this.id).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.router.navigate(['/dashboard/professeur']);\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n          if (error.status == 500) {\r\n            this.toastr.error(error.error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  validateNumber(event: KeyboardEvent): void {\r\n    const input = event.key;\r\n    const isNumber = /^[0-9]$/.test(input);\r\n    const isBackspace = input === \"Backspace\";\r\n    if (!isNumber && !isBackspace) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">MODIFICATION PROFESSEUR</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Dashboard</a></li>\r\n                <li class=\"breadcrumb-item active\"><a routerLink=\"/dashboard/professeur\">PROFESSEUR</a></li>\r\n                <li class=\"breadcrumb-item active\">MODIFIER</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"updateForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 d-flex justify-content-center\"> <!-- Modified line -->\r\n                            <h5><span>PROFESSEUR</span></h5>\r\n                            <br>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ LE NOM</mat-label>\r\n                                <input matInput formControlName=\"name\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': fc.name.required && fc.name.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\r\n                                <div *ngIf=\"fc.name.touched && fc.name.invalid\">\r\n                                    <mat-error *ngIf=\"fc.name.errors?.required\"\r\n                                        [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                        rentrer une valeur</mat-error>\r\n                                    <mat-error *ngIf=\"fc.name.errors?.minlength\" [ngClass]=\"{color:   hintColor}\">Entrez\r\n                                        au minimum 4\r\n                                        lettres</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ LE PRENOMS </mat-label>\r\n                                <input matInput formControlName=\"prenoms\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': fc.prenoms.required && fc.prenoms.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\r\n                                <div *ngIf=\"fc.prenoms.touched && fc.prenoms.invalid\">\r\n                                    <mat-error *ngIf=\"fc.prenoms.errors?.required\"\r\n                                        [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                        rentrer une valeur</mat-error>\r\n                                    <mat-error *ngIf=\"fc.prenoms.errors?.minlength\"\r\n                                        [ngClass]=\"{color:   hintColor}\">Entrez\r\n                                        au minimum 4\r\n                                        lettres</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ LE TELEPHONE </mat-label>\r\n                                <input matInput formControlName=\"telephone\" type=\"number\"\r\n                                    [ngClass]=\"{ 'is-invalid': fc.telephone.required && fc.telephone.invalid }\"\r\n                                    (keydown)=\"validateNumber($event)\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\r\n                                <div *ngIf=\"fc.telephone.touched && fc.telephone.invalid\">\r\n                                    <mat-error *ngIf=\"fc.telephone.errors?.required\"\r\n                                        [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                        rentrer une valeur</mat-error>\r\n                                    <mat-error *ngIf=\"fc.telephone.errors?.pattern\"\r\n                                        [ngClass]=\"{color:   hintColor}\">Entrez\r\n                                        un numero </mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ LE ADRESSE </mat-label>\r\n                                <input matInput formControlName=\"adresse\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': fc.adresse.required && fc.adresse.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"fc.adresse.touched && fc.adresse.invalid\">\r\n                                    <mat-error *ngIf=\"fc.adresse.errors?.required\"\r\n                                        [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                        rentrer une valeur</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>ENTREZ L'EMAIL </mat-label>\r\n                                <input matInput formControlName=\"email\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': fc.email.required && fc.email.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"fc.email.touched && fc.email.invalid\">\r\n                                    <mat-error *ngIf=\"fc.email.errors?.required\" [ngClass]=\"{color: hintColor}\">Veuillez\r\n                                        rentrer une valeur</mat-error>\r\n                                    <mat-error *ngIf=\"fc.email.errors?.email\" [ngClass]=\"{color: hintColor}\">Veuillez\r\n                                        entrer une adresse email valide</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field style=\"width: 100%;\">\r\n                                <mat-label>SEXE</mat-label>\r\n                                <mat-select formControlName=\"sexe\" [value]=\"fc.sexe.value\">\r\n                                        <mat-option [value]=\"'HOMME'\">HOMME</mat-option>\r\n                                        <mat-option [value]=\"'FEMME'\">FEMME</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>DATE D'EMBAUCHE </mat-label>\r\n                                <input matInput [matDatepicker]=\"picker\" formControlName=\"dateEmb\" [max]=\"maxDate\">\r\n                                <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #picker></mat-datepicker>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6\" [disabled]=\"updateForm.invalid\"\r\n                                (click)=\"update()\">MODIFIER</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, inject, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, of, takeUntil } from 'rxjs';\r\nimport { Annee } from 'src/app/models/Annee';\r\nimport { Classe } from 'src/app/models/Classe';\r\nimport { Filiere } from 'src/app/models/Filiere';\r\nimport { Matiere } from 'src/app/models/Matiere';\r\nimport { Notes } from 'src/app/models/Note';\r\nimport { UE } from 'src/app/models/UE';\r\nimport { ClasseService } from 'src/app/services/classe/classe.service';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\nimport { FiliereService } from 'src/app/services/filiere/filiere.service';\r\nimport { NoteService } from 'src/app/services/note/note.service';\r\nimport { ReportService } from 'src/app/services/report/report.service';\r\nimport { UeService } from 'src/app/services/ue/ue.service';\r\n\r\n@Component({\r\n  selector: 'app-fiche',\r\n  templateUrl: './fiche.component.html',\r\n  styleUrls: ['./fiche.component.css']\r\n})\r\nexport class FicheComponent implements OnInit {\r\n\r\n  public filieres: Filiere[] = [];\r\n  public classes: Classe[] = [];\r\n  public ues: UE[] = [];\r\n  public matieres: Matiere[] = [];\r\n  ficheForm!: FormGroup;\r\n  idFiliere!: number;\r\n  anneeSelected!: number;\r\n  niveaux: string[] = [\"LP\", \"MP\", \"BTS\"];\r\n  niveauM!: string;\r\n  coef!: number;\r\n\r\n  //NOTE:FORM CONTROLS\r\n  filiereControl: FormControl = new FormControl(null, Validators.required);\r\n  filteredFilieres!: Observable<Filiere[]>;\r\n  classeControl: FormControl = new FormControl(null, Validators.required);\r\n  filteredClasses!: Observable<Classe[]>;\r\n  anneeControl: FormControl = new FormControl(null, Validators.required);\r\n  niveauControl: FormControl = new FormControl(null, Validators.required);\r\n  ueControl: FormControl = new FormControl(null, Validators.required);\r\n  filteredUes!: Observable<UE[]>;\r\n  matiereControl: FormControl = new FormControl(null, Validators.required);\r\n  filteredMatieres!: Observable<Matiere[]>;\r\n\r\n  //NOTE:INJECTIONS\r\n  private fb = inject(FormBuilder);\r\n  private toastr = inject(ToastrService);\r\n  private filiereService = inject(FiliereService);\r\n  private ueService = inject(UeService);\r\n  private classeService = inject(ClasseService);\r\n  private reportService = inject(ReportService);\r\n  private destroyService = inject(DestroyService);\r\n\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n    this.getAllFilieres();\r\n    this.subscribeToFormChanges();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.ficheForm = this.fb.group({\r\n      classe: this.classeControl,\r\n      matiere: this.matiereControl\r\n    });\r\n\r\n  }\r\n  //NOTE: RECHERCHE DANS AUTOCOMATIQUE\r\n  subscribeToFormChanges() {\r\n    this.filiereControl.valueChanges\r\n      .pipe(takeUntil(this.destroyService.onDestroy$))\r\n      .subscribe(val => {\r\n        this.filteredFilieres = of(this.findFilieres(val));\r\n      });\r\n    this.classeControl.valueChanges\r\n      .pipe(takeUntil(this.destroyService.onDestroy$))\r\n      .subscribe(val => {\r\n        this.filteredClasses = of(this.findClasses(val));\r\n      });\r\n    this.ueControl.valueChanges.pipe(takeUntil(this.destroyService.onDestroy$))\r\n      .subscribe(val => {\r\n        this.filteredUes = of(this.findUes(val));\r\n      });\r\n    this.matiereControl.valueChanges.pipe(takeUntil(this.destroyService.onDestroy$))\r\n      .subscribe(val => {\r\n        this.filteredMatieres = of(this.findMatieres(val));\r\n      });\r\n  }\r\n\r\n  //NOTE: HANDLING SELECTION\r\n  onSelectedFiliere(id: number) {\r\n    this.idFiliere = id;\r\n    this.classeControl.setValue(null);\r\n    if (this.anneeControl.value && this.niveauControl.value) {\r\n      this.getAllClasses(id);\r\n      this.getAllUes(id);\r\n    }\r\n  }\r\n\r\n  onSelectedUe(id: number) {\r\n    this.matiereControl.setValue(null);\r\n    this.getAllMatieres(id);\r\n  }\r\n\r\n  //NOTE:GET DATA\r\n  getAllFilieres() {\r\n    this.filiereService.getAll().pipe(takeUntil(this.destroyService.onDestroy$))\r\n      .subscribe(\r\n        {\r\n          next: (response) => {\r\n            this.filieres = response;\r\n          },\r\n          error: (error) => {\r\n            console.log(error);\r\n          },\r\n        }\r\n      );\r\n  }\r\n\r\n  getAllClasses(id: number) {\r\n    this.classeService.getByFiliereAnneeNiveau(id, this.anneeControl.value, this.niveauControl.value)\r\n      .pipe(takeUntil(this.destroyService.onDestroy$))\r\n      .subscribe(\r\n        {\r\n          next: (response) => {\r\n            this.classes = response;\r\n          },\r\n          error: (error) => {\r\n            console.log(error);\r\n          },\r\n        }\r\n      )\r\n  }\r\n\r\n  getAllUes(id: number) {\r\n    this.filiereService.getUesById(id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n      next: (response) => {\r\n        this.ues = response;\r\n      }, error: (error) => {\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n\r\n  getAllMatieres(id: number) {\r\n    this.ueService.getMatieresById(id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n      next: (response) => {\r\n        this.matieres = response;\r\n      }, error: (error) => {\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n\r\n  getValueNiveau() {\r\n    this.niveauM = this.niveauControl.value;\r\n  }\r\n\r\n  // NOTE:DISPLAY VALUE IN INPUT\r\n  displayFiliere(value: any) {\r\n    if (value != null) {\r\n      return value.name;\r\n    }\r\n  }\r\n\r\n  displayClasse(value: any) {\r\n    if (value != null) {\r\n      return value.name;\r\n    }\r\n  }\r\n\r\n  displayUe(value: any) {\r\n    if (value != null) {\r\n      return value.code;\r\n    }\r\n  }\r\n\r\n  displayMatiere(value: any) {\r\n    if (value != null) {\r\n      return value.name;\r\n    }\r\n  }\r\n\r\n  //NOTE: GETTEURS\r\n  get filiere(): Filiere {\r\n    return this.filiereControl.value;\r\n  }\r\n\r\n  get classe(): Classe {\r\n    return this.classeControl.value;\r\n  }\r\n\r\n  get annee(): Annee {\r\n    return this.anneeControl.value;\r\n  }\r\n\r\n  get niveau() {\r\n    return this.niveauControl.value;\r\n  }\r\n\r\n  get ue(): UE {\r\n    return this.ueControl.value;\r\n  }\r\n\r\n  checkAnne() {\r\n    if (!this.ficheForm.get('niveau')?.value) {\r\n      this.toastr.error(\"CHOSISSEZ UN NIVEAU \")\r\n    }\r\n    else if (!this.ficheForm.get('annee')?.value) {\r\n      this.toastr.error(\"CHOSISSEZ L' ANNEE \")\r\n    }\r\n  }\r\n\r\n  fetchClasses() {\r\n    if (this.idFiliere && this.ficheForm.get('annee')?.value && this.ficheForm.get('niveau')?.value) {\r\n      this.getAllClasses(this.idFiliere);\r\n      this.classeControl.setValue(\"\");\r\n    }\r\n  }\r\n\r\n  //NOTE: FIND IN \r\n  findFilieres(val: string): Filiere[] {\r\n    return this.filieres.filter(option =>\r\n      option.name.toLowerCase().includes(val));\r\n  }\r\n\r\n  findClasses(val: string): Classe[] {\r\n    return this.classes.filter(option =>\r\n      option.name.toLowerCase().includes(val));\r\n  }\r\n\r\n  findUes(val: string): UE[] {\r\n    return this.ues.filter(option =>\r\n      option.code.toLowerCase().includes(val));\r\n  }\r\n\r\n  findMatieres(val: string): Matiere[] {\r\n    return this.matieres.filter(option =>\r\n      option.name.toLowerCase().includes(val));\r\n  }\r\n\r\n  //NOTE: INITIALIZE\r\n  initializeFilieres() {\r\n    this.filteredFilieres = of(this.findFilieres(\"\"))\r\n  }\r\n\r\n  initializeClasses() {\r\n    this.filteredClasses = of(this.findClasses(\"\"))\r\n  }\r\n\r\n  initializeUes() {\r\n    this.filteredUes = of(this.findUes(''));\r\n  }\r\n\r\n  initializeMatieres() {\r\n    this.filteredMatieres = of(this.findMatieres(''));\r\n  }\r\n\r\n  exportExcelFiche() {\r\n    const data = this.ficheForm.value;\r\n    this.reportService.getReportFiche(data.matiere.id, data.classe.id, \"excel\")\r\n      .pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n        next: () => {\r\n          this.toastr.info(\"EXCEL WAS GENERATED\");\r\n        }, error: (error) => {\r\n          console.log(error);\r\n        }\r\n      })\r\n  }\r\n\r\n  exportExcelCompletFiche() {\r\n    const data = this.ficheForm.value;\r\n    this.reportService.getReportFicheComplet(data.matiere.id, data.classe.id, \"excel\")\r\n      .pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n        next: () => {\r\n          this.toastr.info(\"FICHE COMPLÈTE  WAS GENERATED IN EXCEL\");\r\n        }, error: (error) => {\r\n          console.log(error);\r\n        }\r\n      })\r\n  }\r\n\r\n  exportPdfFiche() {\r\n    const data = this.ficheForm.value;\r\n    this.reportService.getReportFiche(data.matiere.id, data.classe.id, \"pdf\")\r\n      .pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n        next: () => {\r\n          this.toastr.info(\"PDF WAS GENERATED\");\r\n        }, error: (error) => {\r\n          console.log(error);\r\n        }\r\n      })\r\n  }\r\n\r\n  exportPdfCompletFiche() {\r\n    const data = this.ficheForm.value;\r\n    this.reportService.getReportFicheComplet(data.matiere.id, data.classe.id, \"pdf\")\r\n      .pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n        next: () => {\r\n          this.toastr.info(\"FICHE COMPLÈTE  WAS GENERATED IN PDF\");\r\n        }, error: (error) => {\r\n          console.log(error);\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">FICHE DE NOTES</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">TABLEAU DE BORD</a></li>\r\n                <li class=\"breadcrumb-item active\">REPORT</li>\r\n                <li class=\"breadcrumb-item active\">FICHE DE NOTES</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!--NOTE: FORMULAIRE LOADING NOTES  -->\r\n<div class=\"row\">\r\n    <div class=\"col-12\"></div>\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"ficheForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 d-flex justify-content-center\"> <!-- Modified line -->\r\n                            <h5><span>FICHE DE NOTES</span></h5>\r\n                            <br>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                                <mat-label>NIVEAU</mat-label>\r\n                                <mat-select [formControl]=\"niveauControl\" (openedChange)=\"getValueNiveau()\"\r\n                                    (selectionChange)=\"fetchClasses()\">\r\n                                    <mat-option *ngFor=\"let niveau of niveaux\" [value]=\"niveau\">\r\n                                        {{ niveau }}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                                <mat-label>ANNEE</mat-label>\r\n                                <mat-select [formControl]=\"anneeControl\" (selectionChange)=\"fetchClasses()\">\r\n                                    <div *ngIf=\"niveauM === 'LP' \">\r\n                                        <mat-option [value]=\"1\">1ère année</mat-option>\r\n                                        <mat-option [value]=\"2\">2ème année</mat-option>\r\n                                        <mat-option [value]=\"3\">3ème année</mat-option>\r\n                                    </div>\r\n                                    <div *ngIf=\"niveauM === 'MP' || niveauM === 'BTS'\">\r\n                                        <mat-option [value]=\"1\">1ère année</mat-option>\r\n                                        <mat-option [value]=\"2\">2ème année</mat-option>\r\n                                    </div>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>FILIERE</mat-label>\r\n                                <input matInput [formControl]=\"filiereControl\" [matAutocomplete]=\"auto\"\r\n                                    (focus)=\"initializeFilieres()\" type=\"text\" />\r\n                                <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFiliere\"\r\n                                    (optionSelected)=\"onSelectedFiliere(filiere.id)\">\r\n                                    <mat-option *ngFor=\"let filiere of filteredFilieres | async\" [value]=\"filiere\">\r\n                                        {{ filiere.name }}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>CLASSE</mat-label>\r\n                                <input matInput formControlName=\"classe\" [formControl]=\"classeControl\"\r\n                                    [matAutocomplete]=\"auto1\" (focus)=\"initializeClasses()\" type=\"text\" />\r\n                                <mat-autocomplete #auto1=\"matAutocomplete\" [displayWith]=\"displayClasse\">\r\n                                    <mat-option *ngFor=\"let classe of filteredClasses | async\" [value]=\"classe\">\r\n                                        {{ classe.name }}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>UE</mat-label>\r\n                                <input matInput [formControl]=\"ueControl\" [matAutocomplete]=\"auto2\"\r\n                                    (focus)=\"initializeUes()\" type=\"text\" />\r\n                                <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayUe\"\r\n                                    (optionSelected)=\"onSelectedUe(ue.id)\">\r\n                                    <mat-option *ngFor=\"let ue of filteredUes | async\" [value]=\"ue\">\r\n                                        {{ ue.code }}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>MATIERE</mat-label>\r\n                                <input matInput formControlName=\"matiere\" [formControl]=\"matiereControl\"\r\n                                    [matAutocomplete]=\"auto3\" (focus)=\"initializeMatieres()\" type=\"text\" />\r\n                                <mat-autocomplete #auto3=\"matAutocomplete\" [displayWith]=\"displayMatiere\">\r\n                                    <mat-option *ngFor=\"let matiere of filteredMatieres | async\" [value]=\"matiere\">\r\n                                        {{ matiere.name }}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-3 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6\" color=\"primary\"\r\n                                [disabled]=\"ficheForm.invalid\" (click)=\"exportExcelFiche()\">FICHE EN EXCEL</button>\r\n                        </div>\r\n                        <div class=\"col-3 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6 \" color=\"warn\"\r\n                                [disabled]=\"ficheForm.invalid\" (click)=\"exportPdfFiche()\">FICHE EN PDF</button>\r\n                        </div>\r\n                        <div class=\"col-3 d-flex justify-content-center\">\r\n                            <button style=\"padding-top: 10px;padding-bottom: 10px;\" type=\"submit\" mat-raised-button class=\"mt-6\" color=\"primary\"\r\n                                [disabled]=\"ficheForm.invalid\" (click)=\"exportExcelCompletFiche()\">FICHE COMPLÈTE EN EXCEL</button>\r\n                        </div>\r\n                        <div class=\"col-3 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6 \" color=\"warn\"\r\n                                [disabled]=\"ficheForm.invalid\" (click)=\"exportPdfCompletFiche()\">FICHE COMPLÈTE EN PDF</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { EtudiantService } from 'src/app/services/etudiant/etudiant.service';\r\nimport { Component, OnInit, ViewChild, inject, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, Subscription, of, takeUntil } from 'rxjs';\r\nimport { Annee } from 'src/app/models/Annee';\r\nimport { Classe } from 'src/app/models/Classe';\r\nimport { Etudiant } from 'src/app/models/Etudiant';\r\nimport { Filiere } from 'src/app/models/Filiere';\r\nimport { Matiere } from 'src/app/models/Matiere';\r\nimport { UE } from 'src/app/models/UE';\r\nimport { ClasseService } from 'src/app/services/classe/classe.service';\r\nimport { FiliereService } from 'src/app/services/filiere/filiere.service';\r\nimport { InscriptionService } from 'src/app/services/inscription/inscription.service';\r\nimport { NoteService } from 'src/app/services/note/note.service';\r\nimport { ReportService } from 'src/app/services/report/report.service';\r\nimport { UeService } from 'src/app/services/ue/ue.service';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\n@Component({\r\n  selector: 'app-releve',\r\n  templateUrl: './releve.component.html',\r\n  styleUrls: ['./releve.component.css']\r\n})\r\nexport class ReleveComponent implements OnInit {\r\n\r\n  releveForm!: FormGroup;\r\n  public filieres: Filiere[] = [];\r\n  public classes: Classe[] = [];\r\n  idFiliere!: number;\r\n  anneeSelected!: number;\r\n  niveaux: string[] = [\"LP\", \"MP\", \"BTS\"];\r\n  niveauM!: string;\r\n  coef!: number;\r\n\r\n  //NOTE:FORM CONTROLS\r\n  filiereControl: FormControl = new FormControl(null, Validators.required);\r\n  filteredFilieres!: Observable<Filiere[]>;\r\n  classeControl: FormControl = new FormControl(null, Validators.required);\r\n  filteredClasses!: Observable<Classe[]>;\r\n  anneeControl: FormControl = new FormControl(null, Validators.required);\r\n  niveauControl: FormControl = new FormControl(null, Validators.required);\r\n\r\n  //NOTE:TABLE ETUDIANTS DATA\r\n  etudiants: Etudiant[] = [];\r\n  isShow: boolean = false;\r\n  @ViewChild(MatPaginator) paginator !: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  public dataSource!: MatTableDataSource<Etudiant>;\r\n  displayedColumns: string[] = ['id', 'matricule', 'name', 'prenoms', 'age', 'dateNaiss', 'telephone', 'action'];\r\n  private inscriptionService = inject(InscriptionService);\r\n\r\n  //NOTE:INJECTIONS\r\n  private fb = inject(FormBuilder);\r\n  private toastr = inject(ToastrService);\r\n  private filiereService = inject(FiliereService);\r\n  private classeService = inject(ClasseService);\r\n  private reportService = inject(ReportService);\r\n  private destroyService = inject(DestroyService);\r\n\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n    this.getAllFilieres();\r\n    this.subscribeToFormChanges();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.releveForm = this.fb.group({\r\n      classe: this.classeControl,\r\n    });\r\n  }\r\n\r\n  //NOTE: RECHERCHE DANS AUTOCOMPLETE\r\n  subscribeToFormChanges() {\r\n    this.filiereControl.valueChanges\r\n      .pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(val => {\r\n        this.filteredFilieres = of(this.findFilieres(val));\r\n      });\r\n    this.classeControl.valueChanges\r\n      .pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(val => {\r\n        this.filteredClasses = of(this.findClasses(val));\r\n      });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  //NOTE: HANDLING SELECTION\r\n  onSelectedFiliere(id: number) {\r\n    this.idFiliere = id;\r\n    this.classeControl.setValue(null);\r\n    if (this.anneeControl.value && this.niveauControl.value) {\r\n      this.getAllClasses(id);\r\n    }\r\n  }\r\n\r\n\r\n  //NOTE:GET DATA\r\n  getAllFilieres() {\r\n    this.filiereService.getAll().pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.filieres = response;\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllClasses(id: number) {\r\n    this.classeService.getByFiliereAnneeNiveau(id, this.anneeControl.value, this.niveauControl.value)\r\n      .pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n        {\r\n          next: (response) => {\r\n            this.classes = response;\r\n          },\r\n          error: (error) => {\r\n            console.log(error);\r\n          },\r\n        }\r\n      )\r\n  }\r\n\r\n  getValueNiveau() {\r\n    this.niveauM = this.niveauControl.value;\r\n  }\r\n\r\n  // NOTE:DISPLAY VALUE IN INPUT\r\n  displayFiliere(value: any) {\r\n    if (value != null) {\r\n      return value.name;\r\n    }\r\n  }\r\n\r\n  displayClasse(value: any) {\r\n    if (value != null) {\r\n      return value.name;\r\n    }\r\n  }\r\n\r\n  displayUe(value: any) {\r\n    if (value != null) {\r\n      return value.code;\r\n    }\r\n  }\r\n\r\n  displayMatiere(value: any) {\r\n    if (value != null) {\r\n      return value.name;\r\n    }\r\n  }\r\n\r\n  //NOTE: GETTEURS\r\n  get filiere(): Filiere {\r\n    return this.filiereControl.value;\r\n  }\r\n\r\n  get classe(): Classe {\r\n    return this.classeControl.value;\r\n  }\r\n\r\n  get annee(): Annee {\r\n    return this.anneeControl.value;\r\n  }\r\n\r\n  get niveau() {\r\n    return this.niveauControl.value;\r\n  }\r\n\r\n  checkAnne() {\r\n    if (!this.releveForm.get('niveau')?.value) {\r\n      this.toastr.error(\"CHOSISSEZ UN NIVEAU \")\r\n    }\r\n    else if (!this.releveForm.get('annee')?.value) {\r\n      this.toastr.error(\"CHOSISSEZ L' ANNEE \")\r\n    }\r\n  }\r\n\r\n  fetchClasses() {\r\n    if (this.idFiliere && this.releveForm.get('annee')?.value && this.releveForm.get('niveau')?.value) {\r\n      this.getAllClasses(this.idFiliere);\r\n      this.classeControl.setValue(\"\");\r\n    }\r\n  }\r\n\r\n  //NOTE: FIND IN \r\n  findFilieres(val: string): Filiere[] {\r\n    return this.filieres.filter(option =>\r\n      option.name.toLowerCase().includes(val));\r\n  }\r\n\r\n  findClasses(val: string): Classe[] {\r\n    return this.classes.filter(option =>\r\n      option.name.toLowerCase().includes(val));\r\n  }\r\n\r\n  //NOTE: INITIALIZE\r\n  initializeFilieres() {\r\n    this.filteredFilieres = of(this.findFilieres(\"\"))\r\n  }\r\n\r\n  initializeClasses() {\r\n    this.filteredClasses = of(this.findClasses(\"\"))\r\n  }\r\n\r\n  exportExcelFiche() {\r\n    const data = this.releveForm.value;\r\n    this.reportService.getReportFiche(data.matiere.id, data.classe.id, \"excel\").pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n      next: () => {\r\n        this.toastr.info(\"EXCEL WAS GENERATED\");\r\n      }, error: (error) => {\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n\r\n  //NOTE: CHARGER LES ETUDIANTS\r\n  load() {\r\n    this.isShow = true;\r\n    const data = this.releveForm.get(\"classe\")?.value;\r\n    this.inscriptionService.getAllEtudiantsByClasse(data.id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.etudiants = response;\r\n          this.dataSource = new MatTableDataSource(this.etudiants);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  //NOTE: REPORT RELEVE\r\n  exportExcelReleve(matricule: String) {\r\n    const data = this.releveForm.value;\r\n    this.reportService.getReportReleve(matricule, data.classe.id, \"excel\").pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n      next: () => {\r\n        this.toastr.info(\"PDF WAS GENERATED\");\r\n      }, error: (error) => {\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n\r\n  exportPdfReleve(matricule: String) {\r\n    const data = this.releveForm.value;\r\n    this.reportService.getReportReleve(matricule, data.classe.id, \"pdf\").pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n      next: () => {\r\n        this.toastr.info(\"PDF WAS GENERATED\");\r\n      }, error: (error) => {\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n\r\n  exportExcelReleveClasse() { }\r\n\r\n  exportPdfReleveClasse() {\r\n    this.etudiants.forEach(element => {\r\n      this.reportService.getReportReleve(element.matricule, this.classeControl.value.id, \"pdf\").pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n        next: () => {\r\n          this.toastr.info(\"PDF WAS GENERATED\");\r\n        }, error: (error) => {\r\n          console.log(error);\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">RELEVE DE NOTES</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">TABLEAU DE BORD</a></li>\r\n                <li class=\"breadcrumb-item active\">REPORT</li>\r\n                <li class=\"breadcrumb-item active\">RELEVE DE NOTES</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!--NOTE: FORMULAIRE LOADING NOTES  -->\r\n<div class=\"row\">\r\n    <div class=\"col-12\"></div>\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"releveForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 d-flex justify-content-center\"> <!-- Modified line -->\r\n                            <h5><span>RELEVE DE NOTES</span></h5>\r\n                            <br>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                                <mat-label>NIVEAU</mat-label>\r\n                                <mat-select [formControl]=\"niveauControl\" (openedChange)=\"getValueNiveau()\"\r\n                                    (selectionChange)=\"fetchClasses()\">\r\n                                    <mat-option *ngFor=\"let niveau of niveaux\" [value]=\"niveau\">\r\n                                        {{ niveau }}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                                <mat-label>ANNEE</mat-label>\r\n                                <mat-select [formControl]=\"anneeControl\" (selectionChange)=\"fetchClasses()\">\r\n                                    <div *ngIf=\"niveauM === 'LP' \">\r\n                                        <mat-option [value]=\"1\">1ère année</mat-option>\r\n                                        <mat-option [value]=\"2\">2ème année</mat-option>\r\n                                        <mat-option [value]=\"3\">3ème année</mat-option>\r\n                                    </div>\r\n                                    <div *ngIf=\"niveauM === 'MP' || niveauM === 'BTS'\">\r\n                                        <mat-option [value]=\"1\">1ère année</mat-option>\r\n                                        <mat-option [value]=\"2\">2ème année</mat-option>\r\n                                    </div>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>FILIERE</mat-label>\r\n                                <input matInput [formControl]=\"filiereControl\" [matAutocomplete]=\"auto\"\r\n                                    (focus)=\"initializeFilieres()\" type=\"text\" />\r\n                                <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFiliere\"\r\n                                    (optionSelected)=\"onSelectedFiliere(filiere.id)\">\r\n                                    <mat-option *ngFor=\"let filiere of filteredFilieres | async\" [value]=\"filiere\">\r\n                                        {{ filiere.name }}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"col-4\"></div>\r\n\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>CLASSE</mat-label>\r\n                                <input matInput formControlName=\"classe\" [formControl]=\"classeControl\"\r\n                                    [matAutocomplete]=\"auto1\" (focus)=\"initializeClasses()\" type=\"text\" />\r\n                                <mat-autocomplete #auto1=\"matAutocomplete\" [displayWith]=\"displayClasse\">\r\n                                    <mat-option *ngFor=\"let classe of filteredClasses | async\" [value]=\"classe\">\r\n                                        {{ classe.name }}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6\" color=\"primary\"\r\n                            [disabled]=\"releveForm.invalid\" (click)=\"load()\">LISTE DES ETUDIANTS</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- NOTE: TABLES -->\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"page-header\">\r\n                        <div class=\"row align-items-center\">\r\n                            <div class=\"col\">\r\n                                <h3 class=\"page-title\">ETUDIANTS</h3>\r\n                            </div>\r\n                            <div *ngIf=\"isShow\" class=\"col-auto text-end float-end  download-grp\">\r\n                                <button class=\"btn btn-primary mb-3 p-2\" matTooltip=\"RELEVE DE NOTES en PDF DE LA CLASSE\"\r\n                                    (click)=\"exportPdfReleveClasse()\"><i\r\n                                        class=\"feather feather-arrow-down-circle p-2\"></i></button>\r\n                            </div>\r\n                            <div *ngIf=\"isShow\" class=\"col-auto text-end float-end  download-grp\">\r\n                                \r\n                                <button class=\"btn btn-primary mb-3 p-2\" matTooltip=\"RELEVE DE NOTES EN EXCCEL DE LA CLASSE\"\r\n                                    (click)=\"exportExcelReleveClasse()\"><i\r\n                                        class=\"feather feather-arrow-down p-2\"></i></button>\r\n                            </div>\r\n                            <div class=\"col-4\"> <!-- Adjust the column width as needed -->\r\n                                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                    <mat-label>Filtrer</mat-label>\r\n                                    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"MATH100\" #input>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-8\"></div>\r\n\r\n                    <div class=\"mat-elevation-z8\" *ngIf=\"isShow\">\r\n                        <div class=\"responsive-container table-responsive\">\r\n                            <table mat-table [dataSource]=\"dataSource\" matSort\r\n                                class=\"table border-0 star-student table-hover table-center mb-0 datatable table-striped\">\r\n\r\n                                <!-- ID Column -->\r\n                                <!-- Row Number Column -->\r\n                                <ng-container matColumnDef=\"id\">\r\n                                    <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                                    <td mat-cell *matCellDef=\"let i = index\"> {{ i + 1 }} </td>\r\n                                </ng-container>\r\n                                <!-- Matricule Column -->\r\n                                <ng-container matColumnDef=\"matricule\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> MATRICULE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.matricule}} </td>\r\n                                </ng-container>\r\n                                <!-- FirstName Column -->\r\n                                <ng-container matColumnDef=\"name\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> NOM </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- lastName Column -->\r\n                                <ng-container matColumnDef=\"prenoms\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> PRENOMS </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.prenoms}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- AGE Column -->\r\n                                <ng-container matColumnDef=\"age\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> AGE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.age}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- DATE DE NAISSANCE Column -->\r\n                                <ng-container matColumnDef=\"dateNaiss\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> DATE DE NAISSANCE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.dateNaiss | date:'dd MMMM yyyy'}}</td>\r\n                                </ng-container>\r\n\r\n                                <!-- TELEPHONE Column -->\r\n                                <ng-container matColumnDef=\"telephone\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> TELEPHONE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.telephone }}</td>\r\n                                </ng-container>\r\n\r\n                                <!-- ACTION Column -->\r\n                                <ng-container matColumnDef=\"action\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ACTIONS </th>\r\n                                    <td mat-cell *matCellDef=\"let row\">\r\n                                        <button mat-icon-button color=\"primary\" (click)=\"exportExcelReleve(row.matricule)\"\r\n                                            matTooltip=\"RELEVE DE NOTES EN EXCEL\">\r\n                                            <mat-icon matSuffix>insert_drive_file</mat-icon>\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"warn\" (click)=\"exportPdfReleve(row.matricule)\"\r\n                                            matTooltip=\"RELEVE DE NOTES EN PDF\">\r\n                                            <mat-icon matSuffix>insert_drive_file</mat-icon>\r\n                                        </button>\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                <!-- Row shown when there is no matching data. -->\r\n                                <tr class=\"mat-row\" *matNoDataRow>\r\n                                    <td class=\"mat-cell\" colspan=\"4\">AUCUNE DONNEE NE CORRESPOND A \"{{input.value}}\"\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n                            aria-label=\"Select page of users\"></mat-paginator>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, ViewChild, OnInit, OnDestroy, inject } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription, takeUntil } from 'rxjs';\r\nimport { Semestre } from 'src/app/models/Semestre';\r\nimport { AnneeService } from 'src/app/services/annee/annee.service';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\n\r\n@Component({\r\n  selector: 'app-list-semestre',\r\n  templateUrl: './list-semestre.component.html',\r\n  styleUrls: ['./list-semestre.component.css']\r\n})\r\nexport class ListSemestreComponent implements OnInit{\r\n  public semestres!: Semestre[];\r\n  @ViewChild(MatPaginator) paginator !: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  public dataSource!: MatTableDataSource<Semestre>;\r\n  displayedColumns: string[] = ['indice', 'status'];\r\n\r\n\r\n  //NOTE: INJECTIONS\r\n  private service = inject(AnneeService);\r\n  private toastr = inject(ToastrService);\r\n  private destroyService = inject(DestroyService);\r\n\r\n  ngOnInit(): void {\r\n    this.getAll();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAll() {\r\n    this.service.getAllSemestres().pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.semestres = response;\r\n          this.dataSource = new MatTableDataSource(this.semestres);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  changeActive(id: number) {\r\n    this.service.activeSemestre(id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n      next: () => {\r\n        this.toastr.success(\"ACTIVATE\");\r\n        this.getAll();\r\n      }, error(message) {\r\n        console.log( message);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">SEMESTRES</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">TABLEAU DE BORD</a></li>\r\n                <li class=\"breadcrumb-item act  ive\">SEMESTRES</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <h5 class=\"form-title\"><span>LISTE DES SEMESTRES</span></h5>\r\n                    </div>\r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Filtrer</mat-label>\r\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"2021-2022\" #input>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"mat-elevation-z8\">\r\n                        <div class=\"responsive-container\">\r\n                            <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n\r\n                                <!-- FirstName Column -->\r\n                                <ng-container matColumnDef=\"indice\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> SEMESTRE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.indice}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- lastName Column -->\r\n                                <ng-container matColumnDef=\"status\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> STATUS </th>\r\n                                    <td mat-cell *matCellDef=\"let row\">\r\n                                        <mat-slide-toggle [checked]=\"row.enable\" (change)=\"changeActive(row.id)\">ACTIVER</mat-slide-toggle>\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                <!-- R  ow shown when there is no matching data. -->\r\n                                <tr class=\"mat-row\" *matNoDataRow>\r\n                                    <td class=\"mat-cell\" colspan=\"4\">AUCUNE DONNEE NE CORRESPOND A \"{{input.value}}\"\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n                            aria-label=\"Select page of users\"></mat-paginator>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit,inject } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { takeUntil } from 'rxjs';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\nimport { UeService } from 'src/app/services/ue/ue.service';\r\n\r\n@Component({\r\n    selector: 'app-create-ue',\r\n    templateUrl: './create-ue.component.html',\r\n    styleUrls: ['./create-ue.component.css']\r\n})\r\nexport class CreateUeComponent implements OnInit {\r\n    hintColor = \"red\";\r\n    registerForm!: FormGroup;\r\n\r\n\r\n    //NOTE: INJECTIONS\r\n    private fb = inject(FormBuilder);\r\n    private service = inject(UeService);\r\n    private toastr = inject(ToastrService);\r\n    private destroyService = inject(DestroyService);\r\n\r\n    ngOnInit(): void {\r\n        this.initializeForm();\r\n    }\r\n\r\n    initializeForm() {\r\n        this.registerForm = this.fb.group({\r\n            code: [null, [Validators.required, Validators.minLength(4)]],\r\n            label: [null, [Validators.required, Validators.minLength(4)]],\r\n            totalCredit: [0],\r\n        });\r\n    }\r\n\r\n    register() {\r\n        const ue = this.registerForm.value;\r\n        this.service.postRegistration(ue).pipe(takeUntil(this.destroyService.onDestroy$))\r\n        .subscribe(\r\n            {\r\n                next: (response) => {\r\n                    console.log(response.status);\r\n                    this.registerForm.reset({\r\n                        totalCredit: 0\r\n                    });\r\n                },\r\n                error: (error) => {\r\n                    if (error.status == 500) {\r\n                        this.toastr.error(error.error);\r\n                    }\r\n                },\r\n            }\r\n        );\r\n    }\r\n\r\n    get code(): FormControl {\r\n        return this.registerForm.get('code') as FormControl;\r\n    }\r\n\r\n    get label(): FormControl {\r\n        return this.registerForm.get('label') as FormControl;\r\n    }\r\n\r\n    get codeId(): String {\r\n        return this.registerForm.get('code')?.value;\r\n    }\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">ENREGISTREMENT UE</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">TABLEAU DE BORD</a></li>\r\n                <li class=\"breadcrumb-item active\"><a routerLink=\"/dashboard/ue\">UE</a></li>\r\n                <li class=\"breadcrumb-item active\">ENREGISTRER</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-3\"></div>\r\n    <div class=\"col-sm-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"registerForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 d-flex justify-content-center\"> <!-- Modified line -->\r\n                            <h5><span>UE</span></h5>\r\n                            <br>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>Entrez le code </mat-label>\r\n                                <input matInput formControlName=\"code\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': code.errors?.['required'] && code.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"code.touched && code.invalid\">\r\n\r\n                                    <mat-error *ngIf=\"code.errors?.['required']\" [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                        rentrer une valeur</mat-error>\r\n                                    <mat-error *ngIf=\"code.errors?.['minlength']\" [ngClass]=\"{color:   hintColor}\">Entrez\r\n                                        au minimum 4\r\n                                        lettres</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>Entrez le Nom de l'UE </mat-label>\r\n                                <input matInput formControlName=\"label\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': label.errors?.['required'] && label.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"label.touched && label.invalid\">\r\n                                    <mat-error *ngIf=\"label.errors?.['required']\" [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                        entrez le nom de l'UE</mat-error>\r\n                                    <mat-error *ngIf=\"label.errors?.['minlength']\" [ngClass]=\"{color:   hintColor}\">Entrez\r\n                                        au minimum 4 lettres</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.display]=\"'none'\">\r\n                                <input matInput formControlName=\"totalCredit\" type=\"text\"  />\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6\" color=\"primary\" [disabled]=\"registerForm.invalid\"\r\n                                (click)=\"register()\">ENREGISTRER</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { inject } from '@angular/core';\r\nimport { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { takeUntil } from 'rxjs';\r\nimport { UE } from 'src/app/models/UE';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\nimport { UeService } from 'src/app/services/ue/ue.service';\r\n\r\n@Component({\r\n  selector: 'app-list-ue',\r\n  templateUrl: './list-ue.component.html',\r\n  styleUrls: ['./list-ue.component.css']\r\n})\r\nexport class ListUeComponent implements OnInit {\r\n  public ues!: UE[];\r\n  @ViewChild(MatPaginator) paginator !: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  public dataSource!: MatTableDataSource<UE>;\r\n\r\n  displayedColumns: string[] = ['id', 'code', 'label', 'totalCredit', 'action'];\r\n  //NOTE:INJECTIONS\r\n  private service = inject(UeService);\r\n  private router = inject(Router);\r\n  private destroyService = inject(DestroyService);\r\n  ngOnInit(): void {\r\n    this.getAllUes();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllUes() {\r\n    this.service.getAllUes().pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: (response) => {\r\n          this.ues = response;\r\n          this.dataSource = new MatTableDataSource(this.ues);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  edit(id: number) {\r\n    this.router.navigate([\"/dashboard/ue/update/\" + id]);\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.service.delete(id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n      next: () => {\r\n        this.getAllUes();\r\n      }, error: (error) => {\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">UE</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">TABLEAU DE BORD</a></li>\r\n                <li class=\"breadcrumb-item active\">UE</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <h5 class=\"form-title\"><span>LISTE DES UES</span></h5>\r\n                    </div>\r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <a mat-raised-button color=\"primary\" class=\"add-button\"\r\n                            routerLink=\"/dashboard/ue/create\">AJOUTER</a>\r\n                    </div>\r\n                    <div class=\"col-6\"> <!-- Adjust the column width as needed -->\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Filtrer</mat-label>\r\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"MATH100\" #input>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"mat-elevation-z8\">\r\n                        <div class=\"responsive-container table-responsive\">\r\n                            <table mat-table [dataSource]=\"dataSource\" matSort class=\"table border-0 star-student table-hover table-center mb-0 datatable table-striped\">\r\n\r\n                                <!-- ID Column -->\r\n                                <!-- Row Number Column -->\r\n                                <ng-container matColumnDef=\"id\">\r\n                                    <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                                    <td mat-cell *matCellDef=\"let i = index\"> {{ i + 1 }} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- FirstName Column -->\r\n                                <ng-container matColumnDef=\"code\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> CODE </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.code}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- FirstName Column -->\r\n                                <ng-container matColumnDef=\"label\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> LABEL </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.label}} </td>\r\n                                </ng-container>\r\n\r\n                                <!-- lastName Column -->\r\n                                <ng-container matColumnDef=\"totalCredit\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> CREDIT TOTAL </th>\r\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.totalCredit}} </td>\r\n                                </ng-container>\r\n\r\n\r\n                                <!-- action Column -->\r\n                                <ng-container matColumnDef=\"action\">\r\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </th>\r\n                                    <td mat-cell *matCellDef=\"let row\">\r\n                                        <button mat-icon-button color=\"primary\" (click)=\"edit(row.id)\" matTooltip=\"MODIFIER\">\r\n                                            <mat-icon matSuffix>edit</mat-icon>\r\n\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"warn\" [swal]=\"deleteSwal\" matTooltip=\"SUPPRIMER\">\r\n                                            <mat-icon matSuffix>delete</mat-icon>\r\n                                        </button>\r\n                                        <swal #deleteSwal title=\"Voulez vous supprimer l'UE?\"\r\n                                            text=\"Vous ne pourrez plus revenir en arriere\" icon=\"warning\"\r\n                                            [showCancelButton]=\"true\" [focusCancel]=\"true\" (confirm)=\"delete(row.id)\">\r\n                                        </swal>\r\n                                    </td>\r\n                                </ng-container>\r\n\r\n\r\n\r\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                                <!-- Row shown when there is no matching data. -->\r\n                                <tr class=\"mat-row\" *matNoDataRow>\r\n                                    <td class=\"mat-cell\" colspan=\"4\">AUCUNE DONNEE NE CORRESPOND A \"{{input.value}}\"\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n                            aria-label=\"Select page of users\"></mat-paginator>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, inject } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription, takeUntil } from 'rxjs';\r\nimport { UE } from 'src/app/models/UE';\r\nimport { DestroyService } from 'src/app/services/destroy/destroy.service';\r\nimport { UeService } from 'src/app/services/ue/ue.service';\r\n\r\n@Component({\r\n  selector: 'app-update-ue',\r\n  templateUrl: './update-ue.component.html',\r\n  styleUrls: ['./update-ue.component.css']\r\n})\r\nexport class UpdateUeComponent implements OnInit {\r\n  hintColor = \"red\";\r\n  updateForm: any;\r\n  id!: number;\r\n  //NOTE:INJECTIONS\r\n  private fb = inject(FormBuilder);\r\n  private service = inject(UeService);\r\n  private toastr = inject(ToastrService);\r\n  private route = inject(ActivatedRoute);\r\n  private router = inject(Router);\r\n  private destroyService = inject(DestroyService);\r\n\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n    this.subscribeToRouteParams();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.updateForm = this.fb.group({\r\n      code: [null, [Validators.required, Validators.minLength(4)]],\r\n      label: [null, [Validators.required, Validators.minLength(4)]],\r\n      totalCredit: [0],\r\n    });\r\n  }\r\n\r\n  subscribeToRouteParams() {\r\n    this.route.paramMap.pipe(takeUntil(this.destroyService.onDestroy$)).subscribe((value) => {\r\n      this.id = Number(value.get('id'));\r\n      this.service.getById(this.id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe({\r\n        next: (res) => {\r\n          this.fillForm(res);\r\n        }, error: (error) => {\r\n          console.log(error);\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  fillForm(ue: UE) {\r\n    this.updateForm.setValue({\r\n      code: ue.code,\r\n      label: ue.label,\r\n      totalCredit: ue.totalCredit\r\n    });\r\n  }\r\n\r\n  get fc() {\r\n    return this.updateForm.controls;\r\n  }\r\n\r\n  get label(): FormControl {\r\n    return this.updateForm.get('label') as FormControl;\r\n  }\r\n\r\n  update() {\r\n    const ue = this.updateForm.value;\r\n    this.service.putUpdate(ue, this.id).pipe(takeUntil(this.destroyService.onDestroy$)).subscribe(\r\n      {\r\n        next: () => {\r\n          this.router.navigate(['/dashboard/ue']);\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n          if (error.status == 500) {\r\n            this.toastr.error(error.error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"page-header\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col\">\r\n            <h3 class=\"page-title\">MODIFICATION UE</h3>\r\n            <ul class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">TABLEAU DE BORD</a></li>\r\n                <li class=\"breadcrumb-item active\"><a routerLink=\"/dashboard/ue\">UE</a></li>\r\n                <li class=\"breadcrumb-item active\">MODIFICATION</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-3\"></div>\r\n    <div class=\"col-sm-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"updateForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <div class=\"col-md-6\"></div>\r\n                            <h5 class=\"form-title\"><span>UE</span></h5>\r\n                        </div>\r\n                        <!-- <div class=\"col-md-3\"></div> -->\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\" >\r\n                                <mat-label>Entrez le nom </mat-label>\r\n                                <input matInput formControlName=\"code\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': fc.code.required && fc.code.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n\r\n                                <div *ngIf=\"fc.code.touched && fc.code.invalid\">\r\n                                    <mat-error *ngIf=\"fc.code.errors?.required\" [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                        rentrer une valeur</mat-error>\r\n                                    <mat-error *ngIf=\"fc.code.errors?.minlength\" [ngClass]=\"{color:   hintColor}\">Entrez\r\n                                        au minimum 4\r\n                                        lettres</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" color=\"primary\" [style.width]=\"'100%'\">\r\n                                <mat-label>Entrez le Nom de l'UE </mat-label>\r\n                                <input matInput formControlName=\"label\" type=\"text\"\r\n                                    [ngClass]=\"{ 'is-invalid': label.errors?.['required'] && label.invalid }\" />\r\n                                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                                <div *ngIf=\"label.touched && label.invalid\">\r\n                                    <mat-error *ngIf=\"label.errors?.['required']\" [ngClass]=\"{color:   hintColor}\">Veuillez\r\n                                        entrez le nom de l'UE</mat-error>\r\n                                    <mat-error *ngIf=\"label.errors?.['minlength']\" [ngClass]=\"{color:   hintColor}\">Entrez\r\n                                        au minimum 4 lettres</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-12 d-flex justify-content-center\">\r\n                            <button type=\"submit\" mat-raised-button class=\"mt-6\"  [disabled]=\"updateForm.invalid\"\r\n                                (click)=\"update()\">MODIFIER</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n\n}\n","<div class=\"page-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"page-sub-header\">\r\n                <h3 class=\"page-title\">BIENVENUE</h3>\r\n                <ul class=\"breadcrumb\">\r\n                    <li class=\"breadcrumb-item\"><a [routerLink]=\"['/']\" routerLinkActive=\"active\">TABLEAU DE BORD</a></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-xl-3 col-sm-6 col-12 d-flex\">\r\n        <div class=\"card bg-comman w-100\">\r\n            <div class=\"card-body\">\r\n                <div class=\"db-widgets d-flex justify-content-between align-items-center\">\r\n                    <div class=\"db-info\">\r\n                        <h6>ETUDIANTS</h6>\r\n                        <h3>65</h3>\r\n                    </div>\r\n                    <div class=\"db-icon\">\r\n                        <img src=\"assets/img/icons/dash-icon-01.svg\" alt=\"Dashboard Icon\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-3 col-sm-6 col-12 d-flex\">\r\n        <div class=\"card bg-comman w-100\">\r\n            <div class=\"card-body\">\r\n                <div class=\"db-widgets d-flex justify-content-between align-items-center\">\r\n                    <div class=\"db-info\">\r\n                        <h6>FILIERES</h6>\r\n                        <h3>30</h3>\r\n                    </div>\r\n                    <div class=\"db-icon\">\r\n                        <img src=\"assets/img/icons/dash-icon-03.svg\" alt=\"Dashboard Icon\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-3 col-sm-6 col-12 d-flex\">\r\n        <div class=\"card bg-comman w-100\">\r\n            <div class=\"card-body\">\r\n                <div class=\"db-widgets d-flex justify-content-between align-items-center\">\r\n                    <div class=\"db-info\">\r\n                        <h6>CLASSES</h6>\r\n                        <h3>50</h3>\r\n                    </div>\r\n                    <div class=\"db-icon\">\r\n                        <img src=\"assets/img/icons/dash-icon-03.svg\" alt=\"Dashboard Icon\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-3 col-sm-6 col-12 d-flex\">\r\n        <div class=\"card bg-comman w-100\">\r\n            <div class=\"card-body\">\r\n                <div class=\"db-widgets d-flex justify-content-between align-items-center\">\r\n                    <div class=\"db-info\">\r\n                        <h6>PROFESSEURS</h6>\r\n                        <h3>25</h3>\r\n                    </div>\r\n                    <div class=\"db-icon\">\r\n                        <img src=\"assets/img/icons/teacher-icon-02.svg\" alt=\"Dashboard Icon\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    <div class=\"col-xl-3 col-sm-6 col-12 d-flex\">\r\n        <div class=\"card bg-comman w-100\">\r\n            <div class=\"card-body\">\r\n                <div class=\"db-widgets d-flex justify-content-between align-items-center\">\r\n                    <div class=\"db-info\">\r\n                        <h6>UES</h6>\r\n                        <h3>5</h3>\r\n                    </div>\r\n                    <div class=\"db-icon\">\r\n                        <img src=\"assets/img/icons/lesson-icon-06.svg\" alt=\"Dashboard Icon\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-3 col-sm-6 col-12 d-flex\">\r\n        <div class=\"card bg-comman w-100\">\r\n            <div class=\"card-body\">\r\n                <div class=\"db-widgets d-flex justify-content-between align-items-center\">\r\n                    <div class=\"db-info\">\r\n                        <h6>MATIERES</h6>\r\n                        <h3>15</h3>\r\n                    </div>\r\n                    <div class=\"db-icon\">\r\n                        <img src=\"assets/img/icons/lesson-icon-06.svg\" alt=\"Dashboard Icon\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-3 col-sm-6 col-12 d-flex\">\r\n        <div class=\"card bg-comman w-100\">\r\n            <div class=\"card-body\">\r\n                <div class=\"db-widgets d-flex justify-content-between align-items-center\">\r\n                    <div class=\"db-info\">\r\n                        <h6>ANNEE SCOLAIRE</h6>\r\n                        <h3>2</h3>\r\n                    </div>\r\n                    <div class=\"db-icon\">\r\n                        <img src=\"assets/img/icons/award-icon-01.svg\" alt=\"Dashboard Icon\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from '../services/auth/login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard  {\r\n  constructor(private loginService: LoginService, private router: Router) {\r\n\r\n  }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      if (this.loginService.isLoggedIn()) {\r\n        return true;\r\n      }\r\n      this.router.navigate(['login']);\r\n      return false;\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from '../services/auth/login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NoauthGuard {\r\n  constructor(private loginService: LoginService, private router: Router) {\r\n\r\n  }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      if (this.loginService.isLoggedIn()) {\r\n        this.router.navigate(['']);\r\n        return false;\r\n      }\r\n      return true;\r\n  }\r\n  \r\n}\r\n","<div class=\"header\" >\r\n    \r\n    <div class=\"header-left\">\r\n        <a href=\"index.html\" class=\"logo\">\r\n            <img src=\"assets/img/logo.png\" alt=\"Logo\">\r\n        </a>\r\n        <a href=\"index.html\" class=\"logo logo-small\">\r\n            <img src=\"assets/img/logo-small.png\" alt=\"Logo\" width=\"30\" height=\"30\">\r\n        </a>\r\n    </div>\r\n    <div class=\"menu-toggle\">\r\n        <a href=\"javascript:void(0);\" id=\"toggle_btn\">\r\n            <i class=\"fas fa-bars\"></i>\r\n        </a>\r\n    </div>\r\n    <a class=\"mobile_btn\" id=\"mobile_btn\">\r\n        <i class=\"fas fa-bars\"></i>\r\n    </a>\r\n\r\n    <ul class=\"nav user-menu\">\r\n\r\n        <li class=\"nav-item dropdown has-arrow new-user-menus\">\r\n            <a href=\"#\" class=\"dropdown-toggle nav-link\" data-bs-toggle=\"dropdown\">\r\n                <span class=\"user-img\">\r\n                    <img class=\"rounded-circle\" src=\"assets/img/profiles/avatar-01.jpg\" width=\"31\" alt=\"Soeng Souy\">\r\n                    <div class=\"user-text\">\r\n                        <h6>Soeng Souy</h6>\r\n                        <p class=\"text-muted mb-0\">Administrator</p>\r\n                    </div>\r\n                </span>\r\n            </a>\r\n            <div class=\"dropdown-menu\">\r\n                <div class=\"user-header\">\r\n                    <div class=\"avatar avatar-sm\">\r\n                        <img src=\"assets/img/profiles/avatar-01.jpg\" alt=\"User Image\" class=\"avatar-img rounded-circle\">\r\n                    </div>\r\n                    <div class=\"user-text\">\r\n                        <h6>Soeng Souy</h6>\r\n                        <p class=\"text-muted mb-0\">Administrator</p>\r\n                    </div>\r\n                </div>\r\n                <a class=\"dropdown-item\" mat-button (click)=\"logout()\">Logout</a>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n    <div *ngIf=\"loaderService.isLoading | async\">\r\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { LoginService } from '../services/auth/login.service';\r\nimport { Router } from '@angular/router';\r\nimport { LoaderService } from '../services/loader/loader.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent {\r\n  constructor(private loginService:LoginService,private router:Router,public loaderService:LoaderService) {\r\n    \r\n  }\r\n\r\n  logout(){\r\n    const check = this.loginService.logout();\r\n    console.log(check);\r\n    \r\n    if(check){\r\n      this.router.navigate(['login']);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from '../services/auth/login.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { DestroyService } from '../services/destroy/destroy.service';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    validateForm: any;\r\n    hintColor: string = \"red\";\r\n    //NOTE:INJECTIONS\r\n    private loginService = inject(LoginService);\r\n    private router = inject(Router);\r\n    private fb = inject(FormBuilder);\r\n    private toastr = inject(ToastrService);\r\n    private destroyService = inject(DestroyService);\r\n\r\n    ngOnInit() {\r\n        this.validateForm = this.fb.group({\r\n            username: [null, [Validators.required]],\r\n            password: [null, [Validators.required]],\r\n        });\r\n    }\r\n\r\n    login() {\r\n        const username = this.validateForm.get(['username'])!.value;\r\n        const password = this.validateForm.get(['password'])!.value;\r\n        this.loginService.login(username,password)\r\n        .pipe(this.destroyService.onDestroy$)\r\n        .subscribe({\r\n            next: (response: any) => {\r\n                this.loginService.loginUser(response.body.token, response.body.name);\r\n                this.router.navigate(['']);\r\n            },\r\n            error: (error:any) => {\r\n                this.toastr.error(\"Echec d' authentification\");\r\n                console.log(error);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.validateForm.get('username')?.reset();\r\n        this.validateForm.get('password')?.reset();\r\n    }\r\n\r\n    get fc() {\r\n        return this.validateForm.controls;\r\n    }\r\n\r\n}\r\n","<div class=\"main-wrapper login-body\">\r\n    <div class=\"login-wrapper\">\r\n        <div class=\"container\">\r\n            <div class=\"loginbox\">\r\n                <div class=\"login-left\">\r\n                    <img class=\"img-fluid\" src=\"assets/img/login.png\" alt=\"Logo\" />\r\n                </div>\r\n                <div class=\"login-right\">\r\n                    <div class=\"login-right-wrap\">\r\n                        <h2>CONNEXION</h2>\r\n                        <form [formGroup]=\"validateForm\">\r\n                            <mat-form-field [style.width]=\"'100%'\" appearance=\"outline\">\r\n                                <mat-label>Username</mat-label>\r\n                                <input type=\"text\" matInput formControlName=\"username\"\r\n                                    [ngClass]=\"{ 'is-invalid': fc.username.required && fc.username.invalid }\">\r\n                                <div *ngIf=\"fc.username.touched && fc.username.invalid\">\r\n                                    <mat-error *ngIf=\"fc.username.errors?.required\"\r\n                                        [ngClass]=\"{color:   hintColor}\">ENTREZ LE NOM D' UTILISATEUR</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                                <mat-label>Pasword</mat-label>\r\n                                <input type=\"password\" matInput formControlName=\"password\"\r\n                                    [ngClass]=\"{ 'is-invalid': fc.password.required && fc.password.invalid }\">\r\n                                <div *ngIf=\"fc.password.touched && fc.password.invalid\">\r\n                                    <mat-error *ngIf=\"fc.password.errors?.required\"\r\n                                        [ngClass]=\"{color:   hintColor}\">ENTREZ LE MOT DE PASSE</mat-error>\r\n                                </div>\r\n                            </mat-form-field>\r\n\r\n                            <button style=\"height: 50px;display: grid;width: 100%;\r\n                            place-items: center;\" mat-raised-button color=\"primary\" (click)=\"login()\"\r\n                                [disabled]=\"validateForm.invalid\">CONNEXION</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport {  MatTooltipModule } from '@angular/material/tooltip';\r\nimport {MatIconModule} from '@angular/material/icon'; \r\nimport {MatRadioModule} from '@angular/material/radio'\r\nimport {MatSelectModule} from '@angular/material/select'\r\nimport {MAT_DATE_LOCALE, MatNativeDateModule } from '@angular/material/core'\r\nimport { MatPaginatorModule} from '@angular/material/paginator'\r\nimport {MatDatepickerModule} from '@angular/material/datepicker'\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport {  MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport {  MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport {  MatDialogModule } from '@angular/material/dialog';\r\nimport {  MatSidenavModule } from '@angular/material/sidenav';\r\nimport {  MatListModule } from '@angular/material/list';\r\nimport {  MatMenuModule } from '@angular/material/menu';\r\n  @NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatProgressSpinnerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatRadioModule,\r\n    MatTooltipModule,\r\n    MatSelectModule,\r\n    MatNativeDateModule,\r\n    MatDatepickerModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatAutocompleteModule,\r\n    MatSlideToggleModule,\r\n    MatDialogModule,\r\n    MatProgressBarModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatMenuModule\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatProgressSpinnerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatNativeDateModule,\r\n    MatDatepickerModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatAutocompleteModule,\r\n    MatSlideToggleModule,\r\n    MatDialogModule,\r\n    MatProgressBarModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatMenuModule\r\n  ],\r\n  providers: [\r\n    { provide: MAT_DATE_LOCALE, useValue: 'en-GB' }\r\n  ]\r\n})\r\nexport class MaterialDesignModule {}\r\n","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Inject, Injectable, inject } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { map, tap } from 'rxjs';\r\nimport { Annee } from 'src/app/models/Annee';\r\nimport { Semestre } from 'src/app/models/Semestre';\r\nimport { environment } from 'src/environments/environment.development';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnneeService {\r\n  baseUrl = environment.apiURL + \"annee\";\r\n\r\n  private http = inject(HttpClient);\r\n  private toastr= inject(ToastrService);\r\n  \r\n  getAll() {\r\n    return this.http.get<Annee[]>(`${this.baseUrl}`);\r\n  }\r\n\r\n  getAllSemestres(){\r\n    return this.http.get<Semestre[]>(`${this.baseUrl}`+'/semestres');\r\n  }\r\n\r\n  getById(id:number) {\r\n    return this.http.get<Annee>(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  postRegistration(register: Annee) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.post<any>(`${this.baseUrl}` + \"/register\", JSON.stringify(register), httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"ENREGISTREMENT REUSSIE\")),\r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  putUpdate(update:Annee ,id:number) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.put<any>(`${this.baseUrl}` + \"/update/\"+id, JSON.stringify(update), httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"MODIFICATION REUSSIE\")),  \r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  activeAnnee(id:number){\r\n    return this.http.get<Annee>(`${this.baseUrl}/activer/${id}`);\r\n  }\r\n\r\n  activeSemestre(id:number){\r\n    return this.http.get<Annee>(`${this.baseUrl}/semestre/activer/${id}`);\r\n  }\r\n\r\n  delete(id:number) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.delete<any>(`${this.baseUrl}` + \"/delete/\"+id, httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"SUPRESSION REUSSIE\")),  \r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getSemestres(){\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.get<Semestre[]>(`${this.baseUrl}`+'/semestres');\r\n  }\r\n}\r\n","import { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { map, tap } from 'rxjs';\r\nimport { environment } from 'src/environments/environment.development';\r\n\r\nconst BASE_URL = environment.apiURL;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  private http = inject(HttpClient);\r\n  constructor() { }\r\n\r\n  getToken(){\r\n    return localStorage.getItem(\"token\");\r\n  }\r\n\r\n  loginUser(token:string,username:string):boolean\r\n  {\r\n    localStorage.setItem(\"token\",token);\r\n    localStorage.setItem(\"username\",username);\r\n    return true;\r\n  }\r\n\r\n  isLoggedIn():boolean\r\n  {\r\n    let token = localStorage.getItem(\"token\");\r\n    if(token == undefined || token ==''){\r\n      return false;\r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n  login(username: string, password: string): any {\r\n    return this.http.post<[]>(BASE_URL + 'auth/login',\r\n      { username, password },\r\n      { observe: 'response' });\r\n  }\r\n\r\n  log(message: string): void {\r\n    console.log(\"User Auth Service \" + message);\r\n  }\r\n\r\n  logout()\r\n  {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"username\");\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Classe } from 'src/app/models/Classe';\r\nimport { environment } from 'src/environments/environment.development';\r\nimport { map, tap } from 'rxjs';\r\nimport { ClassWithFiliere } from 'src/app/models/ClassWithFiliere';\r\nimport { MatiereUE } from 'src/app/models/MatiereUe';\r\nimport { UE } from 'src/app/models/UE';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClasseService {\r\n  baseUrl = environment.apiURL + \"classe\";\r\n\r\n  constructor(private http: HttpClient, private toastr: ToastrService) { }\r\n\r\n  \r\n  getAll() {\r\n    return this.http.get<ClassWithFiliere[]>(`${this.baseUrl}`+'/anneescolaire');\r\n  }\r\n\r\n  getById(id:number) {\r\n    return this.http.get<ClassWithFiliere>(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  getMatieresById(id:number) {\r\n    return this.http.get<MatiereUE[]>(`${this.baseUrl}/matieres/${id}`);\r\n  }\r\n  \r\n  getUesById(id:number) {\r\n    return this.http.get<UE[]>(`${this.baseUrl}/ues/${id}`);\r\n  }\r\n\r\n  getByFiliereAnneeNiveau(id:number,annee:number,niveau:number) {\r\n    return this.http.get<Classe[]>(`${this.baseUrl}/${id}/${annee}/${niveau}`);\r\n  }\r\n\r\n  postRegistration(register: Classe) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.post<any>(`${this.baseUrl}` + \"/register\", JSON.stringify(register), httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"ENREGISTREMENT REUSSIE\")),\r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  putUpdate(update: Classe,id:number) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.put<any>(`${this.baseUrl}` + \"/update/\"+id, JSON.stringify(update), httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"MODIFICATION REUSSIE\")),  \r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  delete(id:number) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.delete<any>(`${this.baseUrl}` + \"/delete/\"+id, httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"SUPRESSION REUSSIE\")),  \r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { Subject } from 'rxjs';\nimport { Injectable, OnDestroy } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DestroyService  implements OnDestroy{\n\n  private destroy$ = new Subject<void>();\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get onDestroy$(): Subject<void> {\n    return this.destroy$;\n  }\n}\n","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { map, tap } from 'rxjs';\r\nimport { Enseigner } from 'src/app/models/Enseigner';\r\nimport { EnseignerProf } from 'src/app/models/EnseignerProf';\r\nimport { environment } from 'src/environments/environment.development';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EnseignerService {\r\n  baseUrl = environment.apiURL + \"enseigner\";\r\n\r\n  constructor(private http: HttpClient, private toastr: ToastrService) { }\r\n\r\n  getAll(id:number){\r\n    return this.http.get<EnseignerProf[]>(`${this.baseUrl}`+'/professeur/'+id);\r\n  }\r\n\r\n  postRegistration(register: Enseigner) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.post<any>(`${this.baseUrl}` + \"/register\", JSON.stringify(register), httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"ENREGISTREMENT REUSSIE\")),\r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  postProfesseurRegistration(register: Enseigner) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.post<any>(`${this.baseUrl}` + \"/professeur/register\", JSON.stringify(register), httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"ENREGISTREMENT REUSSIE\")),\r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  delete(id:number) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.delete<any>(`${this.baseUrl}` + \"/delete/\"+id, httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"SUPRESSION REUSSIE\")),  \r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { map, tap } from 'rxjs';\r\nimport { Etudiant } from 'src/app/models/Etudiant';\r\nimport { environment } from 'src/environments/environment.development';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EtudiantService {\r\n  baseUrl = environment.apiURL + \"etudiant\";\r\n\r\n  constructor(private http:HttpClient,private toastr: ToastrService) { }\r\n\r\n  public getAll() {\r\n    return this.http.get<Etudiant[]>(`${this.baseUrl}`);\r\n  }\r\n\r\n  getByMatricule(matricule:String) {\r\n    return this.http.get<Etudiant>(`${this.baseUrl}/${matricule}`);\r\n  }\r\n\r\n  postRegistration(register: Etudiant) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.post<any>(`${this.baseUrl}` + \"/register\", JSON.stringify(register), httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"ENREGISTREMENT REUSSIE\")),\r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  putUpdate(update: Etudiant,matricule:String) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.put<any>(`${this.baseUrl}` + \"/update/\"+matricule, JSON.stringify(update), httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"MODIFICATION REUSSIE\")),\r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  delete(id:number) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.delete<any>(`${this.baseUrl}` + \"/delete/\"+id, httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"SUPRESSION REUSSIE\")),  \r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Filiere } from 'src/app/models/Filiere';\r\nimport { environment } from 'src/environments/environment.development';\r\nimport { map, tap } from 'rxjs';\r\nimport { UE } from 'src/app/models/UE';\r\nimport { Classe } from 'src/app/models/Classe';\r\nimport { FiliereUeDto } from 'src/app/models/FiliereUeDto';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FiliereService {\r\n  baseUrl = environment.apiURL + \"filiere\";\r\n  private http = inject(HttpClient);\r\n  private toastr = inject(ToastrService);\r\n\r\n  public getAll() {\r\n    return this.http.get<Filiere[]>(`${this.baseUrl}`);\r\n  }\r\n\r\n  getById(id:number) {\r\n    return this.http.get<Filiere>(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  getUesDtoById(id:number){\r\n    return this.http.get<FiliereUeDto[]>(`${this.baseUrl}/ues/dto/${id}`);\r\n  }\r\n\r\n  getUesById(id:number){\r\n    return this.http.get<UE[]>(`${this.baseUrl}/ues/${id}`);\r\n  }\r\n\r\n  getClassesById(id:number){\r\n    return this.http.get<Classe[]>(`${this.baseUrl}/classes/${id}`);\r\n  }\r\n\r\n  postRegistration(register: Filiere) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.post<any>(`${this.baseUrl}` + \"/register\", JSON.stringify(register), httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"ENREGISTREMENT REUSSIE\")),\r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  putUpdate(update: Filiere,id:number) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.put<any>(`${this.baseUrl}` + \"/update/\"+id, JSON.stringify(update), httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"MODIFICATION REUSSIE\")),  \r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  delete(id:number) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.delete<any>(`${this.baseUrl}` + \"/delete/\"+id, httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"SUPRESSION REUSSIE\")),  \r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { map, tap } from 'rxjs';\r\nimport { FiliereUE } from 'src/app/models/FiliereUE';\r\nimport { UE } from 'src/app/models/UE';\r\nimport { environment } from 'src/environments/environment.development';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FiliereueService {\r\n  baseUrl = environment.apiURL + \"filiereue\";\r\n\r\n  constructor(private http: HttpClient, private toastr: ToastrService) { }\r\n\r\n  postRegistration(register: FiliereUE) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.post<any>(`${this.baseUrl}` + \"/register\", JSON.stringify(register), httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"ENREGISTREMENT REUSSIE\")),\r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  delete(id:number) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.delete<any>(`${this.baseUrl}` + \"/delete/\"+id, httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"SUPRESSION REUSSIE\")),  \r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { map, tap } from 'rxjs';\r\nimport { Etudiant } from 'src/app/models/Etudiant';\r\nimport { Inscription } from 'src/app/models/Inscription';\r\nimport { InscriptionDto } from 'src/app/models/InscriptionDto';\r\nimport { environment } from 'src/environments/environment.development';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InscriptionService {\r\n  baseUrl = environment.apiURL + \"inscripiton\";\r\n\r\n  constructor(private http: HttpClient, private toastr: ToastrService) {}\r\n\r\n  postRegistration(register: Inscription) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.post<any>(`${this.baseUrl}` + \"/register\", JSON.stringify(register), httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"ENREGISTREMENT REUSSIE\")),\r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getAll() {\r\n    return this.http.get<InscriptionDto[]>(`${this.baseUrl}`);\r\n  }\r\n\r\n  getAllInscriptionsByYear(){\r\n    return this.http.get<InscriptionDto[]>(`${this.baseUrl}` +\"/inscriptions/annee\");\r\n  }\r\n\r\n  getAllEtudiantsByYear(){\r\n    return this.http.get<Etudiant[]>(`${this.baseUrl}` +\"/etudiants/annee\");\r\n  }\r\n\r\n  getAllEtudiantsByClasse(id:Number){\r\n    return this.http.get<Etudiant[]>(`${this.baseUrl}` +\"/etudiants/classe/\"+id);\r\n  }\r\n\r\n  delete(id:number) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.delete<any>(`${this.baseUrl}` + \"/delete/\"+id, httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"SUPRESSION REUSSIE\")),  \r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Observable, tap } from 'rxjs';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { LoaderService } from './loader.service';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoaderInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(public loaderSerivce: LoaderService) { }\r\n\r\n  intercept(httpRequest: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    this.loaderSerivce.isLoading.next(true);\r\n    return next.handle(httpRequest).pipe(\r\n      tap(console.log),\r\n      finalize(() => {\r\n        this.loaderSerivce.isLoading\r\n        .next(false)\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoaderService {\r\n  public isLoading:BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  constructor() { }\r\n}\r\n","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Matiere } from 'src/app/models/Matiere';\r\nimport { environment } from 'src/environments/environment.development';\r\nimport { map, tap } from 'rxjs';\r\nimport { MatiereUE } from 'src/app/models/MatiereUe';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MatiereService {\r\n  baseUrl = environment.apiURL + \"matiere\";\r\n  private http = inject(HttpClient);\r\n  private toastr = inject(ToastrService);\r\n  \r\n  getAll() {\r\n    return this.http.get<MatiereUE[]>(`${this.baseUrl}`);\r\n  }\r\n\r\n  getById(id:number) {\r\n    return this.http.get<MatiereUE>(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  postRegistration(register: Matiere) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.post<any>(`${this.baseUrl}` + \"/register\", JSON.stringify(register), httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"ENREGISTREMENT REUSSIE\")),\r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  putUpdate(update: Matiere,id:number) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.put<any>(`${this.baseUrl}` + \"/update/\"+id, JSON.stringify(update), httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"MODIFICATION REUSSIE\")),  \r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  delete(id:number) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.delete<any>(`${this.baseUrl}` + \"/delete/\"+id, httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"SUPRESSION REUSSIE\")),  \r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { map, tap } from 'rxjs';\r\nimport { NoteDto } from 'src/app/models/NoteDto';\r\nimport { NoteDtoProf } from 'src/app/models/NoteDtoProf';\r\nimport { environment } from 'src/environments/environment.development';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NoteService {\r\n  baseUrl = environment.apiURL + \"notes\";\r\n  private http = inject(HttpClient);\r\n  private toastr = inject(ToastrService);\r\n\r\n  getNotes(matiere: Number, classe: Number) {\r\n    return this.http.get<NoteDto[]>(`${this.baseUrl}/${matiere}/${classe}`);\r\n  }\r\n\r\n  getEtudiantNotes(etudiant: String, classe: Number) {\r\n    return this.http.get<NoteDtoProf[]>(`${this.baseUrl}/etudiant/${etudiant}/${classe}`);\r\n  }\r\n\r\n  postRegistration(register: NoteDto, matiere: Number, classe: Number) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.post<any>(`${this.baseUrl}` + \"/register\" + `/${matiere}/${classe}`, JSON.stringify(register), httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"ENREGISTREMENT REUSSIE\")),\r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { map, tap } from 'rxjs';\r\nimport { Professeur } from 'src/app/models/Professeur';\r\nimport { environment } from 'src/environments/environment.development';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfService {\r\n  baseUrl = environment.apiURL + \"prof\";\r\n\r\n  constructor(private http: HttpClient, private toastr: ToastrService) { }\r\n\r\n  \r\n  getAll() {\r\n    return this.http.get<Professeur[]>(`${this.baseUrl}`);\r\n  }\r\n\r\n  getById(id:number) {\r\n    return this.http.get<Professeur>(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  postRegistration(register: Professeur) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.post<any>(`${this.baseUrl}` + \"/register\", JSON.stringify(register), httpOptions);\r\n  }\r\n\r\n  putUpdate(update: Professeur,id:number) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.put<any>(`${this.baseUrl}` + \"/update/\"+id, JSON.stringify(update), httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"MODIFICATION REUSSIE\")),  \r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  delete(id:number) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.delete<any>(`${this.baseUrl}` + \"/delete/\"+id, httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"SUPRESSION REUSSIE\")),  \r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Notes } from 'src/app/models/Note';\r\nimport { NoteDto } from 'src/app/models/NoteDto';\r\nimport { environment } from 'src/environments/environment.development';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReportService {\r\n  baseUrl = environment.apiURL + \"report\";\r\n  constructor(private http: HttpClient, private toastr: ToastrService) { }\r\n\r\n  getReportFicheComplet(matiere:Number,classe:Number,format:String) {\r\n    return this.http.get<NoteDto[]>(`${this.baseUrl}/${matiere}/${classe}/${format}`);\r\n  }\r\n\r\n  getReportFiche(matiere:Number,classe:Number,format:String) {\r\n    return this.http.get<Notes[]>(`${this.baseUrl}/fiche/${matiere}/${classe}/${format}`);\r\n  }\r\n\r\n  getReportReleve(matricule:String,classe:Number,format:String) {\r\n    return this.http.get<Notes[]>(`${this.baseUrl}/releve/${matricule}/${classe}/${format}`);\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { map, tap } from 'rxjs';\r\nimport { Matiere } from 'src/app/models/Matiere';\r\nimport { UE } from 'src/app/models/UE';\r\nimport { environment } from 'src/environments/environment.development';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UeService {\r\n  baseUrl = environment.apiURL + \"ue\";\r\n  private http = inject(HttpClient);\r\n  private toastr = inject(ToastrService);\r\n\r\n  getAllUes() {\r\n    return this.http.get<UE[]>(`${this.baseUrl}`);\r\n  }\r\n\r\n  getMatieresById(id:number) {\r\n    return this.http.get<Matiere[]>(`${this.baseUrl}`+'/matieres/'+id);\r\n  }\r\n\r\n  getById(id: number) {\r\n    return this.http.get<UE>(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  postRegistration(register: UE) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.post<any>(`${this.baseUrl}` + \"/register\", JSON.stringify(register), httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"ENREGISTREMENT REUSSIE\")),\r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  putUpdate(update: UE, id: number) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.put<any>(`${this.baseUrl}` + \"/update/\" + id, JSON.stringify(update), httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"MODIFICATION REUSSIE\")),\r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  delete(id: number) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) }\r\n    return this.http.delete<any>(`${this.baseUrl}` + \"/delete/\" + id, httpOptions).pipe(\r\n      tap(_ => this.toastr.success(\"SUPRESSION REUSSIE\")),\r\n      map((res: HttpResponse<any>) => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport Scrollbar from 'smooth-scrollbar';\r\nimport { LoaderService } from '../services/loader/loader.service';\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  constructor(private router: Router) { }\r\n  ngOnInit(): void {\r\n    Scrollbar.init(document.querySelector('#scroll')!);\r\n  }\r\n  isRouteActive(routePath: string): boolean {\r\n    if (routePath == this.router.url || routePath + \"/create\" == this.router.url) {\r\n      return true;\r\n    }else if ( routePath + \"/relevedenotes\" == this.router.url || routePath + \"/fichedenotes\" == this.router.url) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","<div class=\"sidebar\" id=\"sidebar\" style=\"z-index: 0;\">\r\n\r\n    <div class=\"sidebar-inner slimscroll\" id=\"scroll\">\r\n\r\n        <div id=\"sidebar-menu\" class=\"sidebar-menu\">\r\n            <ul>\r\n                <li class=\"menu-title\">\r\n                    <span>ESTABAT</span>\r\n                </li>\r\n\r\n                <li [class.active]=\"isRouteActive('/dashboard/')\">\r\n                    <a routerLinkActive=\"active\" [routerLink]=\"['/dashboard']\">\r\n                        <i class=\"feather-grid\" style=\"color:black\"></i>\r\n                        <!-- <span>ANNEE SCOLAIRE</span> -->\r\n                        <button mat-button>TABLEAU DE BORD</button>\r\n                    </a>\r\n                </li>\r\n                <li [class.active]=\"isRouteActive('/dashboard/')\">\r\n                    <a routerLinkActive=\"active\">\r\n                        <i class=\"fas fa-calendar\"></i>\r\n                        <!-- <span>ANNEE SCOLAIRE</span> -->\r\n                        <button mat-button [matMenuTriggerFor]=\"menu4\">PERIODE SCOLAIRES</button>\r\n                        <mat-menu #menu4=\"matMenu\">\r\n                            <a mat-menu-item [routerLink]=\"['/dashboard/annee']\">ANNEE SCOLAIRE</a>\r\n                            <a mat-menu-item [routerLink]=\"['/dashboard/semestre']\">SEMESTRE</a>\r\n                        </mat-menu></a>\r\n                </li>\r\n                <li [class.active]=\"isRouteActive('/dashboard/etudiant')\">\r\n                    <a routerLinkActive=\"active\">\r\n                        <i class=\"fas fa-users\"></i>\r\n                        <!-- <span>ANNEE SCOLAIRE</span> -->\r\n                        <button mat-button [matMenuTriggerFor]=\"menu3\">GESTION ÉTUDIANTE</button>\r\n                        <mat-menu #menu3=\"matMenu\">\r\n                            <a mat-menu-item [routerLink]=\"['/dashboard/etudiant/inscriptions']\">INSCRIPTIONS</a>\r\n                            <a mat-menu-item [routerLink]=\"['/dashboard/etudiant']\">ETUDIANTS</a>\r\n                        </mat-menu></a>\r\n                </li>\r\n                <li [class.active]=\"isRouteActive('/dashboard/notes')\">\r\n                    <a [routerLink]=\"['/dashboard/notes']\" routerLinkActive=\"active\">\r\n                        <i style=\"color:black\" class=\"fas fa-clipboard\"></i>\r\n                        <button mat-button>NOTES</button></a>\r\n                </li>\r\n\r\n                <li [class.active]=\"isRouteActive('/dashboard/report')\">\r\n                    <a routerLinkActive=\"active\">\r\n                        <i class=\"fas fa-file\"></i>\r\n                        <!-- <span>ANNEE SCOLAIRE</span> -->\r\n                        <button mat-button [matMenuTriggerFor]=\"menu2\">ETAT D' IMPRESSION</button>\r\n                        <mat-menu #menu2=\"matMenu\">\r\n                            <a mat-menu-item [routerLink]=\"['/dashboard/report/fichedenotes']\">FICHE DE NOTES</a>\r\n                            <a mat-menu-item [routerLink]=\"['/dashboard/report/relevedenotes']\">RELEVES DE NOTES</a>\r\n                        </mat-menu></a>\r\n                </li>\r\n                <li>\r\n                    <a routerLinkActive=\"active\">\r\n                        <i style=\"color: black;\" class=\"fas fa-book\"></i>\r\n                        <!-- <span>ANNEE SCOLAIRE</span> -->\r\n                        <button mat-button [matMenuTriggerFor]=\"menu5\">UE ET MATIÈRES</button>\r\n                        <mat-menu #menu5=\"matMenu\">\r\n                            <a mat-menu-item [routerLink]=\"['/dashboard/ue']\">UES</a>\r\n                            <a mat-menu-item [routerLink]=\"['/dashboard/matiere']\">MATIERES</a>\r\n                        </mat-menu></a>\r\n                </li>\r\n                <li>\r\n                    <a routerLinkActive=\"active\">\r\n                        <i style=\"color: black;\" class=\"fas fa-building\"></i>\r\n                        <!-- <span>ANNEE SCOLAIRE</span> -->\r\n                        <button mat-button [matMenuTriggerFor]=\"menu6\">PARCOURS ÉDUCATIFS</button>\r\n                        <mat-menu #menu6=\"matMenu\">\r\n                            <a mat-menu-item [routerLink]=\"['/dashboard/filiere']\">FILIERE</a>\r\n                            <a mat-menu-item [routerLink]=\"['/dashboard/classe']\">CLASSE</a>\r\n                        </mat-menu></a>\r\n                </li>\r\n                <li [class.active]=\"isRouteActive('/dashboard/professeur')\">\r\n                    <a [routerLink]=\"['/dashboard/professeur']\" routerLinkActive=\"active\">\r\n                        <i style=\"color: black;\" class=\"fas fa-chalkboard-teacher\"></i>\r\n                        <button mat-button>PROFESSEUR</button></a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>","export const environment = {\r\n    production: true,\r\n    apiURL: 'http://localhost:8080/api/v1/'\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","DashboardComponent","LoginComponent","AuthGuard","NoauthGuard","ListUeComponent","CreateUeComponent","UpdateUeComponent","ListMatiereComponent","CreateMatiereComponent","UpdateMatiereComponent","ListFiliereComponent","CreateFiliereComponent","UpdateFiliereComponent","ListClasseComponent","CreateClasseComponent","UpdateClasseComponent","ListSemestreComponent","ListAnneeScolaireComponent","CreateAnneeScolaireComponent","UpdateAnneeScolaireComponent","ListProfComponent","CreateProfComponent","UpdateProfComponent","MatieresProfComponent","FiliereUeComponent","ListEtudiantComponent","CreateEtudiantComponent","UpdateEtudiantComponent","InscriptionComponent","InscriptionListeComponent","NoteComponent","ClasseStudentsComponent","ClasseMatieresComponent","EtudiantNotesComponent","FicheComponent","ReleveComponent","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","exports","i0","AppComponent","constructor","router","isRouteActive","routePath","isActive","selectors","decls","vars","consts","template","BrowserModule","SidebarComponent","HeaderComponent","BrowserAnimationsModule","MaterialDesignModule","ToastrModule","SweetAlert2Module","FormsModule","ReactiveFormsModule","HTTP_INTERCEPTORS","HttpClientModule","ProfAddEditComponent","LoaderInterceptorService","CommonModule","AppModule","bootstrap","provide","useClass","multi","declarations","takeUntil","inject","FormBuilder","Validators","ToastrService","AnneeService","DestroyService","ngOnInit","registerForm","fb","group","name","required","minLength","enabled","dateDebut","dateFin","register","annee","value","service","postRegistration","pipe","destroyService","onDestroy$","subscribe","next","setValue","error","toastr","get","ctx","MatPaginator","MatSort","MatTableDataSource","Router","getAll","applyFilter","event","filterValue","target","dataSource","filter","trim","toLowerCase","paginator","firstPage","response","annees","sort","edit","id","navigate","delete","changeActive","activeAnnee","result","viewQuery","ActivatedRoute","updateForm","route","paramMap","Number","getById","res","fillForm","fc","controls","update","putUpdate","status","MatDialog","ClasseService","MatiereService","classe","getAllMatieres","openAddEditProfesseur","matiereService","matiere","dialogData","dialogRef","dialog","open","data","afterClosed","registrationSuccess","getMatieresById","InscriptionService","getAllEtudiants","getAllEtudiantsByClasse","etudiants","notes","export","FormControl","of","filiereService","filiere","filiereControl","niveau","effectif","getAllFilieres","valueChanges","val","filteredOptions","findFilieres","initializeFilieres","filieres","option","includes","getValueNiveau","niveauM","displayFiliere","getAllClasses","classes","getStudents","getMatieres","MAT_DIALOG_DATA","EnseignerService","ProfService","MatDialogRef","getAllProfesseurs","initializeForm","profControl","profOptions","findProfesseurs","professeur","initializeProfesseurs","professeurs","displayProfesseurs","prenoms","profService","console","log","close","enseignerService","postProfesseurRegistration","FiliereService","classeF","EtudiantService","currentDate","Date","currentYear","getFullYear","currentMonth","getMonth","currentDay","getDate","maxDate","maxDateAd","matricule","age","maxLength","telephone","dateNaiss","tuteur","tuteurTel","dateAdmission","nationalite","sexe","photo","etudiant","validateNumber","input","key","isNumber","test","isBackspace","isPlus","isSpace","preventDefault","onSelectedFile","files","formBuilder","etudiantService","noteForms","array","idEtudiant","String","idClasse","getAllNotes","getByMatricule","getEtudiantNotes","notesDtos","formArray","forEach","push","createNoteFormGroup","err","note","matiereName","idMatiere","moyenne","moyenneClasse","noteDefinitive","appreciations","devoirOne","devoirTwo","examen","exportExcel","exportPdf","getAllInscriptionsByYear","inscriptions","inscription","loadDataFromMatriculeParam","subscribeToFormChanges","dateInscription","typeInscription","classeControl","etudiantControl","toString","getEtudiantById","filteredFilieres","filteredClasses","findClasses","onSelectedFiliere","fullName","checkAnne","fetchClasses","classeService","getByFiliereAnneeNiveau","initializeClasses","displayClasse","inscripiton","file","ueService","ue","ueControl","semestre","active","getAllUes","findUes","getFiliereByid","getAllFiliereUes","initializeUes","ues","code","displayUe","getUesDtoById","uesT","getUes","UeService","credit","matieres","subscribeToRouteParams","MatiereUE","reportService","loadForm","matiereControl","filteredUes","filteredMatieres","findMatieres","idFiliere","anneeControl","niveauControl","onSelectedClasse","onSelectedUe","getUesById","getNotes","displayMatiere","loadNotes","isShow","coef","index","nom","initializeMatieres","getReportFicheComplet","info","pattern","adresse","email","dateEmb","success","resetForm","reset","DatePipe","LOCALE_ID","registerLocaleData","localeFr","profs","useValue","getAllEnseigner","getProfesseurById","getClassesById","enseigners","prof","ReportService","ficheForm","exportExcelFiche","getReportFiche","exportExcelCompletFiche","exportPdfFiche","exportPdfCompletFiche","releveForm","load","inscriptionService","exportExcelReleve","getReportReleve","exportPdfReleve","exportExcelReleveClasse","exportPdfReleveClasse","element","getAllSemestres","semestres","activeSemestre","message","label","totalCredit","codeId","loginService","state","isLoggedIn","factory","providedIn","loaderService","logout","check","LoginService","validateForm","username","password","login","loginUser","body","token","MatButtonModule","MatCardModule","MatToolbarModule","MatProgressSpinnerModule","MatProgressBarModule","MatFormFieldModule","MatInputModule","MatTooltipModule","MatIconModule","MatRadioModule","MatSelectModule","MAT_DATE_LOCALE","MatNativeDateModule","MatPaginatorModule","MatDatepickerModule","MatSortModule","MatTableModule","MatAutocompleteModule","MatSlideToggleModule","MatDialogModule","MatSidenavModule","MatListModule","MatMenuModule","HttpClient","HttpHeaders","map","tap","environment","apiURL","http","baseUrl","httpOptions","headers","post","JSON","stringify","_","put","getSemestres","BASE_URL","getToken","localStorage","getItem","setItem","undefined","observe","removeItem","Subject","ngOnDestroy","destroy$","complete","FiliereueService","getAllEtudiantsByYear","finalize","loaderSerivce","intercept","httpRequest","isLoading","handle","BehaviorSubject","LoaderService","NoteService","format","Scrollbar","init","document","querySelector","url","production","__NgCli_bootstrap_1","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}